{"version":3,"sources":["components/ui/layout.tsx","types/audio.ts","worker/worker.ts","worker/index.ts","utilities/utils.ts","controllers/chat.ts","controllers/recorder.ts","types/errors.ts","components/ui/icons/icon.tsx","components/ui/icons/mic.tsx","components/ui/animated/spinner.tsx","components/ui/animated/swipe.tsx","components/ui/icons/headset.tsx","components/ui/icons/headset-muted.tsx","components/chat/controls.tsx","components/chat/progress-bar.tsx","components/chat/recordings.tsx","components/ui/input/text-input.tsx","constants/talkingpoints.ts","components/chat/talkingpoints.tsx","components/chat/status-messages.tsx","components/ui/modal/styles.tsx","components/ui/modal/modal.tsx","components/chat/remove-warning-modal.tsx","services/api.ts","components/chat/room.tsx","constants/demographics.ts","components/ui/icons/dropdown-arrow.tsx","components/ui/animated/show-more.tsx","components/setup/information.tsx","components/ui/input/dropdown.tsx","components/ui/icons/check-mark.tsx","components/ui/input/checkbox.tsx","components/setup/new-tab-link.tsx","constants/is-is.ts","components/ui/unsupported-browser.tsx","utilities/local-storage.ts","components/setup/demographics.tsx","components/setup/setup.tsx","components/setup/thanks.tsx","components/frontpage/index.tsx","components/leaderboard/barlist.tsx","components/admin/session.tsx","components/admin/stat.tsx","components/admin/stats.tsx","components/admin/index.tsx","components/legal/legaldocument.tsx","components/leaderboard/index.tsx","constants/terms.ts","constants/privacypolicy.ts","app.tsx","index.tsx"],"names":["RecordingError","AudioError","LayoutContainer","styled","div","Padding","Header","Title","h1","StyledLink","a","Layout","children","href","Worker","isRecordingSupported","window","MediaRecorder","navigator","mediaDevices","getUserMedia","webkitGetUserMedia","mozGetUserMedia","isMicrophoneSupported","splitSeconds","seconds","h2","m1","m2","s1","s2","hours","Math","floor","minutes","remainingSeconds","Array","from","toString","getHumanReadableTime","mins","map","digit","displayh1","displaym1","displays1","join","ChatState","VoiceState","CallState","RecordingState","Recorder","sampleRate","chunkInterval","microphone","audioContext","encoder","sourceNode","processorNode","gainNode","onChunkReceived","chunks","isRecording","isReady","getMicrophone","Promise","resolve","reject","options","audio","channelCount","deny","error","NotAllowedError","MIC_NOT_ALLOWED","NotFoundError","NO_MIC","name","then","NO_MIC_SUPPORT","start","connect","destination","onmessage","event","data","chunk","command","push","this","onaudioprocess","ev","downsampled","downsampleBuffer","inputBuffer","postMessage","buffer","startChunkRequesting","console","setTimeout","requestChunk","getBlobDuration","url","tempVideoEl","document","createElement","src","addEventListener","duration","stop","disconnect","blob","chunkCount","URL","createObjectURL","init","recordingStream","clone","rtcStream","getAudioTracks","getSettings","AudioContext","webkitAudioContext","createMediaStreamSource","context","createScriptProcessor","createGain","gain","value","mute","unMute","startRecording","log","clearRecording","stopRecording","release","getTracks","undefined","getMissingChunks","missingChunks","foundMissingChunks","missing","WavEncoder","rate","sampleRateRatio","newLength","round","length","result","Float32Array","offsetResult","offsetBuffer","nowBuffering","getChannelData","nextOffsetBuffer","accum","count","i","MicError","message","Error","captureStackTrace","RTCError","Chat","socketUrl","userClient","incomingOffer","onRecordingAgreement","onAnswered","onAudioTrack","onClientsChanged","onIsOwnerChanged","onRecordingStopped","onRecordingStateChanged","onChatStateChanged","onVoiceStateChanged","onUpload","onError","recorder","rtcConnection","rtcConfiguration","socket","callState","chatState","recordingState","voiceState","clients","sessionId","reconnecting","timeout","timeoutIncrement","unsentMessages","isChatroomOwner","isDisconnecting","joinedMidRecording","handleChunkReceived","audioChunk","id","setCallState","state","setChatState","setRecordingState","setVoiceState","getVoiceState","openSocket","setUsername","username","openRTC","startPingPong","CONNECTED","WebSocket","onopen","onerror","e","onclose","DISCONNECTED","reconnect","JSON","parse","onMessage","connection","RTCPeerConnection","ontrack","remoteAudio","streams","onicecandidate","candidate","sendMessage","type","forEach","track","addTrack","isWebSocketOpen","readyState","OPEN","sendUnsentMessages","delay","warn","min","VOICE_CONNECTED","info","payload","send","stringify","handleNewClient","handleClientDisconnected","handleClientChanged","handleIncomingCall","handleIncomingAnswer","handleIncomingCandidate","handleSessionId","handleStartRecording","handleStopRecording","handleCancelRecording","handleHangUp","handleError","handleIsChatRoomOwner","handleUpload","handlePong","handleStartMidRecording","updateClient","update","all","client","newClients","user","some","RECORDING","filter","parameter","agreed","voice","offer","INCOMING_CALL","answer","IDLE","description","RTCSessionDescription","setRemoteDescription","RTCIceCandidate","addIceCandidate","RECORDING_REQUESTED","NOT_RECORDING","recording","close","HUNG_UP","find","call","VOICE_DISCONNECTED","hangUp","createOffer","setLocalDescription","IS_CALLING","createAnswer","sessionIdOther","includes","replace","isOwner","sendAgreement","requestRecording","uuid","cancelRecording","uploadOther","iceServers","urls","Icon","svg","attrs","version","xmlns","xmlnsXlink","height","width","fill","Mic","props","viewBox","className","d","spin","keyframes","LoadingSpinning","SwapContainer","second","FakeContainer","SwipeSwap","firstFakeRef","React","secondFakeRef","componentDidMount","firstWidth","current","clientWidth","secondWidth","setState","max","firstHeight","clientHeight","secondHeight","ref","firstChild","isArray","secondChild","Headset","HeadsetMuted","ControlsContainer","Swipe","ButtonsContainer","MainButtonContainer","isActive","MainButton","button","Glow","red","RecordIcon","active","SubmitButtons","SubmitButtonsContainer","SpinnerContainer","Button","green","Controls","interval","handleVoice","chat","catch","err","createToast","handleRecord","handleConfirm","confirm","handleRemove","onRemove","handleOnSubmit","submitted","onSubmit","chatRoomOwner","onClick","title","Wrapper","ProgressBarContainer","Filler","ratio","style","maxWidth","Splitter","pos","Indicator","ProgressBar","val","minPosition","RecordingsContainer","StopwatchContainer","Recording","maxSeconds","minSeconds","componentDidUpdate","prevProps","startStopwatch","stopStopwatch","setInterval","clearInterval","timestampString","getTimestampString","autoPlayAfterSrcChange","customAdditionalControls","customControlsSection","RHAP_UI","MAIN_CONTROLS","VOLUME_CONTROLS","layout","showJumpControls","volume","InputContainer","TextInputContainer","input","Label","span","TextInput","onFocusOut","componentWillUnmount","removeEventListener","onFocus","label","talkingpoints","TalkingPointContainer","TalkingPointInput","TalkingPoint","talkingPoints","displayTalkingPoint","talkingNumber","array","j","random","shuffleArray","talkingpoint","display","readOnly","MessagesContainer","StatusMessages","hasRecording","statusMessage","status","getStatusMessage","ReactModal","setAppElement","Modal","contentClassName","overlayClassName","closeTimeoutMS","portalClassName","DefaultModal","Content","Text","RemoveLink","RemoveWarningModal","onClose","isOpen","onRequestClose","downloadSession","endpointurl","getApiUrl","location","getSessions","partial","axios","method","response","code","uploadChunk","demographics","isMissing","formData","FormData","append","jsonString","age","gender","session_id","reference","metadata","Blob","chunkId","numberToPaddedString","chunkNumber","headers","chunk_id","is_missing","verifyChunks","apiUrl","chunk_count","resp","recordingFinished","duration_seconds","sample_rate","apiPath","pathname","origin","toPad","padStart","removeRecording","uploadMissingChunk","ChatroomContainer","CounterContainer","UserList","ListItem","ListHeader","HeaderItem","Audio","connected","ShareButton","soloRecord","StyledToastContainer","ToastContainer","toastClassName","bodyClassName","progressClassName","ErrorContainer","ErrorMessage","Chatroom","audioRef","clientsRequired","shareButtonRef","video","constructSocketUrl","handleClientsChanged","handleOwnerChanged","handleRecordingStateChanged","handleChatStateChanged","handleVoiceStateChanged","handleChatError","stream","srcObject","handleOnChunkReceived","handleOnUpload","alertUser","addPushState","alertUserBack","setupFakeVideo","body","playFakeVideo","setAttribute","base64","mimeType","addSourceToVideo","element","dataURI","source","appendChild","play","preventDefault","returnValue","history","alert","pushState","api","isCountingDown","startCountdown","countdown","removeCountdown","clearTimeout","isRecordingAllowed","toast","toastId","focus","scrollIntoView","every","c","toLowerCase","roomId","match","params","parts","protocol","host","split","splice","endpoint","concat","submit","copyToClipBoard","dismiss","clipboard","writeText","showWarningModal","showModal","closeWarningModal","toastMessage","key","autoPlay","controls","position","hideProgressBar","draggable","pauseOnHover","transition","Slide","withRouter","ages","genders","references","members","students","DropdownArrow","points","ShowMoreContainer","calculate","FakeChildren","ShowMore","fakeChildrenRef","InformationContainer","TitleContainer","ReadMoreContainer","Arrow","DropdownArrowIcon","Information","readMore","setReadMore","recursiveMap","fn","Children","child","isValidElement","cloneElement","tabIndex","DropdownButtonContainer","visible","DropdownSelect","select","DropdownItem","option","DropdownButton","selectRef","onFocusIn","onSelect","currentTarget","content","selected","onChange","CheckMark","CheckboxContainer","CheckboxInput","CheckMarkIcon","Checkbox","checked","useState","setFocus","inputRef","useRef","useLayoutEffect","NewTabLink","target","rel","unsupportedText","UnsupportedBrowserContainer","UnsupportedBrowser","defaultDemographics","combineWithDefault","demo","combinedDemographics","demographicFound","demographicArray","demographic","DemographicContainer","form","UsernameInput","Info","SubmitButton","disabled","AgreeContainer","DemographicForm","handleAgree","onUsernameChange","onAgeSelect","onGenderSelect","onReferenceSelect","localStorage","setItem","getItem","demoString","parsedDemographics","loadDemographics","SetupContainer","Setup","onSubmitDemographics","uploading","uploaded","uploadError","ThanksContainer","Thanks","handleClick","FrontPageContainer","JoinContainer","UrlInput","RobotAndJoinContainer","MarsContainer","Mars","WelcomeTextContainer","FrontPage","onUrlChange","userUrl","handleJoin","Date","placeholder","LeaderBoardContainer","LeaderBoardItem","LeaderBoardBar","percents","Board","getInitialLeaderBoard","l","participants","collected","calculateLeaderBoard","showPartial","leaderBoard","sessions","session","client_a","client_b","sortedLeaderBoard","sort","b","percent","SessionContainer","Subtitle","ReferenceText","Clients","ClientContainer","Session","getAge","getGender","a_time","b_time","getReference","Value","Stat","StatsContainer","Stats","numberOfRecordings","numberOfHalfRecordings","totalTime","AdminPageContainer","SwitchContainer","SessionsContainer","AdminPage","URLPartial","URLSearchParams","search","get","handlePartialToggleChange","updatedURL","bind","TextContainer","PhraseLink","item","link","text","ParagraphsWithLinks","phrase","ParseParagraph","Paragraphs","paragraph","ParseParagraphs","LegalDoc","articles","article","heading","paragraphs","contents","date","DisplayArticles","DisplayDocument","LeaderBoardPageContainer","LeaderBoard","terms","privacypol","App","path","ReactDOM","render","getElementById"],"mappings":"k9BAGA,ICkBYA,EAMAC,EDxBNC,EAAkBC,IAAOC,IAAV,KAMfC,EAAUF,IAAOC,IAAV,KAQPE,EAASH,IAAOC,IAAV,KAKNG,EAAQJ,IAAOK,GAAV,KAOLC,EAAaN,IAAOO,EAAV,KA4BDC,EAjBuC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrD,OACI,gBAACV,EAAD,KACI,gBAACG,EAAD,KACI,gBAACC,EAAD,KACI,gBAACC,EAAD,KACI,gBAACE,EAAD,CAAYI,KAAK,KAAjB,eACa,yCAIpBD,K,0BC9BLZ,K,sBAAAA,E,oBAAAA,E,uBAAAA,M,cAMAC,K,kCAAAA,E,gBAAAA,E,iCAAAA,M,KC3BG,ICGAa,EDHA,WACb,OAAO,IAAIA,OAAO,IAA0B,wC,QE2BvC,SAASC,IAcZ,MA3BuC,qBAAzBC,OAAOC,eAIlB,WAA2C,IAAD,EAC7C,UACI,UAAAC,UAAUC,oBAAV,eAAwBC,eACxBF,UAAUE,cACVF,UAAUG,oBACVH,UAAUI,iBAkBwBC,GAgBnC,SAASC,EAAaC,GACzB,IAGIjB,EAAYkB,EAAYC,EAAYC,EAAYC,EAAYC,EAH1DC,EAAQC,KAAKC,MAAMR,EAAU,MAC7BS,EAAUF,KAAKC,MAAOR,EAAU,KAAQ,IACxCU,EAAmBH,KAAKC,MAAOR,EAAU,KAAQ,IAEvD,GAAIU,EAAmB,EAAG,CAAC,IAAD,EACXC,MAAMC,KAAKF,EAAiBG,YADjB,mBACrBT,EADqB,KACjBC,EADiB,UAGtBD,EAAK,IACLC,EAAKK,EAAiBG,WAE1B,GAAIJ,EAAU,EAAG,CAAC,IAAD,EACFE,MAAMC,KAAKH,EAAQI,YADjB,mBACZX,EADY,KACRC,EADQ,UAGbD,EAAK,IACLC,EAAKM,EAAQI,WAEjB,GAAIP,EAAQ,EAAG,CAAC,IAAD,EACAK,MAAMC,KAAKN,EAAMO,YADjB,mBACV9B,EADU,KACNkB,EADM,UAGXlB,EAAK,IACLkB,EAAKK,EAAMO,WAEf,MAAO,CAAE9B,KAAIkB,KAAIC,KAAIC,KAAIC,KAAIC,MAkB1B,SAASS,EAAT,GAOsB,IANzB/B,EAMwB,EANxBA,GACAkB,EAKwB,EALxBA,GACAC,EAIwB,EAJxBA,GACAC,EAGwB,EAHxBA,GACAC,EAEwB,EAFxBA,GACAC,EACwB,EADxBA,GAGMU,EAAO,UAFW,EAKkB,CAAChC,EAAImB,EAAIE,GAAIY,KAAI,SAACC,GAAD,MAC7C,MAAVA,EAAgB,GAAKA,KAND,mBAKjBC,EALiB,KAKNC,EALM,KAKKC,EALL,KAQxB,MAAW,MAAPrC,GAAqB,MAAPkB,EACP,CAACkB,EAAYhB,EAAIY,EAAMK,EAAYf,EANjC,QAM2CgB,KAAK,KAElD,CAACH,EAAYjB,EAVZ,QAUqBkB,EAAYhB,EAAIY,GAAMM,KAAK,KAYzD,IC1HKC,EAKAC,EAKAC,EAOAC,ECdSC,E,WAgBjB,cAA4D,IAAD,OAA7CC,EAA6C,EAA7CA,WAAYC,EAAiC,EAAjCA,cAAiC,yBAfnDC,gBAemD,OAdnDC,kBAcmD,OAbnDC,aAamD,OAXnDC,gBAWmD,OAVnDC,mBAUmD,OATnDC,cASmD,OARnDP,gBAQmD,OANpDQ,qBAMoD,OALnDP,cAAwB,EAK2B,KAJnDQ,OAA4B,GAIuB,KAFnDC,aAAuB,EAE4B,KAOnDC,QAAU,mBAAiB,EAAKT,YAPmB,KASnDU,cAAgB,WACpB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAAY,IAAD,EAC9BC,EAAU,CACZC,OAAO,EACPC,aAAc,EACdlB,WAAY,EAAKA,YAGfmB,EAAO,SAACC,GAAD,OACTL,EACK,CACGM,gBAAiBxE,EAAWyE,gBAC5BC,cAAe1E,EAAW2E,QACYJ,EAAMK,OAC5CL,KAGZ,UAAItD,UAAUC,oBAAd,aAAI,EAAwBC,cACxBF,UAAUC,aACLC,aAAagD,GACbU,KAAKZ,EAASK,GACZrD,UAAUE,aACjBF,UAAUE,aAAagD,EAASF,EAASK,GAClCrD,UAAUG,mBACjBH,UAAUG,mBAAmB+C,EAASF,EAASK,GACxCrD,UAAUI,gBACjBJ,UAAUI,gBAAgB8C,EAASF,EAASK,GAE5CJ,EAAOlE,EAAW8E,oBArC6B,KA0CnDC,MAAQ,WAIZ,OAHA,EAAKvB,WAAWwB,QAAQ,EAAKtB,UAC7B,EAAKA,SAASsB,QAAQ,EAAKvB,eAC3B,EAAKA,cAAcuB,QAAQ,EAAK1B,aAAa2B,aACxC,EAAKnB,WAKV,EAAKP,QAAQ2B,UAAb,uCAAyB,WAAOC,GAAP,iBAAA1E,EAAA,wDAGjB0E,EADAC,KAAQC,EAFS,EAETA,MAII,oBANK,EAEFC,SAKX,EAAK3B,kBACL,EAAKA,gBAAgB0B,GACrB,EAAKzB,OAAO2B,KAAKF,IATJ,2CAAzB,kCAAAG,KAAA,eAcA,EAAK/B,cAAcgC,eAAiB,SAACC,GACjC,IAAMC,EAAc,EAAKC,iBAAiBF,EAAGG,YAAa,MAC1D,EAAKtC,QAAQuC,YAAY,CACrBR,QAAS,SACTS,OAAQJ,KAIZ,EAAKvC,cAAgB,GACrB,EAAK4C,uBAGT,EAAKnC,aAAc,EACZG,QAAQC,YA/BXgC,QAAQ1B,MAAM,mDACPP,QAAQE,WAhDoC,KAiFnD8B,qBAAuB,WAC3BE,YAAW,kBAAM,EAAKC,iBAAqC,IAArB,EAAK/C,gBAlFY,KAqFnD+C,aAAe,WAEf,EAAKtC,cACL,EAAKN,QAAQuC,YAAY,CAAER,QAAS,cACpC,EAAKU,yBAzF8C,KAsInDI,gBAtImD,uCAsIjC,WAAOC,GAAP,SAAA5F,EAAA,+EACf,IAAIuD,SAAQ,SAACC,GAChB,IAAMqC,EAAcC,SAASC,cAAc,SAC3CF,EAAYG,IAAMJ,EAClBC,EAAYI,iBAAiB,kBAAkB,WAC3CzC,EAAQqC,EAAYK,iBALN,2CAtIiC,2DAgJnDC,KAAO,WACX,OAAK,EAAK9C,UAOH,IAAIE,SAAQ,SAACC,EAASC,GACzB,EAAKT,cAAcoD,aACnB,EAAKrD,WAAWqD,aAChB,EAAKtD,QAAQ2B,UAAb,uCAAyB,WAAOC,GAAP,2BAAA1E,EAAA,2DAGjB0E,EADAC,KAAQ0B,EAFS,EAETA,KAAMC,EAFG,EAEHA,WAEF,YAFczB,EAFT,EAESA,SAFT,wBAKXe,EAAMW,IAAIC,gBAAgBH,GALf,kBAOU,EAAKV,gBAAgBC,GAP/B,OAOPM,EAPO,OAQb,EAAK9C,aAAc,EACnBI,EAAQ,CACJ6C,OACAH,WACAN,MACAlD,WAAY,EAAKA,WACjB4D,eAdS,kDAiBb7C,EAAO,yBAjBM,QAsBL,oBAAZoB,IAEYD,EACRF,EADAC,KAAQC,MAER,EAAK1B,kBACL,EAAKA,gBAAgB0B,GACrB,EAAKzB,OAAO2B,KAAKF,KA5BJ,0DAAzB,kCAAAG,KAAA,eAgCA,EAAKjC,QAAQuC,YAAY,CACrBR,QAAS,eA1CbW,QAAQ1B,MAAM,iDACPP,QAAQE,WAnJoC,KAiM3DgD,KAjM2D,sBAiMpD,8BAAAzG,EAAA,0DACC,EAAKqD,UADN,yCAEQE,QAAQE,UAFhB,uBAKqB,EAAKH,gBAL1B,cAKH,EAAKV,WALF,OAOG8D,EAAkB,EAAK9D,WAAW+D,QAClCC,EAAY,EAAKhE,WAAW+D,QAOlC,EAAKjE,WAAa,EAAKE,WAAWiE,iBAAiB,GAAGC,cACjDpE,WACL,EAAKG,aAAe,IAAKvC,OAAOyG,cAC5BzG,OAAO0G,oBAAoB,CAAEtE,WAAY,EAAKA,aAElD,EAAKA,WAAa,EAAKG,aAAaH,WAEpC,EAAKK,WAAa,EAAKF,aAAaoE,wBAChCP,GAEJ,EAAK1D,cAAgB,EAAKD,WAAWmE,QAAQC,sBACzC,KACA,EACA,GAEJ,EAAKlE,SAAW,EAAKJ,aAAauE,aAClC,EAAKpE,cAAcuB,QAAQ,EAAK1B,aAAa2B,aAC7C,EAAKzB,WAAWwB,QAAQ,EAAKtB,UAC7B,EAAKA,SAASsB,QAAQ,EAAKvB,eAC3B,EAAKC,SAASoE,KAAKC,MAAQ,EAlCxB,kBAoCI/D,QAAQC,QAAQoD,IApCpB,4CAjMoD,KAwO3DW,KAAO,WACC,EAAKtE,WACL,EAAKA,SAASoE,KAAKC,MAAQ,IA1OwB,KA8O3DE,OAAS,WACD,EAAKvE,WACL,EAAKA,SAASoE,KAAKC,MAAQ,IAhPwB,KAoP3DG,eApP2D,sBAoP1C,sBAAAzH,EAAA,yDACRK,IADQ,uBAETmF,QAAQkC,IAAInI,EAAW8E,gBAFd,kBAGFd,QAAQE,OAAOlE,EAAW8E,iBAHxB,UAKR,EAAKrB,cALG,uBAOTwC,QAAQ1B,MAAM,qBAPL,kBAQFP,QAAQE,OAAO,sBARb,cAWb,EAAKkE,iBAXQ,kBAYN,EAAKrD,SAZC,2CApP0C,KAmQ3DsD,cAnQ2D,sBAmQ3C,sBAAA5H,EAAA,+EAAgC,EAAKmG,QAArC,2CAnQ2C,KAqQ3D0B,QAAU,WACN,GAAI,EAAKjF,WAAY,CAAC,IAAD,gBACG,EAAKA,WAAWkF,aADnB,IACjB,2BAAiD,SACvC3B,QAFO,+BAMrB,EAAKvD,gBAAamF,GA5QqC,KA+Q3DJ,eAAiB,WACb,EAAK7E,QAAQuC,YAAY,CAAER,QAAS,UACpC,EAAK1B,OAAS,IAjRyC,KAoR3D6E,iBAAmB,SAACC,GAChB,IAD4C,EACtCC,EAAmC,GADG,cAEtBD,GAFsB,IAE5C,2BAAqC,CAAC,IAA3BE,EAA0B,QACjCD,EAAmBpD,KAAK,EAAK3B,OAAOgF,EAAU,KAHN,8BAM5C,OADA3C,QAAQkC,IAAR,yBAA8BQ,IACvBA,GAzRPnD,KAAKrC,WAAaA,EAClBqC,KAAKjC,QAAU,IAAIsF,EACnBrD,KAAKpC,cAAgBA,EACrBoC,KAAK5B,OAAS,G,6DA2FOmC,EAAqB+C,GAC1C,GAAIA,IAAS/C,EAAO5C,WAChB,OAAO4C,EAEP+C,EAAO/C,EAAO5C,YACd8C,QAAQ1B,MACJ,yDASR,IANA,IAAMwE,EAAkBhD,EAAO5C,WAAa2F,EACtCE,EAAYjH,KAAKkH,MAAMlD,EAAOmD,OAASH,GACvCI,EAAS,IAAIC,aAAaJ,GAC5BK,EAAe,EACfC,EAAe,EACbC,EAAexD,EAAOyD,eAAe,GACpCH,EAAeF,EAAOD,QAAQ,CAOjC,IANA,IAAMO,EAAmB1H,KAAKkH,OACzBI,EAAe,GAAKN,GAGrBW,EAAQ,EACRC,EAAQ,EAEJC,EAAIN,EACRM,EAAIH,GAAoBG,EAAI7D,EAAOmD,OACnCU,IAEAF,GAASH,EAAaK,GACtBD,IAEJR,EAAOE,GAAgBK,EAAQC,EAG/BN,IACAC,EAAeG,EAEnB,OAAON,M,qBC7JFU,EAAb,kDACI,WAAYC,GAAkB,IAAD,6BACzB,cAAMA,GAEFC,MAAMC,mBACND,MAAMC,kBAAN,eAA8BH,GAElC,EAAKjF,KAAO,WANa,EADjC,sBAA8BmF,QAWjBE,EAAb,kDACI,WAAYH,GAAkB,IAAD,6BACzB,cAAMA,GAEFC,MAAMC,mBACND,MAAMC,kBAAN,eAA8BC,GAElC,EAAKrF,KAAO,WANa,EADjC,sBAA8BmF,S,SFJlBjH,K,sBAAAA,E,6BAAAA,M,cAKAC,K,kCAAAA,E,yCAAAA,M,cAKAC,K,kBAAAA,E,YAAAA,E,8BAAAA,E,yBAAAA,M,cAOAC,K,8BAAAA,E,sBAAAA,E,2CAAAA,M,SAUSiH,E,WAsCjB,WAAYC,EAAmBC,GAAyB,IAAD,gCArC/CC,mBAqC+C,OApC/ChH,gBAoC+C,OAlCvDiH,0BAkCuD,OAjCvDC,gBAiCuD,OAhCvDC,kBAgCuD,OA9BvDC,sBA8BuD,OA7BvDC,sBA6BuD,OA5BvDC,wBA4BuD,OA3BvDC,6BA2BuD,OA1BvDjH,qBA0BuD,OAzBvDkH,wBAyBuD,OAxBvDC,yBAwBuD,OAvBvDC,cAuBuD,OAtBvDC,aAsBuD,OApB/CC,cAoB+C,OAnB/CC,mBAmB+C,OAlB/CC,sBAkB+C,OAjB/CC,YAiB+C,OAhB/CjB,eAgB+C,OAf/CC,gBAe+C,OAd/CiB,eAc+C,OAb/CC,eAa+C,OAZ/CC,oBAY+C,OAX/CC,gBAW+C,OAV/CC,aAU+C,OAT/CC,eAS+C,OAR/CC,kBAQ+C,OAP/CC,aAO+C,OAN/CC,sBAM+C,OAL/CC,oBAK+C,OAJ/CC,qBAI+C,OAH/CC,qBAG+C,OAF/CC,wBAE+C,OAmC/CC,oBAAsB,SAAC7G,GAC3B,QAA6BmD,IAAzB,EAAK7E,gBAA+B,CAEpC,IAAMwI,EAAU,eAAQ9G,GACxB8G,EAAWC,GAAK,EAAKV,UACrB,EAAK/H,gBAAgBwI,KAxC0B,KA4C/CE,aAAe,SAACC,GAAD,OAAuB,EAAKjB,UAAYiB,GA5CR,KA8C/CC,aAAe,SAACD,GACpB,EAAKhB,UAAYgB,EACjB,EAAKzB,mBAAmByB,IAhD2B,KAmD/CE,kBAAoB,SAACF,GACzB,EAAKf,eAAiBe,EACtB,EAAK1B,wBAAwB0B,IArDsB,KAwD/CG,cAAgB,SAACH,GACrB,EAAKd,WAAac,EAClB,EAAKxB,oBAAoBwB,IA1D0B,KAgE/CI,cAAgB,WACpB,OAAO,EAAKlB,YAjEuC,KAqF/CtE,KArF+C,sBAqFxC,sBAAAzG,EAAA,+EAEa,EAAKkM,WAAW,EAAKxC,WAFlC,cAEP,EAAKiB,OAFE,OAGP,EAAKwB,YAAY,EAAKxC,WAAWyC,UACjC5G,QAAQkC,IAAI,uCAJL,SAKiB,EAAK8C,SAAS/D,OAL/B,cAKP,EAAK7D,WALE,OAMP4C,QAAQkC,IAAI,wCANL,UASoB,EAAK2E,UATzB,eASP,EAAK5B,cATE,iBAYD,EAAKjD,SAZJ,QAeP,EAAK8E,gBACL,EAAKR,aAAazJ,EAAUkK,WAGxB,EAAKf,oBACL,EAAK/D,iBApBF,kDAuBPjC,QAAQ1B,MAAM,4BAAd,MAvBO,0DArFwC,KAgH/CoI,WAAa,SAACtG,GAClB,OAAO,IAAIrC,SAAQ,SAACC,EAASC,GACzB,IAAMkH,EAAS,IAAI6B,UAAU5G,GAC7B+E,EAAO8B,OAAS,WACZjJ,EAAQmH,IAEZA,EAAO+B,QAAU,SAACC,GACdnH,QAAQ1B,MAAM,oBACdL,EAAOkJ,IAEXhC,EAAOiC,QAAU,WACb,EAAKd,aAAazJ,EAAUwK,cAEvB,EAAK3B,cAAiB,EAAKK,iBAC5B,EAAKuB,aAGbnC,EAAOlG,UAAY,SAACC,GAChB,IACI,IAAM2E,EAAU0D,KAAKC,MAAMtI,EAAMC,MACjC,EAAKsI,UAAU5D,GACjB,MAAOsD,GACLnH,QAAQ1B,MAAM,uBAAwB6I,SAtIC,KAoJ/CN,QApJ+C,sBAoJrC,4BAAArM,EAAA,mEAEJkN,EAAa,IAAIC,kBAAkB,EAAKzC,mBAEnC0C,QAAU,SAAC1I,GAClB,IAAM2I,EAAc3I,EAAM4I,QAAQ,GAClC,EAAKvD,aAAasD,IAItBH,EAAWK,eAAiB,SAAC7I,GACrBA,EAAM8I,WACN,EAAKC,YAAY,CACbC,KAAM,YACNF,UAAW9I,EAAM8I,aAMxB,EAAK5K,WApBA,yCAqBCW,QAAQE,OAAO,yBArBhB,cAuBV,EAAKb,WAAWkF,YAAY6F,SAAQ,SAACC,GACjCV,EAAWW,SAASD,EAAO,EAAKhL,eAxB1B,kBA0BHW,QAAQC,QAAQ0J,IA1Bb,2DA4BH3J,QAAQE,OAAR,OA5BG,0DApJqC,KA0M/CqK,gBAAkB,WACtB,QAAI,EAAKnD,QACE,EAAKA,OAAOoD,aAAe,EAAKpD,OAAOqD,MA5MC,KAoN/CC,mBAAqB,WACzB,IAAIC,EAAQ,IACZ,EAAK7C,eAAesC,SAAQ,SAACtE,GACzB5D,YAAW,kBAAM,EAAKgI,YAAYpE,KAAU6E,GAC5C1I,QAAQkC,IAAR,wCACqCwG,EADrC,kBAEI7E,GAEJ6E,GAAS,OAEb,EAAK7C,eAAiB,IA9N6B,KA2O/CyB,UA3O+C,sBA2OnC,sBAAA9M,EAAA,6DAEX,EAAKkL,eACN,EAAKA,cAAe,EACpB,EAAKC,QAAU,EAAKC,kBAExB5F,QAAQ2I,KACJ,iEAPY,kBAUQ,EAAKjC,WAAW,EAAKxC,WAV7B,OAUZ,EAAKiB,OAVO,uDAYZnF,QAAQ1B,MAAM,oCAAd,MAZY,WAchB,EAAKoH,cAAgB,EAAK4C,kBACtB,EAAK5C,eACL,EAAKC,QAAU7J,KAAK8M,IAChB,IACA,EAAKjD,QAAU,EAAKC,kBAExB3F,WAAU,sBAAC,sBAAAzF,EAAA,sEACD,EAAK8M,YADJ,2CAER,EAAK3B,UAIP,EAAKD,aA1BM,oBA2BZ,EAAKiB,YAAY,EAAKxC,WAAWyC,UACjC,EAAK6B,qBAEL,EAAKhC,kBAAoB3J,EAAW+L,gBAC9B,EAAK7G,SACL,EAAKD,QACP,EAAK3E,YAAe,EAAK6H,cAjCjB,wBAkCR,EAAKA,cAAgB,KAlCb,UAmCmB,EAAK4B,UAnCxB,QAmCR,EAAK5B,cAnCG,sBAqCZjF,QAAQ8I,KAAK,2CArCD,kBAsCL/K,QAAQC,QAAQ,4CAtCX,yDA3OmC,KA2R/CiK,YAAc,SAACc,GACnB,IACI,OAAI,EAAKT,mBACL,EAAKnD,OAAO6D,KAAKzB,KAAK0B,UAAUF,IACzBhL,QAAQC,YAEd,EAAK0H,cAAiB,EAAKK,iBAE5B,EAAKuB,YAGT,EAAKzB,eAAevG,KAAKyJ,GAClBhL,QAAQE,OACX,0DAEN,MAAOK,GAEL,OADA0B,QAAQ1B,MAAM,0BAA2BA,GAClCP,QAAQE,OAAOK,KA5SyB,KAgT/CmJ,UAAY,SAAC5D,GACjB,OAAQA,EAAQqE,MACZ,IAAK,mBACD,EAAKgB,gBAAgBrF,GACrB,MACJ,IAAK,sBACD,EAAKsF,yBAAyBtF,EAAQsC,IACtC,MACJ,IAAK,iBACD,EAAKiD,oBAAoBvF,GACzB,MACJ,IAAK,OACD,EAAKwF,mBAAmBxF,GACxB,MACJ,IAAK,SACD,EAAKyF,qBAAqBzF,GAC1B,MACJ,IAAK,YACD,EAAK0F,wBAAwB1F,GAC7B,MACJ,IAAK,iBACD,EAAK2F,gBAAgB3F,EAAQsC,IAC7B,MACJ,IAAK,kBACD,EAAKsD,uBACL,MACJ,IAAK,iBACD,EAAKC,sBACL,MACJ,IAAK,mBACD,EAAKC,wBACL,MACJ,IAAK,UACD,EAAKC,eACL,MACJ,IAAK,QACD,EAAKC,YAAYhG,GACjB,MACJ,IAAK,iBACD,EAAKiG,wBACL,MACJ,IAAK,SACD,EAAKC,eACL,MACJ,IAAK,OACD,EAAKC,aACL,MACJ,IAAK,sBACD,EAAKC,wBAAwBpG,EAAQ4B,WACrC,MACJ,QACIzF,QAAQ1B,MAAM,kBAAmBuF,KAnWU,KAuW/CgG,YAAc,SAAChG,GACnB7D,QAAQ1B,MAAM,UAAWuF,EAAQA,SACT,iBAApBA,EAAQA,SACR,EAAKkB,QAAQlB,EAAQA,UA1W0B,KA8W/C2F,gBAAkB,SAACrD,GAEvB,EAAKV,UAAYU,EAAK,aAhX6B,KAmX/C+D,aAnX+C,uCAmXhC,WACnB/D,EACAgE,GAFmB,eAAA3P,EAAA,sEAKoBuD,QAAQqM,IAC3C,EAAK5E,QAAQjJ,KAAI,SAAC8N,GAAD,OACbA,EAAOlE,KAAOA,EACRpI,QAAQC,QAAR,2BAAqBqM,GAAWF,IAChCpM,QAAQC,QAAQqM,OATX,cAKbC,EALa,yBAaZvM,QAAQC,QAAQsM,IAbJ,2CAnXgC,6DAmY/CpB,gBAAkB,SAACrF,GACvB,IAAM0G,EAAgB,eACf1G,GAGF,EAAK2B,QAAQgF,MAAK,SAACH,GAAD,OAAwBA,EAAOlE,KAAOoE,EAAKpE,QAC9D,EAAKX,QAAQlG,KAAKiL,GAClB,EAAK/F,iBAAiB,EAAKgB,SAEvB,EAAKF,iBAAmBtI,EAAeyN,WACvC,EAAKxC,YAAY,CACbC,KAAM,sBACNzC,UAAW,EAAKA,cA/YuB,KAqZ/C0D,yBAA2B,SAAChD,GAChC,IAAMmE,EAAa,EAAK9E,QAAQkF,QAC5B,SAACL,GAAD,OAAwBA,EAAOlE,KAAOA,KAE1C,EAAKX,QAAU8E,EACf,EAAK9F,iBAAiB,EAAKgB,UA1ZwB,KA6Z/C4D,oBA7Z+C,uCA6ZzB,WAAOvF,GAAP,eAAArJ,EAAA,sDACpB2P,EAAiC,GADb,KAElBtG,EAAQ8G,UAFU,OAGjB,iBAHiB,OAMjB,eANiB,OASjB,cATiB,8BAIlBR,EAAOvD,SAAW/C,EAAQ/B,MAJR,mCAOlBqI,EAAOS,OAAS/G,EAAQ/B,MAPN,mCAUlBqI,EAAOU,MAAQhH,EAAQ/B,MAVL,8CAaL,EAAKoI,aAAarG,EAAQsC,GAAIgE,GAbzB,QAa1B,EAAK3E,QAbqB,OAc1B,EAAKhB,iBAAiB,EAAKgB,SAdD,4CA7ZyB,2DA8a/CmB,YA9a+C,uCA8ajC,WAAOC,GAAP,SAAApM,EAAA,+EACX,EAAKyN,YAAY,CAAEC,KAAM,eAAgBpG,MAAO8E,KADrC,2CA9aiC,2DA2b/CyC,mBA3b+C,uCA2b1B,WAAOxF,GAAP,SAAArJ,EAAA,yDACzB,EAAK4J,cAAgBP,EAAQiH,MAC7B,EAAK1E,aAAarJ,EAAUgO,gBAExB,EAAK3N,WAJgB,gCAKf,EAAK4N,SALU,6BAOrB,EAAK5E,aAAarJ,EAAUkO,MAPP,2CA3b0B,2DAsc/C3B,qBAtc+C,uCAscxB,WAAOzF,GAAP,eAAArJ,EAAA,kEAEjB0Q,EAAc,IAAIC,sBAAsBtH,EAAQmH,QACjD,EAAK/F,cAHa,gCAIQ,EAAK4B,UAJb,OAInB,EAAK5B,cAJc,8BAMjB,EAAKA,cAAcmG,qBAAqBF,GANvB,yDASvBlL,QAAQ1B,MAAM,mCAAd,MATuB,0DAtcwB,2DAmd/CiL,wBAnd+C,uCAmdrB,WAAO1F,GAAP,eAAArJ,EAAA,sDACxBwN,EAAY,IAAIqD,gBAAgBxH,EAAQmE,WAC9C,IACQ,EAAK/C,eACL,EAAKA,cAAcqG,gBAAgBtD,GAEzC,MAAO1J,GACL0B,QAAQ1B,MAAM,gCAAiCA,GAPrB,2CAndqB,2DA8d/CmL,qBA9d+C,sBA8dxB,sBAAAjP,EAAA,sDAC3B,IACI,EAAK+L,kBAAkBvJ,EAAeuO,qBACxC,MAAOjN,GAEL0B,QAAQ1B,MAAM,mCAAoCA,GAL3B,2CA9dwB,KAue/CoL,oBAve+C,sBAuezB,4BAAAlP,EAAA,sEAEtB,EAAK+L,kBAAkBvJ,EAAewO,eAFhB,SAGE,EAAKxG,SAAS5C,gBAHhB,QAGhBqJ,EAHgB,QAMZtF,GAAK,EAAKV,UACpB,EAAKf,mBAAmB+G,GAPF,gDAUtBzL,QAAQ1B,MAAM,kCAAd,MAVsB,yDAveyB,KAqf/CqL,sBArf+C,sBAqfvB,sBAAAnP,EAAA,sDAC5B,EAAK+L,kBAAkBvJ,EAAewO,eADV,2CArfuB,KAyf/C5B,aAzf+C,sBAyfhC,4BAAApP,EAAA,mEAEX,EAAK4C,WAFM,uBAGX,YAAK6H,qBAAL,SAAoByG,QACpB,EAAKzG,cAAgB,KAJV,SAKgB,EAAK4B,UALrB,OAKX,EAAK5B,cALM,OAMX,EAAKmB,aAAarJ,EAAU4O,SANjB,yDASf3L,QAAQ1B,MAAM,2BAAd,MATe,0DAzfgC,KAsgBhD0D,OAtgBgD,sBAsgBvC,sBAAAxH,EAAA,yDACP,EAAK4C,WADE,sBAER,EAAK2E,OACL/B,QAAQkC,IAAI,oBACN,IAAI0B,EAAS,oBAJX,UAKA,EAAKqB,cALL,uBAMR,EAAKlD,OACL/B,QAAQkC,IAAI,+BACN,IAAI8B,EAAS,+BARX,QAUR,EAAKwC,cAAc1J,EAAW+L,iBAC9B,EAAK7D,SAAShD,SACE,EAAKwD,QAAQoG,MACzB,SAACvB,GAAD,OAAyC,IAAjBA,EAAOQ,UAG/B,EAAKgB,OAET,EAAKzC,oBAAoB,CACrBjD,GAAI,EAAKhC,WAAWgC,GACpBwE,UAAW,YACX7I,OAAO,IAEX,EAAKmG,YAAY,CACb9B,GAAI,EAAKhC,WAAWgC,GACpB+B,KAAM,YACNpG,OAAO,IA1BH,4CAtgBuC,KAqiBhDC,KAriBgD,sBAqiBzC,sBAAAvH,EAAA,sDACV,EAAKgM,cAAc1J,EAAWgP,oBAC1B,EAAK1O,aACL,EAAK4H,SAASjD,OACd,EAAKgK,UAET,EAAK3C,oBAAoB,CACrBjD,GAAI,EAAKhC,WAAWgC,GACpBwE,UAAW,YACX7I,OAAO,IAEX,EAAKmG,YAAY,CACb9B,GAAI,EAAKhC,WAAWgC,GACpB+B,KAAM,YACNpG,OAAO,IAdD,2CAriByC,KAujB/C+J,KAvjB+C,sBAujBxC,4BAAArR,EAAA,kEAEF,EAAKyK,cAFH,gCAGwB,EAAK4B,UAH7B,OAGH,EAAK5B,cAHF,8BAKwC,EAAKA,cAAc+G,cAL3D,cAKDlB,EALC,iBAMD,EAAK7F,cAAcgH,oBAAoBnB,GANtC,yBAOD,EAAK7C,YAAY,CAAEC,KAAM,OAAQ4C,UAPhC,eAQP,EAAK1E,aAAarJ,EAAUmP,YARrB,kBASAnO,QAAQC,WATR,yCAWPgC,QAAQ1B,MAAM,kBAAd,MAXO,kBAYAP,QAAQE,UAZR,0DAvjBwC,KAukB/C+M,OAvkB+C,sBAukBtC,8BAAAxQ,EAAA,kEAMJ,EAAKyK,cAND,gCAOsB,EAAK4B,UAP3B,OAOL,EAAK5B,cAPA,qBAUHiG,EAAc,IAAIC,sBAAsB,EAAK/G,eACnD,EAAKa,cAAcmG,qBAAqBF,GAX/B,SAcY,EAAKjG,cAAckH,eAd/B,cAcHnB,EAdG,OAeT,EAAK/F,cAAcgH,oBAAoBjB,GAGvC,EAAK/C,YAAY,CAAEC,KAAM,SAAU8C,WAlB1B,kBAmBFjN,QAAQC,WAnBN,yCAqBTgC,QAAQ1B,MAAM,oBAAd,MArBS,kBAsBFP,QAAQE,OAAR,OAtBE,0DAvkBsC,KAimB/C6L,sBAAwB,WAC5B,EAAKhE,iBAAkB,EACvB,EAAKrB,iBAAiB,EAAKqB,kBAnmBwB,KA4mB/CmE,wBA5mB+C,uCA4mBrB,WAAOmC,GAAP,SAAA5R,EAAA,sDACP,KAAnB,EAAKiL,WACLzF,QAAQkC,IAAI,oCAEhB,EAAKuD,UAAY2G,EAAeC,SAAS,YACnCD,EAAeE,QAAQ,WAAY,YACnCF,EAAeE,QAAQ,WAAY,YACzCtM,QAAQkC,IAAI,EAAKuD,WACjB,EAAKO,oBAAqB,EARI,2CA5mBqB,2DAunBhDuG,QAAU,WACb,OAAO,EAAKzG,iBAxnBuC,KA2nBhDiG,OA3nBgD,sBA2nBvC,4BAAAvR,EAAA,6DACZ,YAAKyK,qBAAL,SAAoByG,QACpB,EAAKzG,cAAgB,KAFT,SAGe,EAAK4B,UAHpB,cAGZ,EAAK5B,cAHO,yBAKL,EAAKgD,YAAY,CAAEC,KAAM,aALpB,2CA3nBuC,KAooBhDsE,cApoBgD,uCAooBhC,WAAO1K,GAAP,SAAAtH,EAAA,sDACnB,EAAKyN,YAAY,CACb9B,GAAI,EAAKhC,WAAWgC,GACpB+B,KAAM,gBACNpG,UAJe,2CApoBgC,2DA4oBhDG,eA5oBgD,sBA4oB/B,sBAAAzH,EAAA,+EAEV,EAAKwK,SAAS/C,iBAFJ,cAGhB,EAAKsE,kBAAkBvJ,EAAeyN,WAHtB,kBAKT1M,QAAQC,WALC,uCAOhBgC,QAAQ1B,MAAM,6BAAd,MAPgB,kBAQTP,QAAQE,OAAR,OARS,yDA5oB+B,KAwpBhDwO,iBAxpBgD,sBAwpB7B,4BAAAjS,EAAA,+EAEZ,EAAKyN,YAAY,CAAEC,KAAM,oBAFb,cAGlB,EAAK3B,kBAAkBvJ,EAAeuO,qBAGhC9F,EAAYiH,cAClB,EAAKzE,YAAY,CAAEC,KAAM,iBAAkB/B,GAAIV,IAG/C,EAAKA,UAAYA,EAAY,YAVX,kBAYX1H,QAAQC,WAZG,yCAclBgC,QAAQ1B,MAAM,+BAAd,MAdkB,kBAeXP,QAAQE,OAAR,OAfW,0DAxpB6B,KA2qBhDmE,cA3qBgD,sBA2qBhC,4BAAA5H,EAAA,sEAEf,EAAKyN,YAAY,CAAEC,KAAM,mBAFV,SAGS,EAAKlD,SAAS5C,gBAHvB,cAGTqJ,EAHS,QAMLtF,GAAK,EAAKV,UAEpB,EAAKf,mBAAmB+G,GACxB,EAAKlF,kBAAkBvJ,EAAewO,eATvB,kBAURzN,QAAQC,WAVA,yCAYfgC,QAAQ1B,MAAM,6BAAd,MAZe,kBAaRP,QAAQE,OAAR,OAbQ,0DA3qBgC,KA4rBhD0O,gBA5rBgD,sBA4rB9B,sBAAAnS,EAAA,sEAEjB,EAAKyN,YAAY,CAAEC,KAAM,qBACzB,EAAK3B,kBAAkBvJ,EAAewO,eAHrB,kBAIVzN,QAAQC,WAJE,uCAMjBgC,QAAQ1B,MAAM,+BAAd,MANiB,kBAOVP,QAAQE,OAAR,OAPU,yDA5rB8B,KAwsBhD2O,YAxsBgD,sBAwsBlC,sBAAApS,EAAA,sEACX,EAAKyN,YAAY,CAAEC,KAAM,WADd,2CAxsBkC,KA6sB/C6B,aAAe,WACnB,EAAKjF,YA9sB8C,KAitBhDlE,WAjtBgD,sBAitBnC,4BAAApG,EAAA,sDAChBwF,QAAQkC,IAAI,oBACZ,EAAK6D,iBAAkB,EACvB,EAAKZ,OAAOuG,QACZ,YAAKzG,qBAAL,SAAoByG,QACpB,EAAKzG,cAAgB,KALL,2CAjtBmC,KAytBhD9C,eAAiB,WACpB,EAAK6C,SAAS7C,kBA1tBqC,KA6tBhDK,iBAAmB,SAACC,GAGvB,IAFA,IAAM9E,EAAS,EAAKqH,SAASxC,iBAAiBC,GAErCkB,EAAI,EAAGA,EAAIhG,EAAOsF,OAAQU,IAC/BhG,EAAOgG,GAAGwC,GAAK,EAAKV,UAExB,OAAO9H,GAluBP4B,KAAKyF,SAAW,IAAI/H,EAAS,CACzBC,WAAY,KACZC,cAAe,KAEnBoC,KAAKyF,SAAStH,gBAAkB6B,KAAK0G,oBACrC1G,KAAK2E,UAAYA,EACjB3E,KAAK4E,WAAaA,EAClB5E,KAAK6F,UAAYrI,EAAUkO,KAC3B1L,KAAK8F,UAAYxI,EAAUwK,aAC3B9H,KAAK+F,eAAiBtI,EAAewO,cACrCjM,KAAKgG,WAAazI,EAAWgP,mBAC7BvM,KAAKkG,UAAY,GACjBlG,KAAKmG,cAAe,EACpBnG,KAAKqG,iBAAmB,IACxBrG,KAAKoG,QAAUpG,KAAKqG,iBACpBrG,KAAKsG,eAAiB,GACtBtG,KAAKuG,iBAAkB,EACvBvG,KAAKwG,iBAAkB,EACvBxG,KAAKyG,oBAAqB,EAE1BzG,KAAKiG,QAAU,CAACrB,GAGhB5E,KAAK2F,iBAAmB,CACpB2H,WAAY,CACR,CACIC,KAAM,CAAC,oCAInB9M,QAAQkC,IAAI,iBACZ3C,KAAK0B,O,4DA0JD1B,KAAK+I,mBACL/I,KAAK0I,YAFO,CAAEC,KAAM,OAAQrE,QAAS,O,mCAUvB,IAAD,OACjB5D,YAAW,kBAAM,EAAK6G,kBAAiB,S,oMG1Q/C,IAAMiG,EAAO9S,IAAO+S,IAAIC,MAAM,CAC1BC,QAAS,MACTC,MAAO,6BACPC,WAAY,gCAHHnT,CAAH,KAoBKA,cAAO8S,EAAP9S,CAAf,KACc,gBAAGoT,EAAH,EAAGA,OAAH,OAAiBA,GAAkB,UACpC,gBAAGC,EAAH,EAAGA,MAAH,OAAgBA,GAAgB,UACjC,gBAAGC,EAAH,EAAGA,KAAH,OAAiBA,GAAc,UCD5BC,EArByB,SAACC,GAAD,OACpC,gBAAC,EAAD,eAAMC,QAAQ,cAAcC,UAAU,OAAUF,GAC5C,yBACI,wBACIG,EAAE,sdAMN,wBACIA,EAAE,+e,ybCZlB,IAAMC,GAAOC,YAAH,MAcGC,GAAkB9T,IAAOC,IAAV,MACf,gBAAGoT,EAAH,EAAGA,MAAH,OAAgBA,GAAgB,UAC/B,gBAAGD,EAAH,EAAGA,OAAH,OAAiBA,GAAkB,SAKXQ,I,omBCdtC,IAAMG,GAAgB/T,IAAOC,IAAV,MAEN,qBAAGoT,SACF,qBAAGD,UAQI,gBAAGY,EAAH,EAAGA,OAAH,2BAA8BA,EAAS,OAAS,KAAhD,QACD,qBAAGA,OAAuB,EAAI,KAI7B,gBAAGA,EAAH,EAAGA,OAAH,2BAA+BA,EAAiB,KAAR,MAAxC,QACD,qBAAGA,OAA4B,EAAJ,KAIzCC,GAAgBjU,IAAOC,IAAV,MAkBbiU,G,kDAIF,WAAYV,GAAe,IAAD,8BACtB,cAAMA,IAJFW,aAAeC,cAGG,EAFlBC,cAAgBD,cAEE,EAS1BE,kBAAoB,WAAO,IAAD,QAChBC,EAAU,UAAG,EAAKJ,aAAaK,eAArB,aAAG,EAA2BC,YACxCC,EAAW,UAAG,EAAKL,cAAcG,eAAtB,aAAG,EAA4BC,YAC1CF,GAAgBG,GAClB,EAAKC,SAAS,CAAEtB,MAAOxR,KAAK+S,IAAIL,EAAYG,GAAe,IAE/D,IAAMG,EAAW,UAAG,EAAKV,aAAaK,eAArB,aAAG,EAA2BM,aACzCC,EAAY,UAAG,EAAKV,cAAcG,eAAtB,aAAG,EAA4BM,aAC3CD,GAAiBE,GACnB,EAAKJ,SAAS,CAAEvB,OAAQvR,KAAK+S,IAAIC,EAAaE,GAAgB,KAflE,EAAK3I,MAAQ,CACTgH,OAAQ,EACRC,MAAO,GALW,E,qDAsBhB,IAAD,EACwC/N,KAAKkO,MAA1C/S,EADH,EACGA,SAAUiT,EADb,EACaA,UAAWM,EADxB,EACwBA,OAAQgB,EADhC,EACgCA,IADhC,EAEqB1P,KAAK8G,MAAvBiH,EAFH,EAEGA,MAAOD,EAFV,EAEUA,OACT6B,EAAahT,MAAMiT,QAAQzU,GAAYA,EAAS,QAAK6H,EACrD6M,EAAclT,MAAMiT,QAAQzU,GAAYA,EAAS,QAAK6H,EAC5D,OACI,gBAAC,WAAD,KACI,gBAACyL,GAAD,CACIL,UAAWA,EACXsB,IAAKA,EACLhB,OAAQA,EACRX,MAAOA,EACPD,OAAQA,GAEP3S,GAEL,gBAACwT,GAAD,CAAee,IAAK1P,KAAK6O,cACpBc,GAEL,gBAAChB,GAAD,CAAee,IAAK1P,KAAK+O,eACpBc,Q,GA9CGf,aAqDTA,iBACX,SAACZ,EAAcwB,GAAf,OACI,gBAAC,GAAD,iBAAexB,EAAf,CAAsBwB,IAAKA,QC3EpBI,GAtB6B,SAAC5B,GAAD,OACxC,gBAAC,EAAD,eAAMC,QAAQ,cAAcC,UAAU,SAAYF,GAC9C,yBACI,yBACI,wBACIG,EAAE,wqCCGP0B,GARkC,SAAC7B,GAAD,OAC7C,gBAAC,EAAD,eAAMC,QAAQ,cAAcC,UAAU,SAAYF,GAC9C,wBAAMG,EAAE,moCAER,wBAAMA,EAAE,+J,+kFCChB,IAAM2B,GAAoBtV,YAAOuV,GAAPvV,CAAH,MASjBwV,GAAmBxV,IAAOC,IAAV,MAKhBwV,GAAsBzV,IAAOC,IAAV,MAWnB,qBAAGyV,UACO,mEAcVC,GAAa3V,IAAO4V,OAAV,MAmBVC,GAAO7V,IAAOC,IAAV,MAOA,qBAAG6V,IAAiB,mBAAqB,sBAO7CC,GAAa/V,IAAOC,IAAV,MACK,qBAAG+V,OAAuB,KAAO,SAC/B,qBAAGA,OAAuB,GAAM,KAWjDC,GAAgBjW,YAAOuV,GAAPvV,CAAH,MAIbkW,GAAyBlW,IAAOC,IAAV,MAOtBkW,GAAmBnW,IAAOC,IAAV,MAUTmW,GAASpW,IAAO4V,OAAV,MAKK,gBAAGS,EAAH,EAAGA,MAAOP,EAAV,EAAUA,IAAV,OAChBO,EAAQ,UAAYP,EAAM,UAAY,aA4BzBQ,G,kDAEjB,WAAY9C,GAAe,IAAD,8BACtB,cAAMA,IAFF+C,cACkB,IAS1BC,YAAc,WAAO,IAAD,EACa,EAAKhD,MAA1BiD,EADQ,EACRA,KAAMnL,EADE,EACFA,WACTmL,IAGDnL,IAAezI,EAAW+L,gBAC1B6H,EAAK3O,OAGL2O,EAAK1O,SAAS2O,OAAM,SAACC,GACbA,aAAehN,EACf,EAAK6J,MAAMoD,YAAY,+BAEvB,EAAKpD,MAAMoD,YACP,wDAvBM,EA8B1BC,aAAe,WAAO,IAAD,EACgB,EAAKrD,MAA9BiD,EADS,EACTA,KAAMpL,EADG,EACHA,eACToL,IAGDpL,IAAmBtI,EAAeuO,oBAClCmF,EAAK/D,kBACErH,IAAmBtI,EAAeyN,UACzCiG,EAAKtO,gBAELsO,EAAKjE,qBAxCa,EA4C1BsE,cAAgB,WACZ,EAAKnC,SAAS,CAAEoC,SAAU,EAAK3K,MAAM2K,WA7Cf,EAgD1BC,aAAe,WACX,EAAKxD,MAAMyD,WACX,EAAKtC,SAAS,CAAEoC,SAAS,KAlDH,EAqD1BG,eAAiB,WACb,EAAKvC,SAAS,CAAEwC,WAAW,IAC3B,EAAK3D,MAAM4D,YApDX,EAAKhL,MAAQ,CACT2K,SAAS,EACTI,WAAW,GALO,E,qDA0DhB,IAAD,EAMD7R,KAAKkO,MAJLhC,EAFC,EAEDA,UACAnG,EAHC,EAGDA,eACAC,EAJC,EAIDA,WACA+L,EALC,EAKDA,cALC,EAQ0B/R,KAAK8G,MAA5B2K,EARH,EAQGA,QAASI,EARZ,EAQYA,UAEjB,OACI,gBAAC7B,GAAD,CAAmBtB,SAAUxC,GACzB,gBAACgE,GAAD,KACI,gBAACC,GAAD,CACIC,SAAUpK,IAAezI,EAAW+L,gBACpC0I,QAAShS,KAAKkR,aAEd,gBAACX,GAAD,MACCvK,IAAezI,EAAW+L,gBACvB,gBAAC+G,GAAD,CAAY4B,MAAM,gCACd,gBAAC,GAAD,CAASnE,OAAQ,GAAIC,MAAO,MAGhC,gBAACsC,GAAD,CAAY4B,MAAM,6BACd,gBAAC,GAAD,CAAcnE,OAAQ,GAAIC,MAAO,OAI5CgE,GACG,gBAAC5B,GAAD,CACIC,SACIrK,IAAmBtI,EAAeyN,UAEtC8G,QAAShS,KAAKuR,cAEd,gBAAChB,GAAD,CAAMC,KAAG,IACT,gBAACH,GAAD,CACI4B,MACIlM,IAAmBtI,EAAeyN,UAC5B,0CACA,sDAGV,gBAACuF,GAAD,CACIC,OACI3K,IACAtI,EAAeyN,eAOtC6G,GACG,gBAACpB,GAAD,CAAejC,OAAQ+C,GAAWI,GAC9B,gBAACjB,GAAD,KACI,gBAACE,GAAD,CAAQkB,QAAShS,KAAKwR,eAAtB,eAGA,gBAACV,GAAD,CAAQkB,QAAShS,KAAK4R,eAAgBb,OAAK,GAA3C,cAIHc,EACG,gBAAChB,GAAD,KACI,gBAACrC,GAAD,CACIV,OAAQ,OACRC,MAAO,UAIf,gBAAC6C,GAAD,KACI,gBAACE,GAAD,CAAQkB,QAAShS,KAAKwR,eAAtB,YAGA,gBAACV,GAAD,CAAQN,KAAG,EAACwB,QAAShS,KAAK0R,cAA1B,6B,GAvIM5C,a,i4BCrJtC,IAAMoD,GAAUxX,IAAOC,IAAV,MAMPwX,GAAuBzX,IAAOC,IAAV,MAWpByX,GAAS1X,IAAOC,IAAI+S,OAAM,gBAAG2E,EAAH,EAAGA,MAAH,MAA6B,CACzDC,MAAO,CACHC,SAAS,QAAD,OAAUF,EAAV,gBAFD3X,CAAH,MAQgB,mBAA0B,IAA1B,EAAG2X,MAA2B,OAAS,QAG7DG,GAAW9X,IAAOC,IAAV,MAEF,qBAAG8X,OAOTC,GAAYhY,IAAOC,IAAV,MAEH,qBAAG8X,OA+BAE,GAnB4C,SAAC,GAIrD,IAHHrD,EAGE,EAHFA,IACAjG,EAEE,EAFFA,IACAuJ,EACE,EADFA,IAEMC,EAAexJ,EAAMiG,EAAO,IAClC,OACI,gBAAC4C,GAAD,KACI,gBAACM,GAAD,CAAUC,IAAKI,IACf,gBAACH,GAAD,CAAWD,IAAKI,GAAhB,UACQtW,KAAKC,MAAM6M,EAAM,IADzB,mBAGA,gBAAC8I,GAAD,KACI,gBAACC,GAAD,CAAQC,MAAOO,EAAMtD,O,q4BCtDrC,IAAMwD,GAAsBpY,IAAOC,IAAV,MAQnBoY,GAAqBrY,IAAOC,IAAV,MAqBlBiU,GAAYlU,YAAOuV,GAAPvV,CAAH,MAkBMsY,G,kDAKjB,WAAY9E,GAAe,IAAD,8BACtB,cAAMA,IALF+C,cAIkB,IAHlBgC,gBAGkB,IAFlBC,gBAEkB,IAU1BC,mBAAqB,SAACC,GAAsB,IAAD,EACD,EAAKlF,MAAnChC,EAD+B,EAC/BA,UAAWnG,EADoB,EACpBA,eACFqN,EAAUrN,iBACVA,IACTA,IAAmBtI,EAAeyN,UAClC,EAAKmI,iBACEtN,IAAmBtI,EAAewO,eACzC,EAAKqH,iBAITF,EAAUlH,YAAcA,GACxB,EAAKmD,SAAS,CAAErT,QAAS,KAtBP,EA0B1BqX,eAAiB,WACb,EAAKpC,SAAWsC,aAAY,WACxB,EAAKlE,SAAS,CAAErT,QAAS,EAAK8K,MAAM9K,QAAU,MAC/C,MA7BmB,EAgC1BsX,cAAgB,WACZE,cAAc,EAAKvC,WA9BnB,EAAKnK,MAAQ,CACT9K,QAAS,GAEb,EAAKiX,WAAa,KAClB,EAAKC,WAAa,IAPI,E,qDAoChB,IACEhH,EAAclM,KAAKkO,MAAnBhC,UACAlQ,EAAYgE,KAAK8G,MAAjB9K,QACFyX,EZpBP,YAOsB,IANzB1Y,EAMwB,EANxBA,GACAkB,EAKwB,EALxBA,GACAC,EAIwB,EAJxBA,GACAC,EAGwB,EAHxBA,GACAC,EAEwB,EAFxBA,GACAC,EACwB,EADxBA,GAEA,MAAW,MAAPtB,GAAqB,MAAPkB,EACPC,EAAKC,EAAK,IAAMC,EAAKC,EAErBtB,EAAKkB,EAAK,IAAMC,EAAKC,EAAK,IAAMC,EAAKC,EYSpBqX,CAAmB3X,EAAaC,IAExD,OACI,gBAAC8W,GAAD,KACI,gBAACC,GAAD,KACI,4BAAOU,IAEX,gBAAC,GAAD,CAAW/E,SAAUxC,GACjB,gBAAC,GAAD,CACI7C,IAAKrJ,KAAKkT,WACV5D,IAAKtP,KAAKiT,WACVL,IAAK5W,IAET,gBAAC,KAAD,CACI2X,wBAAwB,EACxBC,yBAA0B,GAC1BC,sBAAuB,CACnBC,KAAQC,cACRD,KAAQE,iBAEZC,OAAQ,aACRC,kBAAkB,EAClBC,OAAQ,GACRlT,IAAOiL,EAAYA,EAAUrL,IAAM,W,GAnEpBiO,a,67BCrDvC,IAAMsF,GAAiB1Z,IAAOC,IAAV,MAII,qBAAG+V,OAAuB,QAAU,aAOtD9V,GAAUF,IAAOC,IAAV,MAIP0Z,GAAqB3Z,IAAO4Z,MAAV,MAmBlBC,GAAQ7Z,IAAO8Z,KAAV,MAsBLC,G,kDAEF,WAAYvG,GAAe,IAAD,8BACtB,cAAMA,IAFFwB,IAAMZ,cACY,EAQ1BE,kBAAoB,WAAO,IAAD,EACtB,YAAKU,IAAIR,eAAT,SAAkBhO,iBAAiB,WAAY,EAAKwT,aAT9B,EAY1BC,qBAAuB,WAAO,IAAD,EACzB,YAAKjF,IAAIR,eAAT,SAAkB0F,oBAAoB,WAAY,EAAKF,aAbjC,EAgB1BA,WAAa,WACT,EAAKrF,SAAS,CAAEqB,QAAQ,KAjBF,EAoB1BmE,QAAU,WACN,EAAKxF,SAAS,CAAEqB,QAAQ,KAlBxB,EAAK5J,MAAQ,CACT4J,QAAQ,GAJU,E,qDAwBhB,IAAD,EACwB1Q,KAAKkO,MAA1BE,EADH,EACGA,UAAW0G,EADd,EACcA,MAEXpE,EAAW1Q,KAAK8G,MAAhB4J,OAER,OACI,gBAAC0D,GAAD,CAAgB1D,OAAQA,EAAQtC,UAAWA,GACvC,gBAACmG,GAAD,KAAQO,GACR,gBAAC,GAAD,KACI,gBAACT,GAAD,eACI3E,IAAK1P,KAAK0P,IACVmF,QAAS7U,KAAK6U,SACT7U,KAAKkO,c,GAtCVY,aAgDTA,iBACX,SAACZ,EAAcwB,GAAf,OACI,gBAAC,GAAD,iBAAexB,EAAf,CAAsBwB,IAAKA,QCjHtBqF,GAAgB,CACzB,mDACA,uDACA,wCACA,iGACA,6CACA,4FACA,8FACA,yDACA,iDACA,kDACA,kDACA,yEACA,yEACA,yDACA,iEACA,oEACA,iDACA,0DACA,sDACA,iEACA,6CACA,0CACA,6DACA,+DACA,gDACA,mCACA,sDACA,sCACA,uC,8XCnBJ,IAAMC,GAAwBta,IAAOC,IAAV,MASrBsa,GAAoBva,YAAO+Z,GAAP/Z,CAAH,MAiBFwa,G,kDAMjB,WAAYhH,GAAe,IAAD,8BACtB,cAAMA,IANF+C,cAKkB,IAJlBgC,gBAIkB,IAHlBC,gBAGkB,IAFlBiC,mBAEkB,IAY1BhC,mBAAqB,SAACC,GAAsB,IAAD,EACD,EAAKlF,MAAnChC,EAD+B,EAC/BA,UAAWnG,EADoB,EACpBA,eACFqN,EAAUrN,iBACVA,IACTA,IAAmBtI,EAAeyN,UAClC,EAAKmI,iBACEtN,IAAmBtI,EAAewO,eACzC,EAAKqH,iBAITF,EAAUlH,YAAcA,GACxB,EAAKmD,SAAS,CAAErT,QAAS,KAxBP,EA4B1BqX,eAAiB,WACb,EAAKpC,SAAWsC,aAAY,WACxB,EAAKlE,SAAS,CAAErT,QAAS,EAAK8K,MAAM9K,QAAU,MAC/C,MA/BmB,EAkC1BsX,cAAgB,WACZE,cAAc,EAAKvC,WAnCG,EAsC1BmE,oBAAsB,SAACpZ,GAcnB,GAAIA,EAAU,EAAG,CACb,IAAMqZ,EACF9Y,KAAKC,MAAMR,EAXI,KAYf,EAAKmZ,cAAczR,OACvB,MAAO,CACH,kDACA,EAAKyR,cAAcE,IAG3B,MAAO,CAAC,GAAI,KA1DZ,EAAKvO,MAAQ,CACT9K,QAAS,GAEb,EAAKiX,WAAa,KAClB,EAAKC,WAAa,IAClB,EAAKiC,cAAgBJ,Gf5CtB,SAAsBO,GACzB,IAAK,IAAIlR,EAAIkR,EAAM5R,OAAS,EAAGU,GAAK,EAAGA,IAAK,CACxC,IAAMmR,EAAIhZ,KAAKC,MAAMD,KAAKiZ,UAAYpR,EAAI,IADF,EAEjB,CAACkR,EAAMlR,GAAIkR,EAAMC,IAAvCD,EAAMC,GAFiC,KAE7BD,EAAMlR,GAFuB,Me4CxCqR,CAAa,EAAKN,eATI,E,qDAgEhB,IACEnZ,EAAYgE,KAAK8G,MAAjB9K,QACF0Z,EAAe1V,KAAKoV,oBAAoBpZ,GACxC2Z,IAAUD,EAAa,GAE7B,OACI,gBAACV,GAAD,KACKW,GACG,gBAACV,GAAD,CACIH,MAAOY,EAAa,GACpBnT,MAAOmT,EAAa,GACpBE,UAAQ,S,GAjFU9G,a,uKC3B1C,IAAM+G,GAAoBnb,IAAOC,IAAV,MAIjB,qBAAG6V,KACE,6CA6CIsF,GAnC+C,SAAC,GAGxD,IAFHC,EAEE,EAFFA,aACAhQ,EACE,EADFA,eAsBMiQ,EApBmB,SACrBD,EACAE,GAEA,GAAIF,EACA,MAAO,qGAEP,OAAQE,GACJ,KAAMA,EAASxY,EAAewO,cAC1B,MAAO,mEACX,KAAMgK,EAASxY,EAAeyN,UAC1B,MAAO,wDACX,KAAM+K,EAASxY,EAAeuO,oBAC1B,MAAO,6BACX,QACI,MAAO,IAKDkK,CAAiBH,EAAchQ,GAErD,OACI,gBAAC8P,GAAD,CACIrF,IAAKuF,GAAgBhQ,IAAmBtI,EAAeyN,WAEtD8K,I,8qCClDbG,KAAWC,cAAc,QAMzB,IA+DeC,GA9CM3b,aAjB4B,SAAC,GAG/B,IAFf0T,EAEc,EAFdA,UACGF,EACW,8BACRoI,EAAgB,UAAMlI,EAAN,aAChBmI,EAAgB,UAAMnI,EAAN,aACtB,OACI,gBAAC,KAAD,eACIoI,eAAgB,IAChBC,gBAAiBrI,EACjBA,UAAWkI,EACXC,iBAAkBA,GACdrI,MAKKxT,CAAH,MChBGgc,G,uKACP,IACEvb,EAAa6E,KAAKkO,MAAlB/S,SAER,OACI,gBAAC,GAAU6E,KAAKkO,MACZ,uBAAKE,UAAU,SAASjT,Q,GANE2T,a,g1BCL1CqH,KAAWC,cAAc,QAEzB,IAAMO,GAAUjc,IAAOC,IAAV,MAEPG,GAAQJ,IAAOuB,GAAV,MAML2a,GAAOlc,IAAOC,IAAV,MAMJkc,GAAanc,IAAO4V,OAAV,MAeVJ,GAAmBxV,IAAOC,IAAV,MAgBTmc,GAAb,4MACInF,SAAW,WAAO,IAAD,EACiB,EAAKzD,MAA3ByD,EADK,EACLA,SAAUoF,EADL,EACKA,QAClBpF,IACAoF,KAJR,uDAOc,IAAD,EACiC/W,KAAKkO,MAAnC8I,EADH,EACGA,OAAQD,EADX,EACWA,QAASjF,EADpB,EACoBA,SACzB,OACI,gBAAC,GAAD,CAAOkF,OAAQA,EAAQC,eAAgBF,GACnC,gBAACJ,GAAD,KACI,gBAAC,GAAD,kEACA,gBAACC,GAAD,kGAIA,gBAAC,GAAD,KACI,gBAAC9F,GAAD,CAAQkB,QAAS+E,GAAjB,YACA,gBAACjG,GAAD,CAAQC,OAAK,EAACiB,QAASF,GAAvB,mBAIJ,gBAAC+E,GAAD,CAAY7E,QAAShS,KAAK2R,UAA1B,sCAvBpB,GAAwC7C,a,oBC/C3BoI,GAAe,uCAAG,WAAOtQ,GAAP,eAAA3L,EAAA,sDACrBkc,EAAcC,GAAU,gBAAkBxQ,GAChDrL,OAAO8b,SAAStK,QAAQoK,GAFG,2CAAH,sDAKfG,GAAW,uCAAG,WACvBC,GADuB,eAAAtc,EAAA,6DAGjB4F,EAAMuW,GACR,gBAAkBG,EAAU,YAAcA,EAAU,KAJjC,kBAOhBC,KAAM,CACTC,OAAQ,MACR5W,IAAKA,IAEJxB,MAAK,SAACqY,GACH,OAAOA,EAAS9X,QAEnBwR,OAAM,SAACrS,GAEJ,OADA0B,QAAQ1B,MAAMA,EAAMuF,SACb9F,QAAQE,OAAOK,EAAM4Y,UAhBb,2CAAH,sDA6EXC,GAAW,uCAAG,WACvB/X,EACAgY,GAFuB,uCAAA5c,EAAA,6DAGvB6c,EAHuB,gCAKjBjX,EAAMuW,GAAU,aAEhBxQ,EAAK/G,EAAM+G,IAAMuG,eAEjB4K,EAAqB,IAAIC,UACtBC,OAAO,QAASpY,EAAMyB,MAE3BuW,IACMK,EAAalQ,KAAK0B,UAAU,CAC9ByO,IAAKN,EAAaM,IAClBC,OAAQP,EAAaO,OACrBC,WAAYzR,EAAGmG,QAAQ,gBAAiB,IACxCuL,UAAWT,EAAaS,YAGtBC,EAAW,IAAIC,KAAK,CAACN,GAAa,CACpCvP,KAAM,eAGVoP,EAASE,OAAO,WAAYM,IAG1BE,EAAkBC,GAAqB7Y,EAAM8Y,aA3B5B,kBA6BhBnB,KAAM,CACTC,OAAQ,OACR5W,IAAKA,EACL+X,QAAS,CACL,eAAgB,sBAChBhS,KACAiS,SAAUJ,EACVK,WAAYhB,GAEhBlY,KAAMmY,IAEL1Y,MAAK,SAACqY,GACH,OAAOA,EAAS9X,QAEnBwR,OAAM,SAACrS,GAEJ,OADA0B,QAAQ1B,MAAMA,EAAMuF,SACb9F,QAAQE,OAAOK,EAAM4Y,UA7Cb,2CAAH,wDAyDXoB,GAAY,uCAAG,WACxBnS,EACArF,GAFwB,iBAAAtG,EAAA,6DAIlB+d,EAAS5B,GAAU,oBAJD,kBAODI,KAAM,CACrBC,OAAQ,MACR5W,IAAKmY,EACLJ,QAAS,CACLhS,KACAqS,YAAa1X,KAZD,cAOd2X,EAPc,yBAeb1a,QAAQC,QAAQya,EAAKtZ,OAfR,uCAiBpBa,QAAQ1B,MAAM,KAAMuF,SAjBA,kBAkBb9F,QAAQE,OAAO,KAAMiZ,OAlBR,yDAAH,wDA8BZwB,GAAiB,uCAAG,WAC7BjN,EACA2L,GAF6B,yBAAA5c,EAAA,6DAIvB+d,EAAS5B,GAAU,yBAEnBxQ,EAAKsF,EAAUtF,IAAMuG,cAErB+K,EAAalQ,KAAK0B,UAAU,CAC9ByO,IAAKN,EAAaM,IAClBiB,iBAAkBlN,EAAU/K,SAC5BiX,OAAQP,EAAaO,OACrBiB,YAAanN,EAAUvO,WACvB0a,WAAYzR,EAAGmG,QAAQ,gBAAiB,IACxCuL,UAAWT,EAAaS,YAGtBC,EAAW,IAAIC,KAAK,CAACN,GAAa,CACpCvP,KAAM,gBAGJoP,EAAqB,IAAIC,UACtBC,OAAO,WAAYM,GAtBC,kBAyBNf,KAAM,CACrBC,OAAQ,OACR5W,IAAKmY,EACLJ,QAAS,CACL,eAAgB,sBAChBhS,MAEJhH,KAAMmY,IAhCe,cAyBnBmB,EAzBmB,yBAkClB1a,QAAQC,QAAQya,EAAKtZ,OAlCH,yCAoCzBa,QAAQ1B,MAAM,KAAMuF,SApCK,kBAqClB9F,QAAQE,OAAO,KAAMiZ,OArCH,0DAAH,wDAyCxBP,GAAY,WAA8B,IAA7BkC,EAA4B,uDAAV,MAC7BC,EAAWhe,OAAO8b,SAASmC,OAK/B,OAJID,EAASzM,SAAS,eAClByM,EAAWA,EAASxM,QAAQ,OAAQ,SAGlC,GAAN,OAAUwM,EAAV,YAAsBD,IAGpBZ,GAAuB,SAACe,GAE1B,OAAOA,EAAM5c,WAAW6c,SADC,EAC0B,MAQ1CC,GAAe,uCAAG,WAAO/S,GAAP,iBAAA3L,EAAA,6DACrB+d,EAAS5B,GAAU,cADE,kBAIJI,KAAM,CACrBC,OAAQ,SACR5W,IAAKmY,EACLJ,QAAS,CACLhS,QARe,cAIjBsS,EAJiB,yBAWhB1a,QAAQC,QAAQya,EAAKtZ,OAXL,yDAahBpB,QAAQE,OAAR,OAbgB,yDAAH,sDAqBfkb,GAAkB,uCAAG,WAAO/Z,GAAP,SAAA5E,EAAA,sEACjB2c,GAAY/X,OAAOmD,GAAW,GADb,mFAAH,sD,wpGCxO/B,IAAM6W,GAAoBnf,IAAOC,IAAV,MASjBmf,GAAmBpf,IAAOC,IAAV,MAgBC,qBAAG+V,OAAuB,EAAI,KAI/CqJ,GAAWrf,IAAOC,IAAV,MAQRqf,GAAWtf,IAAOC,IAAV,MAIU,qBAAGyJ,EAAa,IAAM,EAAI,UAAY,WAaxD6V,GAAavf,YAAOsf,GAAPtf,CAAH,MAUVwf,GAAaxf,IAAOC,IAAV,MAcVwf,GAAQzf,IAAOkE,MAAV,MAIL8T,GAAYhY,IAAOC,IAAV,MAKS,qBAAGyf,UAA6B,UAAY,UAG9DC,GAAc3f,IAAO4V,OAAV,MAEO,qBAAGgK,WAA+B,MAAQ,aAEjD,qBAAGA,WAA+B,kBAAoB,MA0BjEC,GAAuB7f,YAAO8f,MAAgB9M,MAAM,CACtDU,UAAW,kBACXqM,eAAgB,QAChBC,cAAe,OACfC,kBAAmB,YAJMjgB,CAAH,MAwBpBkgB,GAAiBlgB,IAAOC,IAAV,MAMdkgB,GAAengB,IAAOC,IAAV,MA+BZmgB,G,kDAUF,WAAY5M,GAAe,IAAD,uBACtB,cAAMA,IAVF6M,cASkB,IARlB5J,UAQkB,IAPlBF,cAOkB,IANlB7K,aAMkB,IALlB4U,gBAAkB,EAKA,EAJlBC,oBAIkB,IAFlBC,MAAQna,SAASC,cAAc,SAEb,EAoB1BgO,kBApB0B,sBAoBN,8BAAA/T,EAAA,sDACV4F,EAAM,EAAKsa,qBACTvW,EAAe,EAAKsJ,MAApBtJ,WACR,EAAKuM,KAAO,IAAIzM,EAAK7D,EAAK+D,GAC1B,EAAKuM,KAAKlM,iBAAmB,EAAKmW,qBAClC,EAAKjK,KAAKjM,iBAAmB,EAAKmW,mBAClC,EAAKlK,KAAK/L,wBAA0B,EAAKkW,4BACzC,EAAKnK,KAAK9L,mBAAqB,EAAKkW,uBACpC,EAAKpK,KAAK7L,oBAAsB,SAACU,GAAD,OAC5B,EAAKwV,wBAAwBxV,IACjC,EAAKmL,KAAK3L,QAAU,EAAKiW,gBAEzB,EAAKtK,KAAKnM,aAAe,SAAC0W,GAAyB,IAC9B9c,EAAU,EAAKmc,SAAxB7L,QACJtQ,IACAA,EAAM+c,UAAYD,IAI1B,EAAKvK,KAAKhM,mBAAqB,SAAC+G,GAC5B,EAAKmD,SAAS,CAAEnD,eAGpB,EAAKiF,KAAKhT,gBAAkB,EAAKyd,sBAEjC,EAAKzK,KAAK5L,SAAW,EAAKsW,eAE1B,EAAKxM,SAAS,CAAE9I,gBAAiB,EAAK4K,KAAKnE,YAC3CzR,OAAO2F,iBAAiB,eAAgB,EAAK4a,WAC7C,EAAKC,eACLxgB,OAAO2F,iBAAiB,WAAY,EAAK8a,eAGzC,EAAKC,iBAGLlb,SAASmb,KAAKhb,iBAAiB,WAAY,EAAKib,eApChC,4CApBM,EA2D1BxH,qBA3D0B,sBA2DH,sBAAA1Z,EAAA,sDAEnB,EAAKkW,KAAK9L,mBAAqB,aAC/B9J,OAAOqZ,oBAAoB,eAAgB,EAAKkH,WAChDvgB,OAAOqZ,oBAAoB,WAAY,EAAKoH,eAJzB,2CA3DG,EAsE1BC,eAAiB,WACb,EAAKf,MAAMkB,aAAa,OAAQ,IAChC,EAAKlB,MAAMkB,aAAa,QAAS,mBAEjC,IAAMC,EAAS,SAACC,EAAkBD,GAC9B,MAAO,QAAUC,EAAW,WAAaD,GAIvCE,EAAmB,SACrBC,EACA7T,EACA8T,GAEA,IAAMC,EAAS3b,SAASC,cAAc,UACtC0b,EAAOzb,IAAMwb,EACbC,EAAO/T,KAAO,SAAWA,EACzB6T,EAAQG,YAAYD,IAIxBH,EACI,EAAKrB,MACL,OACAmB,EAAO,aAAc,yBAEzBE,EACI,EAAKrB,MACL,MACAmB,EAAO,YAAa,yBAIxBtb,SAASmb,KAAKS,YAAY,EAAKzB,QAvGT,EA0G1BiB,cAAgB,WACZ,EAAKjB,MAAM0B,OACX7b,SAASmb,KAAKtH,oBAAoB,WAAY,EAAKuH,eACnD1b,QAAQkC,IAAI,+BA7GU,EAgH1BiZ,sBAAwB,SAAC/b,IAGrB1B,EAD4B,EAAK+P,MAAzB/P,iBACQ0B,IAnHM,EA0H1Bic,UAAY,SAAClU,GAAO,IAAD,EACuB,EAAKd,MAAnCoF,EADO,EACPA,UAAWnG,EADJ,EACIA,eACnB6B,EAAEiV,kBACE3Q,GAAanG,IAAmBtI,EAAeyN,aAC/CtD,EAAEkV,YAAc,KA9HE,EAsI1Bd,cAAgB,SAACpU,GAAO,IAAD,EACmB,EAAKd,MAAnCoF,EADW,EACXA,UAAWnG,EADA,EACAA,eACXgX,EAAY,EAAK7O,MAAjB6O,QAIR,GAFAnV,EAAEiV,iBAEE9W,IAAmBtI,EAAeyN,UAClC,EAAK6Q,eACLiB,MAAM,oCACNpV,EAAEkV,YAAc,QACb,GAAI5Q,EAAW,CACG3Q,OAAOkW,QACxB,+FAMAsL,EAAQhQ,QAAQ,MAHhB,EAAKgP,eACLnU,EAAEkV,YAAc,MAtJF,EAiK1B1B,qBAAuB,SAACnV,GACpB,EAAKoJ,SAAS,CAAEpJ,aAlKM,EAqK1BoV,mBAAqB,SAAC9U,GAClB,EAAK8I,SAAS,CAAE9I,qBAtKM,EAyK1BwV,aAAe,WAEXxgB,OAAOwhB,QAAQE,UACX,CAAE7d,KAAM,eACR,wBACA7D,OAAO8b,SAASjc,OA9KE,EAkL1Bue,gBAlL0B,sBAkLR,4BAAA1e,EAAA,6DACNiR,EAAc,EAAKpF,MAAnBoF,UADM,SAERgR,GAAoBhR,EAAUtF,IAFtB,OAGd,EAAKyI,SAAS,CAAEnD,eAAWlJ,IAHb,2CAlLQ,EAwL1Bma,eAAiB,kBAAM,EAAKlM,UAAY,EAAK7K,SAxLnB,EA0L1BgX,eAAiB,WACR,EAAKD,mBACN,EAAKlM,SAAWsC,aAAY,WACxB,EAAKlE,SAAS,CACVgO,UAC6B,IAAzB,EAAKvW,MAAMuW,UACL,EACA,EAAKvW,MAAMuW,UAAY,MAEtC,KAEH,EAAKjX,QAAU1F,YAAW,WACtB,EAAKyQ,KAAKzO,iBACV,EAAK4a,oBACN,OAxMe,EA4M1BA,gBAAkB,WACd9J,cAAc,EAAKvC,UACnBsM,aAAa,EAAKnX,SAClB,EAAK6K,cAAWjO,EAChB,EAAKoD,aAAUpD,EACftC,YAAW,kBAAM,EAAK2O,SAAS,CAAEgO,UAAW,MAAM,MAjN5B,EAoN1B/B,4BAA8B,SAACvV,GAC3B,EAAKsJ,SAAS,CAAEtJ,mBACZ,EAAKyX,mBAAmBzX,IAExB,EAAKqX,iBACD,EAAKtW,MAAMoF,WACX,EAAKmD,SAAS,CAAEnD,eAAWlJ,KAG/B+C,IAAmBtI,EAAeuO,qBAClC,EAAKlF,MAAMb,QAAQvC,QAAU,EAAKsX,iBAElCjV,EAAiBtI,EAAewO,cAChC,EAAKoD,SAAS,CAAEtJ,mBAChB0X,KAAM1e,MACF,wGACA,CACI2e,QAAS,kBAGjB,EAAKrO,SAAS,CAAEiL,YAAY,IAC5B,EAAKW,eAAe/L,QAAQyO,QAC5B,EAAK1C,eAAe/L,QAAQ0O,gBAAe,IAE3C7X,IAAmBtI,EAAeuO,qBACjC,EAAKlF,MAAMb,QAAQ4X,OAAM,SAACC,GAAD,OAAOA,EAAExS,SAQnC,EAAKgS,mBANLvX,EAAiBtI,EAAewO,cAChC,EAAKoD,SAAS,CAAEtJ,mBAChB0X,KAAM1e,MAAM,2DAA6C,CACrD2e,QAAS,mBAlPK,EAyP1BF,mBAAqB,SAACzX,GAClB,OACIA,IAAmBtI,EAAeuO,qBAClC,EAAKlF,MAAMb,QAAQ4X,OAAM,SAACC,GAAD,OAAOA,EAAExS,UAClC,EAAKxE,MAAMb,QAAQvC,QAAU,EAAKsX,iBA7PhB,EAiQ1BO,uBAAyB,SAACzV,GACtB,EAAKuJ,SAAS,CAAEvJ,cACZA,IAAcxI,EAAUkK,YACxB/G,QAAQkC,IAAI,6BACZ8a,aAAM,qCAA0B,CAAEC,QAAS,iBArQzB,EAyQ1BlC,wBAA0B,SAACxV,GACvB,EAAKqJ,SAAS,CAAErJ,eAChBvF,QAAQkC,IAAI,gBAAkBqD,EAAW+X,gBA3QnB,EA8Q1B5C,mBAAqB,WAAc,IAIb6C,EAEd,EAAK9P,MAHL+P,MACIC,OAAUF,OAaZG,GAPF5iB,OAAO8b,SAAS+G,SAChB,KACA7iB,OAAO8b,SAASgH,KAChB,IACAL,GAGeM,MAAM,KAGzBH,EAAMI,OAAOJ,EAAMza,OAAS,EAAG,EAAG,MAClC,IAAI7C,EAAMsd,EAAM9gB,KAAK,KAGjBwD,EAAIiM,SAAS,eACbjM,EAAMA,EAAIkM,QAAQ,OAAQ,SAI9B,IAAMyR,EAAW3d,EAAIkM,QAAQ,OAAQ,MAInBnG,EACd,EAAKsH,MADLtJ,WAAcgC,GAIlB,OAAO4X,EAASC,OAAT,WAAoB7X,KAnTL,EAsT1BkL,SAtT0B,sBAsTf,sBAAA7W,EAAA,sEACD,EAAKkW,KAAK9D,cADT,uBAGD,EAAKqR,SAHJ,2CAtTe,EA8T1B7C,eA9T0B,sBA8TT,sBAAA5gB,EAAA,sDACb,EAAKyjB,SADQ,2CA9TS,EAkU1BA,OAlU0B,sBAkUjB,8BAAAzjB,EAAA,6DACGiR,EAAc,EAAKpF,MAAnBoF,UACA3G,EAAa,EAAK2I,MAAlB3I,SAFH,SAKC,EAAKwT,eALN,WAQD7M,EAAUtF,GART,gCASKrB,EAAS2G,GATd,OAUD,EAAKiF,KAAK9P,aAVT,2CAlUiB,EAsV1B0X,aAtV0B,sBAsVX,sCAAA9d,EAAA,6DACHiR,EAAc,EAAKpF,MAAnBoF,UADG,SAGiBgR,GACxBhR,EAAUtF,GACVsF,EAAU3K,YALH,UAQkB,KALvB2B,EAHK,QAQOQ,OARP,iBASDtF,EAAS,EAAK+S,KAAKlO,iBAAiBC,GATnC,cAUa9E,GAVb,gEAUIyB,EAVJ,kBAWGqd,GAAuBrd,GAX1B,uMAtVW,EAsW1B8e,gBAtW0B,sBAsWR,4BAAA1jB,EAAA,6DACd,EAAKoU,SAAS,CAAEiL,YAAY,IACtBoD,EAAU,eAFF,SAIVD,KAAMmB,QAAQlB,GAJJ,SAKJjiB,UAAUojB,UAAUC,UAAUvjB,OAAO8b,SAASjc,MAL1C,OAMVqiB,aAAM,uBAAqB,CACvBC,YAPM,gDAUVD,KAAM1e,MAAM,4DAAuD,CAC/D2e,QAAS,gBAXH,yDAtWQ,EAsX1BqB,iBAAmB,WACf,EAAK1P,SAAS,CAAE2P,WAAW,KAvXL,EA0X1BC,kBAAoB,WAChB,EAAK5P,SAAS,CAAE2P,WAAW,KA3XL,EA8X1BvD,gBAAkB,SAACnX,GACf,EAAK+K,SAAS,CAAEtQ,MAAOuF,KA/XD,IAEdM,EAAesJ,EAAftJ,WAFc,OAGtB,EAAKkC,MAAQ,CACThB,UAAWxI,EAAUwK,aACrBuV,UAAW,EACXtX,eAAgBtI,EAAewO,cAC/BjG,WAAYzI,EAAWgP,mBACvBtG,QAAS,CAACrB,GACVsH,eAAWlJ,EACXuD,iBAAiB,EACjByY,WAAW,EACXjgB,WAAOiE,EACPsX,YAAY,GAGhB,EAAKS,SAAWjM,cAChB,EAAKmM,eAAiBnM,cAjBA,E,wDA6JdoQ,GACRzB,KAAM1e,MAAMmgB,EAAc,CAAExB,QAAS,gB,+BAoO/B,IAAD,EAYD1d,KAAK8G,MAVLb,EAFC,EAEDA,QACAoX,EAHC,EAGDA,UACAvX,EAJC,EAIDA,UACAC,EALC,EAKDA,eACAmG,EANC,EAMDA,UACAlG,EAPC,EAODA,WACAgZ,EARC,EAQDA,UACAzY,EATC,EASDA,gBACAxH,EAVC,EAUDA,MACAub,EAXC,EAWDA,WAKc0D,EAEdhe,KAAKkO,MAHL+P,MACIC,OAAUF,OAYlB,OAPIlY,IAAcxI,EAAUwK,cACxB9B,IAAezI,EAAWgP,oBAE1BkR,KAAMrU,KAAK,uCAA+B,CACtCsU,QAAS,oBAIb,gBAAC7D,GAAD,KACI,gBAACC,GAAD,CACIpJ,OAAQ1Q,KAAKwd,mBAAmBzX,IAE/BsX,GAEJtX,IAAmBtI,EAAeyN,WAC/B,gBAACmP,GAAD,CACIrI,QAAShS,KAAK2e,gBACdjP,IAAK1P,KAAKib,eACVX,WAAYA,GAEZ,wFAKR,gBAACP,GAAD,KACI,gBAACE,GAAD,KACI,gBAACC,GAAD,KACI,gDACA,iDACgB,4BAAO8D,KAG3B,gBAAC,EAAD,CAASlQ,OAAQ,GAAIC,MAAO,MAE/B9H,EAAQjJ,KAAI,SAAC8N,EAAoB1G,GAArB,OACT,gBAAC4V,GAAD,CAAU5V,EAAGA,EAAG+a,IAAK/a,GACjB,4BAAO0G,EAAOzD,UACd,gBAAC,GAAD,CAAW+S,UAAWtP,EAAOQ,aAIzC,gBAAC,GAAD,CACI6F,KAAMnR,KAAKmR,KACXjF,UAAWA,EACXnG,eAAgBA,KAElBQ,IAAoBxH,GAClB,gBAAC,GAAD,CACIgX,eAAgB7J,EAChBnG,eAAgBA,IAGvBhH,GACG,gBAAC6b,GAAD,KACI,gBAACC,GAAD,4GAMR,gBAAC,GAAD,CACI1J,KAAMnR,KAAKmR,KACXQ,SAAU3R,KAAK+e,iBACfjN,SAAU9R,KAAK8R,SACf5F,UAAWA,EACXnG,eAAgBA,EAChBC,WAAYA,EACZ+L,cAAexL,EACf+K,YAAatR,KAAKsR,cAEtB,gBAAC6I,GAAD,CAAOiF,UAAQ,EAACC,UAAQ,EAAC3P,IAAK1P,KAAK+a,WACnC,gBAAC,GAAD,CACI7O,UAAWA,EACXnG,eAAgBA,IAEpB,gBAAC,GAAD,CACIiR,OAAQgI,EACRrN,SAAU3R,KAAK2Z,gBACf5C,QAAS/W,KAAKif,kBACdnN,SAAU9R,KAAK8R,WAEnB,gBAACyI,GAAD,CACI+E,SAAS,gBACTC,iBAAe,EACfC,WAAW,EACXC,cAAc,EACdC,WAAYC,Y,GAxfT7Q,aA+fR8Q,eAAW9E,IC1sBb+E,GAA2B,CACpC,CAAEjZ,GAAI,YAAaxH,KAAM,SACzB,CAAEwH,GAAI,UAAWxH,KAAM,SACvB,CAAEwH,GAAI,WAAYxH,KAAM,SACxB,CAAEwH,GAAI,UAAWxH,KAAM,SACvB,CAAEwH,GAAI,WAAYxH,KAAM,SACxB,CAAEwH,GAAI,UAAWxH,KAAM,SACvB,CAAEwH,GAAI,UAAWxH,KAAM,SACvB,CAAEwH,GAAI,WAAYxH,KAAM,SACxB,CAAEwH,GAAI,UAAWxH,KAAM,QAGd0gB,GAA8B,CACvC,CAAElZ,GAAI,OAAQxH,KAAM,QACpB,CAAEwH,GAAI,OAAQxH,KAAM,QACpB,CAAEwH,GAAI,QAASxH,KAAM,aAGZ2gB,GAAiC,CAC1C,CAAEnZ,GAAI,QAASxH,KAAM,SACrB,CAAEwH,GAAI,OAAQxH,KAAM,QACpB,CAAEwH,GAAI,SAAUxH,KAAM,UACtB,CAAEwH,GAAI,OAAQxH,KAAM,QACpB,CAAEwH,GAAI,QAASxH,KAAM,YACrB,CAAEwH,GAAI,UAAWxH,KAAM,WACvB,CAAEwH,GAAI,QAASxH,KAAM,aAGZ4gB,GAA8B,CACvC,CAAEpZ,GAAI,MAAOxH,KAAM,UACnB,CAAEwH,GAAI,QAASxH,KAAM,eACrB,CAAEwH,GAAI,QAASxH,KAAM,SACrB,CAAEwH,GAAI,SAAUxH,KAAM,UACtB,CAAEwH,GAAI,YAAaxH,KAAM,yBACzB,CAAEwH,GAAI,WAAYxH,KAAM,iBACxB,CAAEwH,GAAI,QAASxH,KAAM,qBACrB,CAAEwH,GAAI,WAAYxH,KAAM,eACxB,CAAEwH,GAAI,cAAexH,KAAM,wBAC3B,CAAEwH,GAAI,SAAUxH,KAAM,UACtB,CAAEwH,GAAI,SAAUxH,KAAM,aACtB,CAAEwH,GAAI,WAAYxH,KAAM,qBACxB,CAAEwH,GAAI,aAAcxH,KAAM,gBAC1B,CAAEwH,GAAI,QAASxH,KAAM,SACrB,CAAEwH,GAAI,UAAWxH,KAAM,UACvB,CAAEwH,GAAI,YAAaxH,KAAM,kBACzB,CAAEwH,GAAI,SAAUxH,KAAM,UACtB,CAAEwH,GAAI,QAASxH,KAAM,SACrB,CAAEwH,GAAI,QAASxH,KAAM,aAEZ6gB,GAA+B,CACxC,CAAErZ,GAAI,SAAUxH,KAAM,sBACtB,CAAEwH,GAAI,QAASxH,KAAM,cACrB,CAAEwH,GAAI,UAAWxH,KAAM,iBACvB,CAAEwH,GAAI,UAAWxH,KAAM,iBACvB,CAAEwH,GAAI,WAAYxH,KAAM,aACxB,CAAEwH,GAAI,OAAQxH,KAAM,8BACpB,CAAEwH,GAAI,SAAUxH,KAAM,kBACtB,CAAEwH,GAAI,YAAaxH,KAAM,2BACzB,CAAEwH,GAAI,QAASxH,KAAM,mBACrB,CAAEwH,GAAI,WAAYxH,KAAM,oBACxB,CAAEwH,GAAI,SAAUxH,KAAM,UACtB,CAAEwH,GAAI,WAAYxH,KAAM,iBACxB,CAAEwH,GAAI,QAASxH,KAAM,aCpDV8gB,GATmC,SAAChS,GAAD,OAC9C,gBAAC,EAAD,eAAMC,QAAQ,WAAWC,UAAU,kBAAqBF,GACpD,2BACItH,GAAG,mBACHuZ,OAAO,wF,wWCEnB,IAAMC,GAAoB1lB,IAAOC,IAAV,MAGL,gBAAG+V,EAAH,EAAGA,OAAQ2P,EAAX,EAAWA,UAAWvS,EAAtB,EAAsBA,OAAtB,OACV4C,EAAW2P,EAAD,eAA+BvS,EAA/B,cAAa,QAAwC,UAKjEwS,GAAe5lB,IAAOC,IAAV,MAkBZ4lB,G,kDAEF,WAAYrS,GAAe,IAAD,8BACtB,cAAMA,IAFFsS,gBAAkB1R,cACA,EAQ1BE,kBAAoB,WAChB,GAAI,EAAKd,MAAMmS,UAAW,CAAC,IAAD,EAChBvS,EAAM,UAAG,EAAK0S,gBAAgBtR,eAAxB,aAAG,EAA8BM,aAC7C,EAAKH,SAAS,CAAEvB,aARpB,EAAKhH,MAAQ,CACTgH,OAAQ,GAJU,E,qDAehB,IAAD,EACmD9N,KAAKkO,MAArDwC,EADH,EACGA,OAAQ2P,EADX,EACWA,UAAWjS,EADtB,EACsBA,UAAWjT,EADjC,EACiCA,SAAUuU,EAD3C,EAC2CA,IACxC5B,EAAW9N,KAAK8G,MAAhBgH,OACR,OACI,gBAAC,WAAD,KACI,gBAACsS,GAAD,CACI1P,OAAQA,EACR2P,YAAaA,EACbjS,UAAWA,EACXN,OAAQA,EACR4B,IAAKA,GAEJvU,GAEJklB,GACG,gBAACC,GAAD,CAAc5Q,IAAK1P,KAAKwgB,iBACnBrlB,Q,GAjCF2T,aAyCRA,iBACX,SAACZ,EAAcwB,GAAf,OACI,gBAAC,GAAD,iBAAcxB,EAAd,CAAqBwB,IAAKA,Q,+wBCxElC,IAAM+Q,GAAuB/lB,IAAOC,IAAV,MAKpB+lB,GAAiBhmB,IAAOC,IAAV,MAgBdgmB,GAAoBjmB,YAAO6lB,GAAP7lB,CAAH,MAQjBkmB,GAAQlmB,YAAOmmB,GAAPnmB,CAAH,MAGa,qBAAGgW,OAAuB,SAAW,UAWhDoQ,GAA+B,SAAC,GAKtC,IAJH3lB,EAIE,EAJFA,SACAiT,EAGE,EAHFA,UACAsB,EAEE,EAFFA,IACAuC,EACE,EADFA,MACE,EAC8BnD,YAAe,GAD7C,mBACKiS,EADL,KACeC,EADf,KAWF,OACI,gBAACP,GAAD,CAAsBrS,UAAWA,EAAWsB,IAAKA,GAC7C,gBAACgR,GAAD,CAAgB1O,QAVJ,WAChBgP,GAAaD,KAUL,0BAAK9O,GACL,gBAAC2O,GAAD,CACI9S,OAAQ,GACRC,MAAO,GACP2C,OAAQqQ,EACR/S,KAAM,aAGd,gBAAC2S,GAAD,CAAmBjQ,OAAQqQ,GACtBA,EAAW5lB,EzBmDA,SAAf8lB,EACT9lB,EACA+lB,GAEA,OAAOpS,IAAMqS,SAASnkB,IAAI7B,GAAU,SAACimB,GACjC,OAAKtS,IAAMuS,eAAeD,IAItBA,EAAMlT,MAAM/S,WACZimB,EAAQtS,IAAMwS,aAAaF,EAAO,CAC9BjmB,SAAU8lB,EAAaG,EAAMlT,MAAM/S,SAAU+lB,MAI9CA,EAAGE,IATCA,KyBzDoBH,CAAa9lB,GAhBxB,SAACimB,GACrB,OAAOtS,eAAmBsS,EAAO,CAAEG,UAAW,UAqBvCzS,iBACX,SAACZ,EAAcwB,GAAf,OACI,gBAAC,GAAD,iBAAiBxB,EAAjB,CAAwBwB,IAAKA,Q,gtCC7ErC,IAAM8R,GAA0B9mB,IAAOC,IAAV,MAIL,qBAAG8mB,QAAyB,QAAU,aAOxDC,GAAiBhnB,IAAOinB,OAAV,MAedC,GAAelnB,IAAOmnB,OAAV,MAWZtN,GAAQ7Z,IAAO8Z,KAAV,MAULoM,GAAQlmB,YAAOmmB,GAAPnmB,CAAH,MAoBUonB,G,kDAEjB,WAAY5T,GAAe,IAAD,8BACtB,cAAMA,IAFF6T,UAAYjT,cACM,EAS1BE,kBAAoB,WAAO,IAAD,IACtB,YAAK+S,UAAU7S,eAAf,SAAwBhO,iBAAiB,WAAY,EAAKwT,YAC1D,YAAKqN,UAAU7S,eAAf,SAAwBhO,iBAAiB,UAAW,EAAK8gB,YAXnC,EAc1BrN,qBAAuB,WAAO,IAAD,EACzB,YAAKoN,UAAU7S,eAAf,SAAwB0F,oBACpB,WACA,EAAKF,aAjBa,EAqB1BA,WAAa,WACT,EAAKrF,SAAS,CAAEoS,SAAS,KAtBH,EAyB1BO,UAAY,WACR,EAAK3S,SAAS,CAAEoS,SAAS,KA1BH,EA6B1BQ,SAAW,SAACra,GACR,EAAKsG,MAAM+T,SAASra,EAAEsa,cAAc3f,OACpC,EAAK8M,SAAS,CAAEoS,SAAS,KA/BH,EAkC1BE,OAAS,WACL,EAAKtS,SAAS,CAAEoS,SAAS,KAhCzB,EAAK3a,MAAQ,CACTyL,SAAU,EACVkP,SAAS,GALS,E,qDAsChB,IAAD,EACgCzhB,KAAKkO,MAAlCiU,EADH,EACGA,QAASrN,EADZ,EACYA,MAAOsN,EADnB,EACmBA,SAChBX,EAAYzhB,KAAK8G,MAAjB2a,QAER,OACI,gBAACD,GAAD,CAAyBC,QAASA,EAASzP,QAAShS,KAAK2hB,QACrD,gBAAC,GAAD,KAAQ7M,GACR,gBAAC,GAAD,CAAOhH,OAAQ,GAAIC,MAAO,KAC1B,gBAAC2T,GAAD,CACIhS,IAAK1P,KAAK+hB,UACVM,SAAUriB,KAAKiiB,SACf1f,MAAO6f,GAEP,gBAACR,GAAD,CAAcrf,MAAO,KACpB4f,EAAQnlB,KAAI,SAAC4V,EAAaxO,GAAd,OACT,gBAACwd,GAAD,CAAczC,IAAK/a,EAAG7B,MAAOqQ,GACxBA,Y,GAxDe9D,aC7D7BwT,GAZ+B,SAACpU,GAAD,OAC1C,gBAAC,EAAD,eAAMC,QAAQ,cAAcC,UAAU,cAAiBF,GACnD,wBACIG,EAAE,kiB,2sBCGd,IAAMkU,GAAoB7nB,IAAOC,IAAV,MAQC,qBAAG+V,OAAuB,QAAU,aAYtD8R,GAAgB9nB,IAAO4Z,MAAM5G,MAAM,CAAE/E,KAAM,YAA3BjO,CAAH,MAWb4nB,GAAY5nB,YAAO+nB,GAAP/nB,CAAH,MACA,qBAAGgW,OAAuB,UAAY,UA6CtCgS,GArCyC,SAAC,GAGlD,IAFHC,EAEE,EAFFA,QACAN,EACE,EADFA,SACE,EACwBO,oBAAS,GADjC,mBACKjF,EADL,KACYkF,EADZ,KAEIC,EAAWC,iBAAyB,MAE1CC,2BAAgB,WAAO,IACX9T,EAAY4T,EAAZ5T,QAER,GAAgB,OAAZA,EAIA,OAHAA,EAAQhO,iBAAiB,UAAW8gB,GACpC9S,EAAQhO,iBAAiB,WAAYwT,GAE9B,WACHxF,EAAQ0F,oBAAoB,UAAWoN,GACvC9S,EAAQ0F,oBAAoB,WAAYF,MAGjD,IAEH,IAAMsN,EAAY,WACda,GAAS,IAGPnO,EAAa,WACfmO,GAAS,IAGb,OACI,gBAACN,GAAD,CAAmB7R,OAAQiN,EAAO3L,QAASqQ,GACvC,gBAACG,GAAD,CAAe9S,IAAKoT,IACpB,gBAAC,GAAD,CAAWpS,OAAQiS,MChEhBM,GAbqB,SAAC/U,GACjC,OACI,qCACQA,EADR,CAEI9S,KAAM8S,EAAM9S,KACZ8nB,OAAO,SACPC,IAAI,wBAEHjV,EAAM/S,WCZNioB,GACkB,aADlBA,GAGL,sF,6MCCR,IAAMC,GAA8B3oB,IAAOC,IAAV,MASZ2oB,G,uKAEb,OACI,gBAACD,GAAD,KACI,0BAAKD,IACL,yBAAIA,S,GAL4BtU,aCV1CyU,GAA0C,CAC5ClY,QAAQ,EACR8M,IAAK,CACDvR,GAAI,GACJxH,KAAM,IAEVgZ,OAAQ,CACJxR,GAAI,GACJxH,KAAM,IAEViI,SAAU,IAgDRmc,GAAqB,SAACC,GAAmC,IACnDtL,EAAkCsL,EAAlCtL,IAAK9M,EAA6BoY,EAA7BpY,OAAQ+M,EAAqBqL,EAArBrL,OAAQ/Q,EAAaoc,EAAbpc,SACvBqc,EAAuBH,GAkB7B,OAhBII,GAAiB9D,GAAM1H,KACvBuL,EAAqBvL,IAAMA,QAGhBnV,IAAXqI,IACAqY,EAAqBrY,OAASA,GAG9BsY,GAAiB7D,GAAS1H,KAC1BsL,EAAqBtL,OAASA,GAG9B/Q,IACAqc,EAAqBrc,SAAWA,GAG7Bqc,GAGLC,GAAmB,SACrBC,EACAC,GAEA,SAAID,IAAoBC,IACbD,EAAiB3Y,MAAK,qBAAGrE,KAAgBid,EAAYjd,O,olDCtEpE,IAAMkd,GAAuBppB,IAAOqpB,KAAV,MAYpBC,GAAgBtpB,YAAO+Z,GAAP/Z,CAAH,MAQbomB,GAAcpmB,YAAOupB,GAAPvpB,CAAH,MAYXwpB,GAAexpB,IAAO4V,OAAV,MAKM,qBAAG6T,SAA2B,OAAS,aAIvC,qBAAGA,SAA2B,OAAS,aAGjD,qBAAGA,SAA2B,UAAY,aAEnC,gBAAGA,EAAH,EAAGA,SAAH,2BAAgCA,EAAW,EAAI,EAA/C,UAoBfC,GAAiB1pB,IAAOC,IAAV,MAmCC0pB,G,kDACjB,WAAYnW,GAAe,IAAD,8BACtB,cAAMA,IAkCVoW,YAAc,WACV,EAAKjV,SAAS,CAAEhE,QAAS,EAAKvE,MAAMuE,UApCd,EAuC1BkZ,iBAAmB,SAAC3c,GAChB,IAAMP,EAAWO,EAAEsa,cAAc3f,MACjC,EAAK8M,SAAS,CAAEhI,cAzCM,EA4C1Bmd,YAAc,SAACjiB,GACX,IAAM4V,EAAM0H,GAAKxT,MACb,SAACuG,GAAD,OAAsBA,EAAIxT,OAASmD,KAInC4V,GACA,EAAK9I,SAAS,CAAE8I,SAnDE,EAuD1BsM,eAAiB,SAACliB,GACd,IAAM6V,EAAS0H,GAAQzT,MACnB,SAACuG,GAAD,OAAsBA,EAAIxT,OAASmD,KAInC6V,GACA,EAAK/I,SAAS,CAAE+I,YA9DE,EAsE1BsM,kBAAoB,SAACniB,GACjB,IAAM+V,EAAY0H,GAAQ3T,MACtB,SAACuG,GAAD,OAAsBA,EAAIxT,OAASmD,KAInC+V,GACA,EAAKjJ,SAAS,CAAEiJ,eA7EE,EAiF1BxG,SAAW,SAACnS,GACRA,EAAMkd,iBADY,IDvJO4G,ECuJP,EAEmC,EAAK3c,MAAlDqR,EAFU,EAEVA,IAAK9M,EAFK,EAELA,OAAQ+M,EAFH,EAEGA,OAAQ/Q,EAFX,EAEWA,SAAUiR,EAFrB,EAEqBA,UAElCjN,GACA8M,EAAI/Y,MACJgZ,EAAOhZ,MACPiI,GACAiR,EAAUlZ,OAIf,EAAK8O,MAAM4D,SAASqG,EAAIvR,GAAIwR,EAAOxR,GAAIS,EAAUiR,EAAU1R,IDnKlC6c,ECqKR,CAAEtL,MAAK9M,SAAQ+M,SAAQ/Q,YDpK5Csd,aAAaC,QAAQ,eAAgB5c,KAAK0B,UAAU+Z,MCwEhD,EAAK3c,MAAQ,CACTuE,QAAQ,EACR8M,IAAK,CACDvR,GAAI,GACJxH,KAAM,IAEVgZ,OAAQ,CACJxR,GAAI,GACJxH,KAAM,IAEViI,SAAU,GACViR,UAAW,CACP1R,GAAI,GACJxH,KAAM,KAhBQ,E,gEAsBtB,GDzGSulB,aAAaE,QAAQ,gBCyGD,CACzB,IAAM7Z,ED3Hc,WAC5B,IAAM8Z,EAAaH,aAAaE,QAAQ,gBAExC,IAAKC,EACD,OAAOvB,GAGX,IAAMwB,EAAqB/c,KAAKC,MAAM6c,GAEtC,OAAOtB,GAAmBuB,GCkHeC,GACzB3d,EAAkC2D,EAAlC3D,SAAU8Q,EAAwBnN,EAAxBmN,IAAKC,EAAmBpN,EAAnBoN,OAAQ/M,EAAWL,EAAXK,OAE/BrL,KAAKqP,SAAS,CACVhI,WACA8Q,MACAC,SACA/M,c,+BAqER,GAAI/P,IAAwB,CAAC,IAAD,EAC6B0E,KAAK8G,MAAlDqR,EADgB,EAChBA,IAAK9M,EADW,EACXA,OAAQ+M,EADG,EACHA,OAAQ/Q,EADL,EACKA,SAAUiR,EADf,EACeA,UAGvC,OACI,gBAACwL,GAAD,CAAsBhS,SAAU9R,KAAK8R,UACjC,gBAACkS,GAAD,CACIlP,MAAO,cACPuN,SAAUriB,KAAKukB,iBACfhiB,MAAO8E,IAEX,gBAAC,GAAD,CACI8a,QAAStC,GAAK7iB,KAAI,SAACmb,GAAD,OAAsBA,EAAI/Y,QAC5C0V,MAAO,QACPmN,SAAUjiB,KAAKwkB,YACfpC,SAAUjK,EAAI/Y,OAElB,gBAAC,GAAD,CACI+iB,QAASrC,GAAQ9iB,KACb,SAACob,GAAD,OAAyBA,EAAOhZ,QAEpC0V,MAAO,MACPmN,SAAUjiB,KAAKykB,eACfrC,SAAUhK,EAAOhZ,OAErB,gBAAC,GAAD,CACI+iB,QAASnC,GAAQhjB,KACb,SAACsb,GAAD,OAA4BA,EAAUlZ,QAE1C0V,MAAO,cACPmN,SAAUjiB,KAAK0kB,kBACftC,SAAU9J,EAAUlZ,OAExB,gBAAC,GAAD,CAAa6S,MAAO,yCAChB,mOAIQ,gBAAC,GAAD,CAAY7W,KApClB,cAoCM,eAA+C,IAJvD,KAKO,IACH,gBAAC,GAAD,CAAYA,KArCN,iBAqCN,mCAEc,IARlB,kBAYJ,gBAACgpB,GAAD,CAAgBpS,QAAShS,KAAKskB,aAC1B,gBAAC,GAAD,CACI3B,QAAStX,EACTgX,SAAUriB,KAAKskB,cAEnB,yEACmC,IAC/B,gBAAC,GAAD,CAAYlpB,KAnDd,cAmDE,eAFJ,MAEsD,IAClD,gBAAC,GAAD,CAAYA,KAnDN,iBAmDN,mCAEc,IALlB,kBASJ,gBAAC8oB,GAAD,CACIC,UACK9Y,IAAW8M,EAAI/Y,OAASgZ,EAAOhZ,OAASiI,GAG7C,0CAKZ,OAAO,gBAAC,GAAD,U,GA1K0ByH,a,kNC3G7C,IAAMmW,GAAiBvqB,IAAOC,IAAV,MAsBduqB,G,kDACF,WAAYhX,GAAe,IAAD,8BACtB,cAAMA,IAYViX,qBAAuB,SACnBhN,EACAC,EACA/Q,EACAiR,GAEA,EAAKjJ,SAAS,CAAEwI,aAAc,CAAEM,MAAKC,SAAQE,eAC7C,IACM1T,EAAyB,CAC3ByG,QAAQ,EACRzE,GAHOuG,cAIP9F,WACAiE,OAAO,GAEX,EAAK+D,SAAS,CAAEzK,gBA3BM,EA8B1BW,SA9B0B,uCA8Bf,WAAO2G,GAAP,eAAAjR,EAAA,6DACC4c,EAAiB,EAAK/Q,MAAtB+Q,aADD,kBAGGqF,GAAsBhR,EAAW2L,GAHpC,OAKiB,EAAK3J,MAAjB6O,QACAhd,KAAK,SANV,gDAQHU,QAAQ1B,MAAR,MARG,yDA9Be,wDA0C1BZ,gBA1C0B,uCA0CR,WAAO0B,GAAP,eAAA5E,EAAA,yDACN4c,EAAiB,EAAK/Q,MAAtB+Q,aACc,IAAtBhY,EAAM8Y,YAFQ,gCAGFuE,GAAgBrd,EAAOgY,GAHrB,6CAIFqF,GAAgBrd,GAJd,2CA1CQ,sDAGtB,EAAKiH,MAAQ,CACT+Q,kBAAc7U,EACdkJ,eAAWlJ,EACXoiB,WAAW,EACXC,UAAU,EACVC,aAAa,EACb1gB,gBAAY5B,GATM,E,qDAiDhB,IAAD,EACgChD,KAAK8G,MAAlC+Q,EADH,EACGA,aAAcjT,EADjB,EACiBA,WAChBtG,KAAauZ,IAAiBjT,GACpC,OACI,gBAAC,EAAD,KACI,gBAACqgB,GAAD,KACM3mB,EAGE,gBAAC,GAAD,CACIiH,SAAUvF,KAAKuF,SACfX,WAAYA,EACZzG,gBAAiB6B,KAAK7B,kBAL1B,gBAAC,GAAD,CAAiB2T,SAAU9R,KAAKmlB,6B,GAzDpCrW,aAuEL8Q,eAAWsF,I,mjBCnG1B,IAAMK,GAAkB7qB,IAAOC,IAAV,MAQfmW,GAASpW,IAAO4V,OAAV,MAqBNkV,G,kDACF,WAAYtX,GAAe,IAAD,8BACtB,cAAMA,IAKVuX,YAAc,WACU,EAAKvX,MAAjB6O,QACAhd,KAAK,MALb,EAAK+G,MAAQ,GAHS,E,qDAYtB,OACI,gBAAC,EAAD,KACI,gBAACye,GAAD,KACI,8DACA,gBAAC,GAAD,CAAQvT,QAAShS,KAAKylB,aAAtB,kC,GAjBC3W,aAwBN8Q,eAAW4F,I,+uDCjD1B,IAAME,GAAqBhrB,IAAOC,IAAV,MAQlBupB,GAAexpB,IAAO4V,OAAV,MAuBZqV,GAAgBjrB,IAAOqpB,KAAV,MAOb6B,GAAWlrB,YAAO+Z,GAAP/Z,CAAH,MAERmrB,GAAwBnrB,IAAOC,IAAV,MAqBrBmrB,GAAgBprB,IAAOC,IAAV,MAMborB,GAAOrrB,IAAOC,IAAV,MAWJqrB,GAAuBtrB,IAAOC,IAAV,MAQpBsrB,G,kDACF,WAAY/X,GAAe,IAAD,8BACtB,cAAMA,IAQVgY,YAAc,SAACte,GACX,IAAMue,EAAUve,EAAEsa,cAAc3f,MAChC,EAAK8M,SAAS,CAAE8W,aAXM,EAc1BC,WAAa,SAACzmB,GACVA,EAAMkd,iBADc,IAEZE,EAAY,EAAK7O,MAAjB6O,QACAoJ,EAAY,EAAKrf,MAAjBqf,QACRpJ,EAAQhd,KAAR,WAAiBomB,KAdjB,EAAKrf,MAAQ,CACTqf,UAAW,IAAIE,MAAQxpB,SAAS,KALd,E,qDAsBtB,OAAIvB,IAEI,gBAAC,EAAD,KACI,gBAACoqB,GAAD,KACI,gBAACG,GAAD,KACI,gBAACC,GAAD,KACI,gBAACC,GAAD,OAEJ,gBAACJ,GAAD,CAAe7T,SAAU9R,KAAKomB,YAC1B,gBAACR,GAAD,CACI9Q,MAAO,cACPvS,MAAOvC,KAAK8G,MAAMqf,QAClBG,YAAa,mBACbjE,SAAUriB,KAAKkmB,cAEnB,gBAAC,GAAD,eAGR,gBAACF,GAAD,KACI,wDACA,0ZAOa,IACT,gBAAC,GAAD,CAAY5qB,KAAM,0BAAlB,cAEc,IAVlB,0SAiBA,uDACA,64BAiBA,2DACA,6vBAcA,gBAAC,GAAD,CAAYA,KAAK,gEAAjB,iBASZ,gBAAC,EAAD,KACI,gBAAC,GAAD,W,GAvGI0T,aA8GT8Q,eAAWqG,I,khBCzM1B,IAAMM,GAAuB7rB,IAAOC,IAAV,MAQpB6rB,GAAkB9rB,IAAOC,IAAV,MAQf8rB,GAAiB/rB,IAAOC,IAAV,MACP,qBAAG+rB,YAqBKC,G,kDACjB,WAAYzY,GAAe,IAAD,8BACtB,cAAMA,IAGV0Y,sBAAwB,WACpB,IADuC,EACjCC,EAAiB,GADgB,cAEf,EAAK3Y,MAAM4Y,cAFI,IAEvC,2BAAiD,CAAC,IAAvCxO,EAAsC,QAC7CuO,EAAE9mB,KAAK,CACHX,KAAMkZ,EAAUlZ,KAChBwH,GAAI0R,EAAU1R,GACdmgB,UAAW,KANoB,8BASvC,OAAOF,GAbe,EAgB1BG,qBAAuB,WACnB,IADsC,EAChCC,EAAc,EAAK/Y,MAAMqJ,QACzB2P,EAAc,EAAKN,wBAFa,cAGhB,EAAK1Y,MAAMiZ,UAHK,IAGtC,2BAA2C,CAAC,IAAD,EAAhCC,EAAgC,QAC/BC,EAAuBD,EAAvBC,SAAUC,EAAaF,EAAbE,SADqB,cAGrBJ,GAHqB,IAGvC,2BAA+B,CAAC,IAArBxX,EAAoB,QAC3B,GACI2X,GACA3X,EAAI9I,KAAOygB,EAAS/O,WACpB+O,EAASjO,mBACR6N,GAAqBK,GAAYA,EAASlO,kBAC7C,CACE1J,EAAIqX,WAAaM,EAASjO,iBAC1B,MACG,GACHkO,GACA5X,EAAI9I,KAAO0gB,EAAShP,WACpB2O,EACF,CACEvX,EAAIqX,WAAaO,EAASlO,iBAC1B,QAlB+B,gCAHL,8BA2BtC,IAAMmO,EAAoBL,EAAYM,MAAK,SAACvsB,EAAGwsB,GAC3C,OAAIxsB,EAAE8rB,UAAYU,EAAEV,WACR,EAER9rB,EAAE8rB,UAAYU,EAAEV,UACT,EAEJ,KAIX,OADAtmB,QAAQkC,IAAI4kB,GACLA,GAtDe,E,qDA0DtB,IAAML,EAAclnB,KAAKgnB,uBACzB,OACI,gBAACT,GAAD,KACKW,EAAYlqB,KAAI,SAAC0S,GACd,IAAMgY,EACe,IAAhBhY,EAAIqX,UAAmBG,EAAY,GAAGH,UAC3C,OACI,gBAACP,GAAD,CAAiBrH,IAAKzP,EAAI9I,IAA1B,UACQ8I,EAAItQ,MACR,gBAACqnB,GAAD,CAAgBC,SAAUgB,GACrBA,EAAU,IACP5qB,EACIf,EAAa2T,EAAIqX,sB,GAvEtBjY,a,6xCC9BnC,IAAM6Y,GAAmBjtB,IAAOC,IAAV,MAMhB+lB,GAAiBhmB,IAAOC,IAAV,MAUditB,GAAWltB,IAAO8Z,KAAV,MAIRqT,GAAgBntB,IAAO8Z,KAAV,MAKbsT,GAAUptB,IAAOC,IAAV,MAMPotB,GAAkBrtB,IAAOC,IAAV,MAMfmW,GAASpW,IAAO4V,OAAV,MAuHG0X,GA/FwC,SAAC,GAIjD,IAHHZ,EAGE,EAHFA,QAGE,IAFFA,QAAWC,EAET,EAFSA,SAAUC,EAEnB,EAFmBA,SACrBL,EACE,EADFA,YAQMgB,EAAS,SAAC1lB,GACZ,IAAM4V,EAAM0H,GAAKxT,MAAK,SAACuG,GAAD,OAASA,EAAIhM,KAAOrE,KAC1C,OAAO4V,EAAMA,EAAI/Y,KAAOmD,GAGtB2lB,EAAY,SAAC3lB,GACf,IAAM6V,EAAS0H,GAAQzT,MAAK,SAACuG,GAAD,OAASA,EAAIhM,KAAOrE,KAChD,OAAO6V,EAASA,EAAOhZ,KAAOmD,GAQ5B4lB,EAASd,EACTvqB,EAAqBf,EAAasrB,EAASjO,mBAC3C,YACAgP,EAASd,EACTxqB,EAAqBf,EAAaurB,EAASlO,mBAC3C,YAKAiP,EAAe,WACjB,IACM/P,EADa,uBAAOyH,IAAP,aAAsBE,IAAtB,aAAmCD,KACtB3T,MAC5B,SAACuG,GAAD,OACIA,EAAIhM,MAAJ,OAAWygB,QAAX,IAAWA,OAAX,EAAWA,EAAU/O,YAAa1F,EAAIhM,MAAJ,OAAW0gB,QAAX,IAAWA,OAAX,EAAWA,EAAUhP,cAE/D,OAAOA,EAAYA,EAAUlZ,KAAO,IAGxC,OACI6nB,IACS,OAARI,QAAQ,IAARA,OAAA,EAAAA,EAAUjO,oBAAV,OAA8BkO,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAUlO,kBAGrC,gBAACuO,GAAD,KACI,gBAAC,GAAD,KAAiBP,EAAQ/O,YACzB,gBAACyP,GAAD,KACKT,GACG,gBAACU,GAAD,KACI,gBAACH,GAAD,KAlDH,sBAmDG,4BAAOM,EAAUb,EAASjP,SAC1B,4BACK6P,EAAOZ,EAASlP,KADrB,IAlDP,UAqDO,4BACKkP,EAAShO,YADd,IApDM,MAuDN,4BAAO8O,IAGdb,GACG,gBAACS,GAAD,KACI,gBAACH,GAAD,KA9DH,sBA+DG,4BAAOM,EAAUZ,EAASlP,SAC1B,4BACK6P,EAAOX,EAASnP,KADrB,IA/DP,UAkEO,4BACKmP,EAASjO,YADd,IAjEM,MAoEN,4BAAO+O,IAGdC,KACG,gBAACN,GAAD,KACI,gBAACF,GAAD,KAxEN,gBAwEM,IACiBQ,OAK7B,gBAAC,GAAD,CAAQrW,QAlEA,WAChB,IAAMpL,EAAKwgB,EAAQ/O,WACnB6E,GAAoBtW,GAAIwK,OAAM,SAACrS,GAAD,OAAW0B,QAAQ1B,MAAMA,QAgE/C,aAID,kC,kNC9Jf,IAAMjE,GAAQJ,IAAOC,IAAV,MAKL2tB,GAAQ5tB,IAAOC,IAAV,MAIE4tB,GAAuC,SAACra,GACjD,OACI,2BACI,gBAAC,GAAD,KAAQA,EAAM9O,MACd,gBAACkpB,GAAD,KAAQpa,EAAM3L,S,mGCV1B,IAAMimB,GAAiB9tB,IAAOC,IAAV,MAIP8tB,GAAwC,SAACva,GAClD,IAD4D,EACxDwa,EAAqB,EACrBC,EAAyB,EACzBC,EAAY,EAERzB,EAAsBjZ,EAAtBiZ,SAAU5P,EAAYrJ,EAAZqJ,QAL0C,cAOtC4P,GAPsC,IAO5D,2BAAgC,CAAC,IAAtBC,EAAqB,QACpBC,EAAuBD,EAAvBC,SAAUC,EAAaF,EAAbE,SAEd/P,EACI8P,GAAYC,GAEZD,EAASjO,iBAAmBkO,EAASlO,iBAC9BwP,GAAavB,EAASjO,iBACtBwP,GAAatB,EAASlO,iBAG7BiO,EAASjO,kBAAoBkO,EAASlO,iBAChCsP,IACAC,MAGCC,GADPvB,EACoBA,EAASjO,iBACTkO,EAASlO,iBAC7BuP,KAMAtB,GACAC,GACAD,EAASjO,kBACTkO,EAASlO,mBAGTiO,EAASjO,iBAAmBkO,EAASlO,iBAC9BwP,GAAavB,EAASjO,iBACtBwP,GAAatB,EAASlO,iBAE7BsP,MAzCgD,8BA8C5D,OACI,gBAACF,GAAD,KACI,gBAAC,GAAD,CAAMppB,KAAM,sBAAoBmD,MAAOmmB,IACtCnR,GACG,gBAAC,GAAD,CACInY,KAAM,0BACNmD,MAAOomB,IAGf,gBAAC,GAAD,CACIvpB,KAAM,uBACNmD,MAAOzF,EAAqBf,EAAa6sB,Q,0dC1DzD,IAAMC,GAAqBnuB,IAAOC,IAAV,MAQlBmuB,GAAkBpuB,IAAOoa,MAAV,MAMfiU,GAAoBruB,IAAOC,IAAV,MAajBquB,G,kDACF,WAAY9a,GAAe,IAAD,8BACtB,cAAMA,IAWVc,kBAZ0B,sBAYN,gCAAA/T,EAAA,6DAEVguB,EAAa,IAAIC,gBAAgB3tB,OAAO8b,SAAS8R,QAAQC,IAC3D,WAEEnC,EACa,OAAfgC,GAAsC,SAAfA,EANX,SASO/L,GAAgB,EAAKpW,MAAMmgB,aATlC,OASVE,EATU,OAUhB,EAAKkC,0BAA0BpC,GAC/B,EAAK5X,SAAS,CAAE8X,aAXA,2CAZM,EA6B1BkC,0BAA4B,SAACpC,GACzB,IAAMqC,EACF,KACA/tB,OAAO8b,SAASgH,KAChB9iB,OAAO8b,SAASkC,SAChB,YACA0N,EACJ,EAAK5X,SAAS,CAAE4X,gBAChB1rB,OAAOwhB,QAAQE,UAAU,KAAM,iBAAkBqM,IAlCjD,EAAKxiB,MAAQ,CACTqgB,SAAU,GACVF,aAAa,GAEjB,EAAKoC,0BAA4B,EAAKA,0BAA0BE,KAA/B,gBAPX,E,qDAwChB,IAAD,EAC6BvpB,KAAK8G,MAA/BqgB,EADH,EACGA,SAAUF,EADb,EACaA,YAClB,OACI,gBAAC,EAAD,KACI,gBAAC4B,GAAD,KACI,gBAACC,GAAD,KACI,wDACA,gBAAC,KAAD,CACIzG,SAAUriB,KAAKqpB,0BACf1G,QAASsE,KAGjB,gBAAC,GAAD,CAAOE,SAAUA,EAAU5P,QAAS0P,IACpC,gBAAC,GAAD,CACIE,SAAUA,EACVL,aAAc9G,GACdzI,QAAS0P,IAEb,gBAAC8B,GAAD,KACK5B,EAASnqB,KAAI,SAACoqB,EAA0BhjB,GACrC,OACI,gBAAC,GAAD,CACI+a,IAAK/a,EACLgjB,QAASA,EACTH,YAAaA,c,GAjEzBnY,aA4ET8Q,eAAWoJ,I,qLC/G1B,IAAMQ,GAAgB9uB,IAAOC,IAAV,MAsBb8uB,G,uKAEE,OAAO,qBAAGruB,KAAM4E,KAAKkO,MAAMwb,KAAKC,MAAO3pB,KAAKkO,MAAMwb,KAAKE,U,GAFtC9a,aAMnB+a,G,+KAEE,OAAO7pB,KAAKkO,MAAM0b,KAAK5sB,KAAI,SAAC8sB,GACxB,OAAIntB,MAAMiT,QAAQka,GACPA,EAAO9sB,KAAI,SAAC8sB,GAAD,OACd,gBAAC,GAAD,CAAY3K,IAAK2K,EAAOF,KAAMF,KAAMI,OAGjCA,O,+BAKf,OAAO,6BAAK9pB,KAAK+pB,sB,GAbSjb,aAiB5Bkb,G,gLAEE,OAAOhqB,KAAKkO,MAAM0b,KAAK5sB,KAAI,SAACitB,GACxB,OAAIttB,MAAMiT,QAAQqa,GACP,gBAAC,GAAD,CAAqBL,KAAMK,IAE3B,yBAAIA,Q,+BAKnB,OAAO,+BAAOjqB,KAAKkqB,uB,GAXFpb,aAenBqb,G,8KACcC,GACZ,OAAOA,EAASptB,KAAI,SAACqtB,GACjB,OACI,uBAAKlL,IAAKkL,EAAQC,SACd,8BAAMD,EAAQC,QAAd,KACA,gBAAC,GAAD,CAAYV,KAAMS,EAAQE,mB,wCAMvB,IAAD,OACd,OAAOvqB,KAAKkO,MAAMsc,SAASxtB,KAAI,SAAC4C,GAC5B,OACI,uBAAKuf,IAAKvf,EAAKqS,OACX,8BAAMrS,EAAKqS,MAAX,KACA,6BAAKrS,EAAK6qB,KAAV,KACA,gBAAC,GAAD,CAAYb,KAAMhqB,EAAK+L,cACtB,EAAK+e,gBAAgB9qB,EAAKwqB,gB,+BAOvC,OACI,gBAAC,EAAD,KACI,gBAACZ,GAAD,KAAgBxpB,KAAK2qB,wB,GA5Bd7b,aAkCR8Q,eAAWuK,I,qLC1F1B,IAAMS,GAA2BlwB,IAAOC,IAAV,MAcxBkwB,G,kDACF,WAAY3c,GAAe,IAAD,8BACtB,cAAMA,IAOVc,kBAR0B,sBAQN,4BAAA/T,EAAA,sEACOiiB,GAAgB,EAAKpW,MAAMyQ,SADlC,OACV4P,EADU,OAEhB,EAAK9X,SAAS,CAAE8X,aAFA,2CANhB,EAAKrgB,MAAQ,CACTqgB,SAAU,GACV5P,SAAS,GAJS,E,qDActB,OACI,gBAAC,EAAD,KACI,gBAACqT,GAAD,KACI,gBAAC,GAAD,CACIzD,SAAUnnB,KAAK8G,MAAMqgB,SACrBL,aAAc7G,GACd1I,QAASvX,KAAK8G,MAAMyQ,gB,GArBlBzI,aA6BX8Q,eAAWiL,ICrDbC,GAAQ,CACjB,CACI7Y,MACI,6FACJwY,KAAM,uDACN9e,YAAa,CACT,CACI,yBACA,CACI,CACIge,KAAM,6BACNC,KAAM,uBAGd,4ZAGRQ,SAAU,CACN,CACIE,QAAS,4CACTC,WAAY,CACR,CACI,gGACA,CACI,CACIZ,KAAM,8BACNC,KAAM,uBAGd,wXAEJ,CACI,sKACA,CACI,CACID,KACI,+CACJC,KAAM,0CAGd,KAEJ,iYACA,sIAGR,CACIU,QAAS,8BACTC,WAAY,CACR,CACI,mEACA,CACI,CACIZ,KACI,+CACJC,KAAM,0CAGd,mBAIZ,CACIU,QAAS,kBACTC,WAAY,CACR,CACI,oRACA,CACI,CACIZ,KAAM,0CACNC,KAAM,OAGd,4EAIZ,CACIU,QAAS,YACTC,WAAY,CACR,CACI,yJACA,CACI,CACIZ,KACI,+CACJC,KAAM,8CAM1B,CACIU,QAAS,yBACTC,WAAY,CACR,yNAGR,CACID,QAAS,WACTC,WAAY,CACR,uNCrGPQ,GAAa,CACtB,CACI9Y,MAAO,mEACPtG,YAAa,CACT,wZACA,6FACA,CACI,+BACA,CACI,CACIge,KAAM,8BACNC,KAAM,uBAGd,MAEJ,kFACA,iTAEJQ,SAAU,CACN,CACIE,QAAS,oCACTC,WAAY,CACR,8UAGR,CACID,QACI,sGACJC,WAAY,CACR,qcACA,yBACA,oFACA,yDACA,uDACA,0EACA,yLACA,CACI,kCACA,CACI,CACIZ,KAAM,8BACNC,KAAM,0BAGd,uVACA,CACI,CACID,KAAM,4CACNC,KAAM,4CAGd,OAIZ,CACIU,QAAS,yCACTC,WAAY,CACR,2XACA,wXACA,6XACA,wWACA,mfAGR,CACID,QAAS,iEACTC,WAAY,CACR,4KAGR,CACID,QAAS,iEACTC,WAAY,CAAC,0EAEjB,CACID,QACI,sGACJC,WAAY,CACR,yjBACA,8fAGR,CACID,QACI,oEACJC,WAAY,CACR,2mBAGR,CACID,QAAS,wBACTC,WAAY,CACR,qKACA,wNACA,wKACA,6GACA,4IACA,0HACA,0JACA,0NACA,sfACA,CACI,sNACA,CACI,CACIZ,KAAM,+BACNC,KAAM,wBAGd,OAIZ,CACIU,QAAS,yBACTC,WAAY,CACR,CACI,sLACA,CACI,CACIZ,KAAM,qBACNC,KACI,wDAGZ,KAEJ,CACI,oFACA,CAAC,CAAED,KAAM,eAAgBC,KAAM,aAC/B,KACA,CACI,CACID,KAAM,yBACNC,KAAM,mBAGd,OAIZ,CACIU,QACI,oEACJC,WAAY,CACR,qQAIZE,KAAM,yEC7GCO,GA9B6B,WACxC,OACI,gBAAC,IAAD,KACI,gBAAC,IAAD,KACI,gBAAC,IAAD,CAAOC,KAAK,SACR,gBAAC,GAAD,OAEJ,gBAAC,IAAD,CAAOA,KAAK,kBACR,gBAAC,GAAD,OAEJ,gBAAC,IAAD,CAAOA,KAAK,gBACR,gBAAC,GAAD,OAEJ,gBAAC,IAAD,CAAOA,KAAK,iBACR,gBAAC,GAAD,CAAUT,SAAUO,MAExB,gBAAC,IAAD,CAAOE,KAAK,cACR,gBAAC,GAAD,CAAUT,SAAUM,MAExB,gBAAC,IAAD,CAAOG,KAAK,YACR,gBAAC,GAAD,OAEJ,gBAAC,IAAD,CAAOA,KAAK,KACR,gBAAC,GAAD,UC9BpBC,IAASC,OACL,gBAAC,aAAD,KACI,gBAAC,GAAD,OAEJpqB,SAASqqB,eAAe,U","file":"static/js/main.c5343095.chunk.js","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\n\nconst LayoutContainer = styled.div`\n    width: 100vw;\n    height: 100vh;\n    //background-color: #f9f9f9;\n`;\n\nconst Padding = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 1rem;\n    padding: 1rem;\n`;\n\nconst Header = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nconst Title = styled.h1`\n    font-weight: 600;\n    & span {\n        font-weight: 800;\n    }\n`;\n\nconst StyledLink = styled.a`\n    text-decoration: none;\n    :visited {\n        color: black;\n    }\n`;\n\ninterface Props {\n    children?: React.ReactNode;\n}\n\nexport const Layout: React.FunctionComponent<Props> = ({ children }) => {\n    return (\n        <LayoutContainer>\n            <Padding>\n                <Header>\n                    <Title>\n                        <StyledLink href=\"/\">\n                            Samrómur <span>spjall</span>\n                        </StyledLink>\n                    </Title>\n                </Header>\n                {children}\n            </Padding>\n        </LayoutContainer>\n    );\n};\n\nexport default Layout;\n","export const audioFormat = 'audio/wav';\n\nexport interface AudioInfo {\n    blob?: Blob;\n    duration: number;\n    id?: string;\n    url: string;\n    sampleRate: number;\n    chunkCount: number;\n}\n\nexport interface AudioChunk {\n    blob: Blob;\n    chunkNumber: number;\n    id?: string;\n}\n\nexport interface BlobEvent extends Event {\n    data: Blob;\n}\n\nexport enum RecordingError {\n    TOO_SHORT = 'TOO_SHORT',\n    TOO_LONG = 'TOO_LONG',\n    TOO_QUIET = 'TOO_QUIET',\n}\n\nexport enum AudioError {\n    MIC_NOT_ALLOWED = 'MIC_NOT_ALLOWED',\n    NO_MIC = 'NO_MIC',\n    NO_MIC_SUPPORT = 'NO_MIC_SUPPORT',\n}\n","export default function() {\n  return new Worker(__webpack_public_path__ + \"static/js/worker.6689216d.worker.js\");\n}\n","// eslint-disable-next-line\nimport Worker from 'worker-loader!./worker';\n\nexport default Worker;\n","import React from 'react';\n\n/**\n * This method shuffles the input array randomly using the Fisher-Yates shuffle.\n * @param array the array to be shuffled\n */\nexport function shuffleArray(array: any[]) {\n    for (let i = array.length - 1; i >= 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1)); // random index\n        [array[j], array[i]] = [array[i], array[j]]; // reassing using destructuring\n    }\n}\n\n// Check if audio recording is supported\nexport function isAudioRecordingSupported() {\n    return typeof window.MediaRecorder !== 'undefined';\n}\n\n// Check all the browser prefixes for microphone support.\nexport function isMicrophoneSupported(): boolean {\n    return !!(\n        navigator.mediaDevices?.getUserMedia ||\n        navigator.getUserMedia ||\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia\n    );\n}\n\nexport function isRecordingSupported() {\n    // Use feature detection when possible.\n    // Check if microphone is supported\n    // Check if audio recording is supported\n    // TODO: check to see if mediaRecording polyfill is supported/usable if\n\n    // // Check if is chrome\n    // const isChrome = !!window.chrome;\n\n    // // Thank you https://stackoverflow.com/a/9851769\n    // // Edge (based on chromium) detection\n    // const isEdgeChromium =\n    //     isChrome && navigator.userAgent.indexOf('Edg') !== -1;\n    // return isChrome || isEdgeChromium || isAudioRecordingSupported;\n    return isAudioRecordingSupported() && isMicrophoneSupported();\n}\n\ninterface timestampDigits {\n    h1: string;\n    h2: string;\n    m1: string;\n    m2: string;\n    s1: string;\n    s2: string;\n}\n\n/**\n * Change seconds to a HH:mm:ss timestamp\n * @param seconds time in seconds\n */\nexport function splitSeconds(seconds: number): timestampDigits {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const remainingSeconds = Math.floor((seconds % 3600) % 60);\n    let h1: string, h2: string, m1: string, m2: string, s1: string, s2: string;\n    if (remainingSeconds > 9) {\n        [s1, s2] = Array.from(remainingSeconds.toString());\n    } else {\n        s1 = '0';\n        s2 = remainingSeconds.toString();\n    }\n    if (minutes > 9) {\n        [m1, m2] = Array.from(minutes.toString());\n    } else {\n        m1 = '0';\n        m2 = minutes.toString();\n    }\n    if (hours > 9) {\n        [h1, h2] = Array.from(hours.toString());\n    } else {\n        h1 = '0';\n        h2 = hours.toString();\n    }\n    return { h1, h2, m1, m2, s1, s2 };\n}\n\nexport function getTimestampString({\n    h1,\n    h2,\n    m1,\n    m2,\n    s1,\n    s2,\n}: timestampDigits): string {\n    if (h1 === '0' && h2 === '0') {\n        return m1 + m2 + ':' + s1 + s2;\n    } else {\n        return h1 + h2 + ':' + m1 + m2 + ':' + s1 + s2;\n    }\n}\n\nexport function getHumanReadableTime({\n    h1,\n    h2,\n    m1,\n    m2,\n    s1,\n    s2,\n}: timestampDigits): string {\n    const hrs = 'klst.';\n    const mins = 'mín.';\n    const secs = 'sek.';\n    // Remove leading zeros\n    const [displayh1, displaym1, displays1] = [h1, m1, s1].map((digit) =>\n        digit === '0' ? '' : digit\n    );\n    if (h1 === '0' && h2 === '0') {\n        return [displaym1 + m2, mins, displays1 + s2, secs].join(' ');\n    } else {\n        return [displayh1 + h2, hrs, displaym1 + m2, mins].join(' ');\n    }\n}\n\n/**\n * Credit to stackoverflow: https://stackoverflow.com/questions/32916786/react-children-map-recursively\n * Reursivly goes over the input React.ReactNode and executes the\n * input function of all of the children, grandchildren and so forth\n * @param children\n * @param fn the function to execute on all decendants\n * @returns a modified ReactNode according to the fn\n */\nexport const recursiveMap = (\n    children: React.ReactNode,\n    fn: any\n): React.ReactNode => {\n    return React.Children.map(children, (child) => {\n        if (!React.isValidElement(child)) {\n            return child;\n        }\n\n        if (child.props.children) {\n            child = React.cloneElement(child, {\n                children: recursiveMap(child.props.children, fn),\n            });\n        }\n\n        return fn(child);\n    });\n};\n","import { v4 as uuid } from 'uuid';\n\nimport Recorder from './recorder';\nimport { AudioChunk, AudioInfo } from '../types/audio';\nimport { UserClient } from '../types/user';\nimport { MicError, RTCError } from '../types/errors';\n\nexport enum ChatState {\n    CONNECTED = 'CONNECTED',\n    DISCONNECTED = 'DISCONNECTED',\n}\n\nexport enum VoiceState {\n    VOICE_CONNECTED = 'VOICE_CONNECTED',\n    VOICE_DISCONNECTED = 'VOICE_DISCONNECTED',\n}\n\nexport enum CallState {\n    HUNG_UP = 'HUNG_UP',\n    IDLE = 'IDLE',\n    INCOMING_CALL = 'INCOMING_CALL',\n    IS_CALLING = 'IS_CALLING',\n}\n\nexport enum RecordingState {\n    NOT_RECORDING = 'NOT_RECORDING',\n    RECORDING = 'RECORDING',\n    RECORDING_REQUESTED = 'RECORDING_REQUESTED',\n}\n\ntype Payload = {\n    [key: string]: any;\n};\n\nexport default class Chat {\n    private incomingOffer!: RTCSessionDescriptionInit;\n    private microphone!: MediaStream;\n\n    onRecordingAgreement!: (clientId: string, value: boolean) => void;\n    onAnswered!: () => void;\n    onAudioTrack!: (stream: MediaStream) => void;\n\n    onClientsChanged!: (clients: UserClient[]) => void;\n    onIsOwnerChanged!: (isOwner: boolean) => void;\n    onRecordingStopped!: (recording: AudioInfo) => void;\n    onRecordingStateChanged!: (state: RecordingState) => void;\n    onChunkReceived!: (chunk: AudioChunk) => void;\n    onChatStateChanged!: (state: ChatState) => void;\n    onVoiceStateChanged!: (state: VoiceState) => void;\n    onUpload!: () => void;\n    onError!: (message: any) => void;\n\n    private recorder: Recorder;\n    private rtcConnection!: RTCPeerConnection | null;\n    private rtcConfiguration: RTCConfiguration;\n    private socket!: WebSocket;\n    private socketUrl: string;\n    private userClient: UserClient;\n    private callState: CallState;\n    private chatState: ChatState;\n    private recordingState: RecordingState;\n    private voiceState: VoiceState;\n    private clients: UserClient[];\n    private sessionId: string;\n    private reconnecting: boolean;\n    private timeout: number;\n    private timeoutIncrement: number;\n    private unsentMessages: Payload[];\n    private isChatroomOwner: boolean;\n    private isDisconnecting: boolean;\n    private joinedMidRecording: boolean;\n\n    constructor(socketUrl: string, userClient: UserClient) {\n        this.recorder = new Recorder({\n            sampleRate: 16000,\n            chunkInterval: 30,\n        });\n        this.recorder.onChunkReceived = this.handleChunkReceived;\n        this.socketUrl = socketUrl;\n        this.userClient = userClient;\n        this.callState = CallState.IDLE;\n        this.chatState = ChatState.DISCONNECTED;\n        this.recordingState = RecordingState.NOT_RECORDING;\n        this.voiceState = VoiceState.VOICE_DISCONNECTED;\n        this.sessionId = '';\n        this.reconnecting = false;\n        this.timeoutIncrement = 500;\n        this.timeout = this.timeoutIncrement;\n        this.unsentMessages = [];\n        this.isChatroomOwner = false;\n        this.isDisconnecting = false;\n        this.joinedMidRecording = false;\n\n        this.clients = [userClient];\n\n        // Note these are public google STUN servers\n        this.rtcConfiguration = {\n            iceServers: [\n                {\n                    urls: ['stun:stun4.l.google.com:19302'],\n                },\n            ],\n        };\n        console.log('initiate chat');\n        this.init();\n    }\n\n    private handleChunkReceived = (chunk: AudioChunk): void => {\n        if (this.onChunkReceived !== undefined) {\n            // Inject session id to chunk\n            const audioChunk = { ...chunk };\n            audioChunk.id = this.sessionId;\n            this.onChunkReceived(audioChunk);\n        }\n    };\n\n    private setCallState = (state: CallState) => (this.callState = state);\n\n    private setChatState = (state: ChatState) => {\n        this.chatState = state;\n        this.onChatStateChanged(state);\n    };\n\n    private setRecordingState = (state: RecordingState) => {\n        this.recordingState = state;\n        this.onRecordingStateChanged(state);\n    };\n\n    private setVoiceState = (state: VoiceState) => {\n        this.voiceState = state;\n        this.onVoiceStateChanged(state);\n    };\n\n    /**\n     * Get the mic state\n     */\n    private getVoiceState = (): VoiceState => {\n        return this.voiceState;\n    };\n\n    /**\n     * Starts and connects to all the necessary underlying technology in a\n     * chatroom:\n     *\n     * * microphone - connect mic to chatroom to record and obtain audio\n     * * websockets - connect to the chatroom server\n     * * rtc connections - connect directly to the other user\n     * * pingpong - ping pong ws server to keep the connection alive\n     * * unMute - activate mic\n     * * setUsername\n     * * setChatState\n     *\n     * TODO: When anything in init fails, the user should be given a toast\n     * message of what component is not working in order to establish a working\n     * chatroom, such as an ice connection could not be established or the\n     * microphone is not accessible.\n     **/\n    private init = async () => {\n        try {\n            this.socket = await this.openSocket(this.socketUrl);\n            this.setUsername(this.userClient.username);\n            console.log('initiating connection to microphone');\n            this.microphone = await this.recorder.init();\n            console.log('connection to microphone established');\n\n            // Open RTC Connection\n            this.rtcConnection = await this.openRTC();\n\n            // Start with voice transmitted\n            await this.unMute();\n\n            // start websocket ping pong to keep the connection alive\n            this.startPingPong();\n            this.setChatState(ChatState.CONNECTED);\n\n            // If we are joining a conversation during recording time restart recording\n            if (this.joinedMidRecording) {\n                this.startRecording();\n            }\n        } catch (error) {\n            console.error('Error initializing chat, ', error);\n        }\n    };\n\n    private openSocket = (url: string): Promise<WebSocket> => {\n        return new Promise((resolve, reject) => {\n            const socket = new WebSocket(url);\n            socket.onopen = () => {\n                resolve(socket);\n            };\n            socket.onerror = (e) => {\n                console.error('WebSocket error.');\n                reject(e);\n            };\n            socket.onclose = () => {\n                this.setChatState(ChatState.DISCONNECTED);\n                // Try to reconnect if closed\n                if (!this.reconnecting && !this.isDisconnecting) {\n                    this.reconnect();\n                }\n            };\n            socket.onmessage = (event) => {\n                try {\n                    const message = JSON.parse(event.data);\n                    this.onMessage(message);\n                } catch (e) {\n                    console.error('Error parsing json: ', e);\n                }\n            };\n        });\n    };\n\n    /**\n     * Establish an rtcpeerconnection, but only finish if there is a microphone.\n     *\n     * In a normal chatroom, it would be ok to have a peer to peer connection\n     * where only one person has a working mic. But since our primary goal is\n     * data collection, we'll disable establishing a connection between\n     * users with non-functioning mics and just set the chatroom to idle.\n     */\n    private openRTC = async (): Promise<RTCPeerConnection> => {\n        try {\n            const connection = new RTCPeerConnection(this.rtcConfiguration);\n            // When a remote user adds stream to the peer connection, we display it\n            connection.ontrack = (event: RTCTrackEvent) => {\n                const remoteAudio = event.streams[0];\n                this.onAudioTrack(remoteAudio);\n            };\n\n            // Setup ice handling\n            connection.onicecandidate = (event: RTCPeerConnectionIceEvent) => {\n                if (event.candidate) {\n                    this.sendMessage({\n                        type: 'candidate',\n                        candidate: event.candidate,\n                    });\n                }\n            };\n\n            // Setup stream listening\n            if (!this.microphone) {\n                return Promise.reject('No microphone found.');\n            }\n            this.microphone.getTracks().forEach((track: MediaStreamTrack) => {\n                connection.addTrack(track, this.microphone);\n            });\n            return Promise.resolve(connection);\n        } catch (error) {\n            return Promise.reject(error);\n        }\n    };\n\n    /**\n     * Sends ping to the server which should respond with pong\n     * This ping ponging keeps the websocket connection open between server and client.\n     */\n    private startPingPong() {\n        const payload = { type: 'ping', message: '' };\n        if (this.isWebSocketOpen()) {\n            this.sendMessage(payload);\n        }\n    }\n\n    /**\n     * Handles the pong return from the server, restarts the ping\n     * after a delay of 30 seconds.\n     */\n    private handlePong() {\n        setTimeout(() => this.startPingPong(), 30 * 1000);\n    }\n\n    /**\n     * Checks if the websocket is open and ready for messaging\n     */\n    private isWebSocketOpen = () => {\n        if (this.socket) {\n            return this.socket.readyState === this.socket.OPEN;\n        }\n        return false;\n    };\n\n    /**\n     * Sends all the messages that the client tried to send while not connected to the server.\n     */\n    private sendUnsentMessages = () => {\n        let delay = 250;\n        this.unsentMessages.forEach((message: Payload) => {\n            setTimeout(() => this.sendMessage(message), delay);\n            console.log(\n                `Sending unsent message after: ${delay} milliseconds.`,\n                message\n            );\n            delay += 250;\n        });\n        this.unsentMessages = [];\n    };\n\n    /**\n     * Reconnect will start a process to reconnect.\n     * The reconnecting flag is set.\n     * If the prior attempt was unsuccessful, the process will attempt to\n     * reconnect to the WebSocket server after the given timeout(milliseconds).\n     * If successful, call {@link setUsername} and {@link sendUnsentMessages}\n     * the corresponding mic method ({@link unMute} {@link mute}).\n     * If there is no rtcConnection then open one with {@link openRTC}.\n     * @return {Promise} returns a Promise about successful reconnection.\n     */\n    private reconnect = async () => {\n        // If not reconnecting, set to reconnecting and reset timeout\n        if (!this.reconnecting) {\n            this.reconnecting = true;\n            this.timeout = this.timeoutIncrement;\n        }\n        console.warn(\n            'Connection with WebSocket is lost. Attempting to reconnect...'\n        );\n        try {\n            this.socket = await this.openSocket(this.socketUrl);\n        } catch (error) {\n            console.error('Error reconnecting to the server.', error);\n        }\n        this.reconnecting = !this.isWebSocketOpen();\n        if (this.reconnecting) {\n            this.timeout = Math.min(\n                10000,\n                this.timeout + this.timeoutIncrement\n            );\n            setTimeout(async () => {\n                await this.reconnect();\n            }, this.timeout);\n        }\n        // Successfully reconnected\n        // Send all the stored messages and client name\n        if (!this.reconnecting) {\n            this.setUsername(this.userClient.username);\n            this.sendUnsentMessages();\n            // Make sure the browser's mic state matches the server's mic state\n            this.getVoiceState() === VoiceState.VOICE_CONNECTED\n                ? this.unMute()\n                : this.mute();\n            if (this.microphone && !this.rtcConnection) {\n                this.rtcConnection = null;\n                this.rtcConnection = await this.openRTC();\n            }\n            console.info('Successfully reconnected to the server.');\n            return Promise.resolve('Successfully reconnected to the server.');\n        }\n    };\n\n    /**\n     * Sends a message over the WebSocket connection.\n     * If the connection is closed, the function starts a the reconnect process\n     * and stores any unsent messages in the unsentMessages array.\n     * @param payload the message to send\n     */\n    private sendMessage = (payload: { [key: string]: any }): Promise<void> => {\n        try {\n            if (this.isWebSocketOpen()) {\n                this.socket.send(JSON.stringify(payload));\n                return Promise.resolve();\n            }\n            if (!this.reconnecting && !this.isDisconnecting) {\n                // Lost websocket connection, attempt to reconnect.\n                this.reconnect();\n            }\n            // store the message as unsent\n            this.unsentMessages.push(payload);\n            return Promise.reject(\n                'Unable to send message over the WebSocket connection.'\n            );\n        } catch (error) {\n            console.error('Error sending message, ', error);\n            return Promise.reject(error);\n        }\n    };\n\n    private onMessage = (message: any) => {\n        switch (message.type) {\n            case 'client_connected':\n                this.handleNewClient(message);\n                break;\n            case 'client_disconnected':\n                this.handleClientDisconnected(message.id);\n                break;\n            case 'client_changed':\n                this.handleClientChanged(message);\n                break;\n            case 'call':\n                this.handleIncomingCall(message);\n                break;\n            case 'answer':\n                this.handleIncomingAnswer(message);\n                break;\n            case 'candidate':\n                this.handleIncomingCandidate(message);\n                break;\n            case 'set_session_id':\n                this.handleSessionId(message.id);\n                break;\n            case 'start_recording':\n                this.handleStartRecording();\n                break;\n            case 'stop_recording':\n                this.handleStopRecording();\n                break;\n            case 'cancel_recording':\n                this.handleCancelRecording();\n                break;\n            case 'hang_up':\n                this.handleHangUp();\n                break;\n            case 'error':\n                this.handleError(message);\n                break;\n            case 'chatroom_owner':\n                this.handleIsChatRoomOwner();\n                break;\n            case 'upload':\n                this.handleUpload();\n                break;\n            case 'pong':\n                this.handlePong();\n                break;\n            case 'start-mid-recording':\n                this.handleStartMidRecording(message.sessionId);\n                break;\n            default:\n                console.error('Misunderstood, ', message);\n        }\n    };\n\n    private handleError = (message: any) => {\n        console.error('Error: ', message.message);\n        if (message.message === 'login_failed') {\n            this.onError(message.message);\n        }\n    };\n\n    private handleSessionId = (id: string) => {\n        // _client_b is appended for the user receiving recording\n        this.sessionId = id + '_client_b';\n    };\n\n    private updateClient = async (\n        id: string,\n        update: { [type: string]: any }\n    ): Promise<UserClient[]> => {\n        // Wait for array update before updating the state\n        const newClients: UserClient[] = await Promise.all(\n            this.clients.map((client) =>\n                client.id === id\n                    ? Promise.resolve({ ...client, ...update })\n                    : Promise.resolve(client)\n            )\n        );\n\n        return Promise.resolve(newClients);\n    };\n\n    private handleNewClient = (message: any) => {\n        const user: UserClient = {\n            ...message,\n        };\n        // If the client is not in the clients list add it and trigger onClientsChanged.\n        if (!this.clients.some((client: UserClient) => client.id === user.id)) {\n            this.clients.push(user);\n            this.onClientsChanged(this.clients);\n\n            if (this.recordingState === RecordingState.RECORDING) {\n                this.sendMessage({\n                    type: 'start-mid-recording',\n                    sessionId: this.sessionId,\n                });\n            }\n        }\n    };\n\n    private handleClientDisconnected = (id: string) => {\n        const newClients = this.clients.filter(\n            (client: UserClient) => client.id !== id\n        );\n        this.clients = newClients;\n        this.onClientsChanged(this.clients);\n    };\n\n    private handleClientChanged = async (message: any) => {\n        const update: { [key: string]: any } = {};\n        switch (message.parameter) {\n            case 'set_username':\n                update.username = message.value;\n                break;\n            case 'set_agreed':\n                update.agreed = message.value;\n                break;\n            case 'set_voice':\n                update.voice = message.value;\n                break;\n        }\n        this.clients = await this.updateClient(message.id, update);\n        this.onClientsChanged(this.clients);\n    };\n\n    private setUsername = async (username: string): Promise<void> => {\n        return this.sendMessage({ type: 'set_username', value: username });\n    };\n\n    /**\n     * With the incoming rtc offer, initiate the answer procedure. But only if\n     * the user has a working microphone.\n     *\n     * In a normal chatroom, it would be ok to have a peer to peer connection\n     * where only one person has a working mic. But since our primary goal is\n     * data collection, we'll disable establishing a connection between\n     * users with non-functioning mics and just set the chatroom to idle.\n     */\n    private handleIncomingCall = async (message: any) => {\n        this.incomingOffer = message.offer;\n        this.setCallState(CallState.INCOMING_CALL);\n        // Only answer calls if users have a working microphone\n        if (this.microphone) {\n            await this.answer();\n        } else {\n            this.setCallState(CallState.IDLE);\n        }\n    };\n\n    private handleIncomingAnswer = async (message: any) => {\n        try {\n            const description = new RTCSessionDescription(message.answer);\n            if (!this.rtcConnection) {\n                this.rtcConnection = await this.openRTC();\n            }\n            await this.rtcConnection.setRemoteDescription(description);\n        } catch (error) {\n            // To-do error handling?\n            console.error('Error handling incoming answer, ', error);\n        }\n    };\n\n    private handleIncomingCandidate = async (message: any) => {\n        const candidate = new RTCIceCandidate(message.candidate);\n        try {\n            if (this.rtcConnection) {\n                this.rtcConnection.addIceCandidate(candidate);\n            }\n        } catch (error) {\n            console.error('Error handling ice candidate ', error);\n        }\n    };\n\n    private handleStartRecording = async () => {\n        try {\n            this.setRecordingState(RecordingState.RECORDING_REQUESTED);\n        } catch (error) {\n            // To-do error handling?\n            console.error('Error handling start recording, ', error);\n        }\n    };\n\n    private handleStopRecording = async () => {\n        try {\n            this.setRecordingState(RecordingState.NOT_RECORDING);\n            const recording = await this.recorder.stopRecording();\n\n            // Inject session id\n            recording.id = this.sessionId;\n            this.onRecordingStopped(recording);\n        } catch (error) {\n            // To-do error handling?\n            console.error('Error handling stop recording, ', error);\n        }\n    };\n\n    private handleCancelRecording = async () => {\n        this.setRecordingState(RecordingState.NOT_RECORDING);\n    };\n\n    private handleHangUp = async () => {\n        try {\n            if (this.microphone) {\n                this.rtcConnection?.close();\n                this.rtcConnection = null;\n                this.rtcConnection = await this.openRTC();\n                this.setCallState(CallState.HUNG_UP);\n            }\n        } catch (error) {\n            console.error('Error while hanging up, ', error);\n        }\n    };\n\n    public unMute = async () => {\n        if (!this.microphone) {\n            this.mute();\n            console.log('no mic available');\n            throw new MicError('no mic available');\n        } else if (!this.rtcConnection) {\n            this.mute();\n            console.log('Peer connection is unopened');\n            throw new RTCError('Peer connection is unopened');\n        } else {\n            this.setVoiceState(VoiceState.VOICE_CONNECTED);\n            this.recorder.unMute();\n            const unmuted = this.clients.find(\n                (client: UserClient) => client.voice === true\n            );\n            if (unmuted) {\n                this.call();\n            }\n            this.handleClientChanged({\n                id: this.userClient.id,\n                parameter: 'set_voice',\n                value: true,\n            });\n            this.sendMessage({\n                id: this.userClient.id,\n                type: 'set_voice',\n                value: true,\n            });\n        }\n    };\n\n    public mute = async () => {\n        this.setVoiceState(VoiceState.VOICE_DISCONNECTED);\n        if (this.microphone) {\n            this.recorder.mute();\n            this.hangUp();\n        }\n        this.handleClientChanged({\n            id: this.userClient.id,\n            parameter: 'set_voice',\n            value: false,\n        });\n        this.sendMessage({\n            id: this.userClient.id,\n            type: 'set_voice',\n            value: false,\n        });\n    };\n\n    private call = async (): Promise<void> => {\n        try {\n            if (!this.rtcConnection) {\n                this.rtcConnection = await this.openRTC();\n            }\n            const offer: RTCSessionDescriptionInit = await this.rtcConnection.createOffer();\n            await this.rtcConnection.setLocalDescription(offer);\n            await this.sendMessage({ type: 'call', offer });\n            this.setCallState(CallState.IS_CALLING);\n            return Promise.resolve();\n        } catch (error) {\n            console.error('Error calling, ', error);\n            return Promise.reject();\n        }\n    };\n\n    private answer = async (): Promise<void> => {\n        try {\n            // Check for an rtcConnection because after a reconnect there\n            // sometimes isn't a established rtcConnection so then a chain of\n            // errors pop up.\n            // So try establishing one.\n            if (!this.rtcConnection) {\n                this.rtcConnection = await this.openRTC();\n            }\n            // Handle incoming offer\n            const description = new RTCSessionDescription(this.incomingOffer);\n            this.rtcConnection.setRemoteDescription(description);\n\n            // Create an answer to offer\n            const answer = await this.rtcConnection.createAnswer();\n            this.rtcConnection.setLocalDescription(answer);\n\n            // Send answer\n            this.sendMessage({ type: 'answer', answer });\n            return Promise.resolve();\n        } catch (error) {\n            console.error('Error answering, ', error);\n            return Promise.reject(error);\n        }\n    };\n\n    private handleIsChatRoomOwner = () => {\n        this.isChatroomOwner = true;\n        this.onIsOwnerChanged(this.isChatroomOwner);\n    };\n\n    /**\n     * Updates the session id to the one of the other clients\n     * First updates the client identifier to be a or b depending on\n     * the other client.\n     * @param sessionIdOther the other clients id (includes client_a/b)\n     */\n    private handleStartMidRecording = async (sessionIdOther: string) => {\n        if (this.sessionId !== '') {\n            console.log('Overwriting existing session id.');\n        }\n        this.sessionId = sessionIdOther.includes('client_a')\n            ? sessionIdOther.replace('client_a', 'client_b')\n            : sessionIdOther.replace('client_b', 'client_a');\n        console.log(this.sessionId);\n        this.joinedMidRecording = true;\n    };\n\n    public isOwner = (): boolean => {\n        return this.isChatroomOwner;\n    };\n\n    public hangUp = async (): Promise<void> => {\n        this.rtcConnection?.close();\n        this.rtcConnection = null;\n        this.rtcConnection = await this.openRTC();\n        //this.setCallState(CallState.HUNG_UP);\n        return this.sendMessage({ type: 'hang_up' });\n    };\n\n    // Todo\n    public sendAgreement = async (value: boolean): Promise<void> => {\n        this.sendMessage({\n            id: this.userClient.id,\n            type: 'set_agreement',\n            value,\n        });\n    };\n\n    public startRecording = async (): Promise<void> => {\n        try {\n            await this.recorder.startRecording();\n            this.setRecordingState(RecordingState.RECORDING);\n\n            return Promise.resolve();\n        } catch (error) {\n            console.error('Error starting recording, ', error);\n            return Promise.reject(error);\n        }\n    };\n\n    public requestRecording = async (): Promise<void> => {\n        try {\n            await this.sendMessage({ type: 'start_recording' });\n            this.setRecordingState(RecordingState.RECORDING_REQUESTED);\n\n            // When recording is requested, session id is set\n            const sessionId = uuid();\n            this.sendMessage({ type: 'set_session_id', id: sessionId });\n\n            // _client_a is appended for the user initiating recording\n            this.sessionId = sessionId + '_client_a';\n\n            return Promise.resolve();\n        } catch (error) {\n            console.error('Error requesting recording, ', error);\n            return Promise.reject(error);\n        }\n    };\n\n    public stopRecording = async (): Promise<void> => {\n        try {\n            this.sendMessage({ type: 'stop_recording' });\n            const recording = await this.recorder.stopRecording();\n\n            // Inject session id\n            recording.id = this.sessionId;\n\n            this.onRecordingStopped(recording);\n            this.setRecordingState(RecordingState.NOT_RECORDING);\n            return Promise.resolve();\n        } catch (error) {\n            console.error('Error stopping recording, ', error);\n            return Promise.reject(error);\n        }\n    };\n\n    public cancelRecording = async (): Promise<void> => {\n        try {\n            this.sendMessage({ type: 'cancel_recording' });\n            this.setRecordingState(RecordingState.NOT_RECORDING);\n            return Promise.resolve();\n        } catch (error) {\n            console.error('Error cancelling recording, ', error);\n            return Promise.reject(error);\n        }\n    };\n\n    // Sends the request for other client to upload its recording\n    public uploadOther = async (): Promise<void> => {\n        await this.sendMessage({ type: 'upload' });\n    };\n\n    // Responsible for triggering the upload of this client\n    private handleUpload = () => {\n        this.onUpload();\n    };\n\n    public disconnect = async () => {\n        console.log('Disconnecting...');\n        this.isDisconnecting = true;\n        this.socket.close();\n        this.rtcConnection?.close();\n        this.rtcConnection = null;\n    };\n\n    public clearRecording = () => {\n        this.recorder.clearRecording();\n    };\n\n    public getMissingChunks = (missingChunks: number[]) => {\n        const chunks = this.recorder.getMissingChunks(missingChunks);\n        // insert session id\n        for (let i = 0; i < chunks.length; i++) {\n            chunks[i].id = this.sessionId;\n        }\n        return chunks;\n    };\n}\n","import { AudioInfo, AudioError, AudioChunk } from '../types/audio';\n\nimport WavEncoder from '../worker';\nimport { isRecordingSupported } from '../utilities/utils';\n\ninterface RecorderConfig {\n    sampleRate: number;\n    chunkInterval: number;\n}\n\nexport default class Recorder {\n    private microphone?: MediaStream;\n    private audioContext!: AudioContext;\n    private encoder: WavEncoder;\n\n    private sourceNode!: MediaStreamAudioSourceNode;\n    private processorNode!: ScriptProcessorNode;\n    private gainNode!: GainNode;\n    private sampleRate: number;\n\n    public onChunkReceived: ((audioChunk: AudioChunk) => void) | undefined;\n    private chunkInterval: number = 0;\n    private chunks: Array<AudioChunk> = [];\n\n    private isRecording: boolean = false;\n\n    constructor({ sampleRate, chunkInterval }: RecorderConfig) {\n        this.sampleRate = sampleRate;\n        this.encoder = new WavEncoder();\n        this.chunkInterval = chunkInterval;\n        this.chunks = [];\n    }\n\n    private isReady = (): boolean => !!this.microphone;\n\n    private getMicrophone = (): Promise<MediaStream> => {\n        return new Promise((resolve, reject) => {\n            const options = {\n                audio: true,\n                channelCount: 1,\n                sampleRate: this.sampleRate,\n            };\n\n            const deny = (error: MediaStreamError) =>\n                reject(\n                    ({\n                        NotAllowedError: AudioError.MIC_NOT_ALLOWED,\n                        NotFoundError: AudioError.NO_MIC,\n                    } as { [errorName: string]: AudioError })[error.name] ||\n                        error\n                );\n\n            if (navigator.mediaDevices?.getUserMedia) {\n                navigator.mediaDevices\n                    .getUserMedia(options)\n                    .then(resolve, deny);\n            } else if (navigator.getUserMedia) {\n                navigator.getUserMedia(options, resolve, deny);\n            } else if (navigator.webkitGetUserMedia) {\n                navigator.webkitGetUserMedia(options, resolve, deny);\n            } else if (navigator.mozGetUserMedia) {\n                navigator.mozGetUserMedia(options, resolve, deny);\n            } else {\n                reject(AudioError.NO_MIC_SUPPORT);\n            }\n        });\n    };\n\n    private start = (): Promise<void> => {\n        this.sourceNode.connect(this.gainNode);\n        this.gainNode.connect(this.processorNode);\n        this.processorNode.connect(this.audioContext.destination);\n        if (!this.isReady()) {\n            console.error('Cannot record audio before microphone is ready.');\n            return Promise.reject();\n        }\n\n        this.encoder.onmessage = async (event) => {\n            const {\n                data: { chunk, command },\n            } = event;\n\n            // On chunk available forward to listener\n            if (command === 'chunk-available') {\n                if (this.onChunkReceived) {\n                    this.onChunkReceived(chunk);\n                    this.chunks.push(chunk);\n                }\n            }\n        };\n\n        this.processorNode.onaudioprocess = (ev: AudioProcessingEvent) => {\n            const downsampled = this.downsampleBuffer(ev.inputBuffer, 16000);\n            this.encoder.postMessage({\n                command: 'encode',\n                buffer: downsampled,\n            });\n        };\n\n        if (this.chunkInterval > 0) {\n            this.startChunkRequesting();\n        }\n\n        this.isRecording = true;\n        return Promise.resolve();\n    };\n\n    private startChunkRequesting = () => {\n        setTimeout(() => this.requestChunk(), this.chunkInterval * 1000);\n    };\n\n    private requestChunk = () => {\n        // if recording ask for chunk\n        if (this.isRecording) {\n            this.encoder.postMessage({ command: 'get-chunk' });\n            this.startChunkRequesting();\n        }\n    };\n\n    // Now the desired sample rate of wave might not match the sample rate of\n    // the recording, gotta downsample the recording\n    private downsampleBuffer(buffer: AudioBuffer, rate: number) {\n        if (rate === buffer.sampleRate) {\n            return buffer;\n        }\n        if (rate > buffer.sampleRate) {\n            console.error(\n                'Downsampling rate is larger than original sample rate'\n            );\n        }\n        const sampleRateRatio = buffer.sampleRate / rate;\n        const newLength = Math.round(buffer.length / sampleRateRatio);\n        const result = new Float32Array(newLength);\n        let offsetResult = 0;\n        let offsetBuffer = 0;\n        const nowBuffering = buffer.getChannelData(0);\n        while (offsetResult < result.length) {\n            const nextOffsetBuffer = Math.round(\n                (offsetResult + 1) * sampleRateRatio\n            );\n            // Use average value of skipped samples\n            let accum = 0,\n                count = 0;\n            for (\n                let i = offsetBuffer;\n                i < nextOffsetBuffer && i < buffer.length;\n                i++\n            ) {\n                accum += nowBuffering[i];\n                count++;\n            }\n            result[offsetResult] = accum / count;\n            // Or you can simply get rid of the skipped samples:\n            // result[offsetResult] = buffer[nextOffsetBuffer];\n            offsetResult++;\n            offsetBuffer = nextOffsetBuffer;\n        }\n        return result;\n    }\n\n    private getBlobDuration = async (url: string): Promise<number> => {\n        return new Promise((resolve) => {\n            const tempVideoEl = document.createElement('video');\n            tempVideoEl.src = url;\n            tempVideoEl.addEventListener('loadedmetadata', () => {\n                resolve(tempVideoEl.duration as number);\n            });\n        });\n    };\n\n    private stop = (): Promise<AudioInfo> => {\n        if (!this.isReady()) {\n            console.error('Cannot stop audio before microphone is ready.');\n            return Promise.reject();\n        }\n\n        // Then return full recording (or at least what is present in recorder,\n        // this might be less than the full recording if a user has refreshed the page)\n        return new Promise((resolve, reject) => {\n            this.processorNode.disconnect();\n            this.sourceNode.disconnect();\n            this.encoder.onmessage = async (event) => {\n                const {\n                    data: { blob, chunkCount, command },\n                } = event;\n                if (command === 'finish') {\n                    const url = URL.createObjectURL(blob);\n                    try {\n                        const duration = await this.getBlobDuration(url);\n                        this.isRecording = false;\n                        resolve({\n                            blob,\n                            duration,\n                            url,\n                            sampleRate: this.sampleRate,\n                            chunkCount,\n                        });\n                    } catch (error) {\n                        reject('Audio has no duration');\n                    }\n                }\n\n                // To handle the last chunk\n                if (command === 'chunk-available') {\n                    const {\n                        data: { chunk },\n                    } = event;\n                    if (this.onChunkReceived) {\n                        this.onChunkReceived(chunk);\n                        this.chunks.push(chunk);\n                    }\n                }\n            };\n            this.encoder.postMessage({\n                command: 'finish',\n            });\n        });\n    };\n\n    init = async (): Promise<MediaStream> => {\n        if (this.isReady()) {\n            return Promise.reject();\n        }\n\n        this.microphone = await this.getMicrophone();\n\n        const recordingStream = this.microphone.clone();\n        const rtcStream = this.microphone.clone();\n\n        // NOTE: since firefox gives this error message: Connecting AudioNodes from\n        // AudioContexts with different sample-rate is currently not supported.\n        // SO we need to use the default sampleRate\n        // THEN downsample the buffer after recording and before encoding in\n        // wave\n        this.sampleRate = this.microphone.getAudioTracks()[0].getSettings()\n            .sampleRate as number;\n        this.audioContext = new (window.AudioContext ||\n            window.webkitAudioContext)({ sampleRate: this.sampleRate });\n        // Set sample rate to the active one\n        this.sampleRate = this.audioContext.sampleRate;\n\n        this.sourceNode = this.audioContext.createMediaStreamSource(\n            recordingStream\n        );\n        this.processorNode = this.sourceNode.context.createScriptProcessor(\n            2048,\n            1,\n            1\n        );\n        this.gainNode = this.audioContext.createGain();\n        this.processorNode.connect(this.audioContext.destination);\n        this.sourceNode.connect(this.gainNode);\n        this.gainNode.connect(this.processorNode);\n        this.gainNode.gain.value = 1;\n\n        return Promise.resolve(rtcStream);\n    };\n\n    mute = () => {\n        if (this.gainNode) {\n            this.gainNode.gain.value = 0;\n        }\n    };\n\n    unMute = () => {\n        if (this.gainNode) {\n            this.gainNode.gain.value = 1;\n        }\n    };\n\n    startRecording = async (): Promise<void> => {\n        if (!isRecordingSupported()) {\n            console.log(AudioError.NO_MIC_SUPPORT);\n            return Promise.reject(AudioError.NO_MIC_SUPPORT);\n        }\n        if (!this.processorNode) {\n            // TODO: Throw a predefined error.\n            console.error('NO_PROCESSOR_NODE');\n            return Promise.reject('NO_PROCESSOR_NODE');\n        }\n        // Clear out current encoder data\n        this.clearRecording();\n        return this.start();\n    };\n\n    stopRecording = async (): Promise<AudioInfo> => this.stop();\n\n    release = () => {\n        if (this.microphone) {\n            for (const track of this.microphone.getTracks()) {\n                track.stop();\n            }\n        }\n\n        this.microphone = undefined;\n    };\n\n    clearRecording = () => {\n        this.encoder.postMessage({ command: 'clear' });\n        this.chunks = [];\n    };\n\n    getMissingChunks = (missingChunks: number[]) => {\n        const foundMissingChunks: AudioChunk[] = [];\n        for (const missing of missingChunks) {\n            foundMissingChunks.push(this.chunks[missing - 1]);\n        }\n        console.log(`found missing: ${foundMissingChunks}`);\n        return foundMissingChunks;\n    };\n}\n","export class MicError extends Error {\n    constructor(message: string) {\n        super(message);\n        // Maintains proper stacktrace\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, MicError);\n        }\n        this.name = 'MicError';\n    }\n}\n\nexport class RTCError extends Error {\n    constructor(message: string) {\n        super(message);\n        // Maintains proper stacktrace\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, RTCError);\n        }\n        this.name = 'RTCError';\n    }\n}\n","import styled from 'styled-components';\n\nconst Icon = styled.svg.attrs({\n    version: '1.1',\n    xmlns: 'http://www.w3.org/2000/svg',\n    xmlnsXlink: 'http://www.w3.org/1999/xlink',\n})``;\n\nexport interface IconProps {\n    height?: number;\n    width?: number;\n    small?: boolean;\n    medium?: boolean;\n    large?: boolean;\n    fill?: string;\n    hoverFill?: string;\n    outline?: string;\n    type?: string;\n}\n\n// To-do: large to medium and medium to small etc on small screens\n/* eslint-disable no-extra-boolean-cast */\nexport default styled(Icon)<IconProps>`\n    height: ${({ height }) => (height ? height : '20px')};\n    width: ${({ width }) => (width ? width : '20px')};\n    fill: ${({ fill }) => (!!fill ? fill : 'gray')};\n`;\n/* eslint-enable no-extra-boolean-cast */\n","import * as React from 'react';\nimport Icon, { IconProps } from './icon';\n\nexport const Mic: React.FC<IconProps> = (props) => (\n    <Icon viewBox=\"0 0 350 350\" className=\"mic\" {...props}>\n        <g>\n            <path\n                d=\"M176.2,278.4L176.2,278.4c19.2,0,36.8-8,49.6-20.8c12.8-12.8,20.8-30.4,20.8-49.6V70.4\n\t\tc0-19.2-8-36.8-20.8-49.6S195.4,0,176.2,0l0,0c-19.2,0-36.8,8-49.6,20.8s-20.8,30.4-20.8,49.6V208c0,19.2,8,36.8,20.8,49.6\n\t\tC139.4,270.4,157,278.4,176.2,278.4z M126.6,70.4c0-13.6,5.6-26,14.8-35.2s21.6-14.8,35.2-14.8l0,0c13.6,0,26,5.6,35.2,14.8\n\t\ts14.8,21.6,14.8,35.2V208c0,13.6-5.6,26-14.8,35.2c-9.2,9.2-21.6,14.8-35.2,14.8l0,0c-13.6,0-26-5.6-35.2-14.8\n\t\tc-9.2-9.2-14.8-21.6-14.8-35.2V70.4z\"\n            />\n            <path\n                d=\"M165.8,311.6v17.6H139c-5.6,0-10.4,4.4-10.4,10.4c0,5.6,4.4,10.4,10.4,10.4h36.8l0,0l0,0h36.8\n\t\tc5.6,0,10.4-4.4,10.4-10.4c0-5.6-4.4-10.4-10.4-10.4h-26.8v-17.6c24.4-2.4,46.4-12.8,62.4-29.2c18.8-18.8,30-44.4,30-72.8V174\n\t\tc0-5.6-4.4-10.4-10.4-10.4c-5.6,0-10.4,4.4-10.4,10.4v35.6c0,22.8-9.2,43.2-24,58.4c-14.8,14.8-35.6,24-58.4,24s-43.2-9.2-58.4-24\n\t\tc-14.8-14.8-24-35.6-24-58.4V174c0-5.6-4.4-10.4-10.4-10.4c-5.6,0-10.4,4.4-10.4,10.4v35.6c0,28.4,11.6,54,30,72.8\n\t\tC119.8,298.8,141.8,308.8,165.8,311.6z\"\n            />\n        </g>\n    </Icon>\n);\n\nexport default Mic;\n","import styled, { keyframes } from 'styled-components';\n\nconst spin = keyframes`\n    from {\n        transform:rotate(0deg);\n    }\n    to {\n        transform:rotate(360deg);\n    }\n`;\n\ninterface SpinnerProps {\n    width?: string;\n    height?: string;\n}\n\nexport const LoadingSpinning = styled.div<SpinnerProps>`\n    width: ${({ width }) => (width ? width : '1rem')};\n    height: ${({ height }) => (height ? height : '1rem')};\n    content: '';\n    border: solid thick lightgray;\n    border-radius: 50%;\n    border-bottom-color: #60c197;\n    animation: 1.5s linear infinite ${spin};\n`;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\ninterface SwapProps {\n    second: boolean;\n    height: number;\n    width: number;\n}\n\nconst SwapContainer = styled.div<SwapProps>`\n    position: relative;\n    width: ${({ width }) => width}px;\n    height: ${({ height }) => height}px;\n    & > * {\n        position: absolute;\n        transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1),\n            scale 0.5s cubic-bezier(0.4, 0, 0.2, 1);\n    }\n\n    > *:nth-child(1) {\n        transform: ${({ second }) => `translateX(${second ? '-25%' : '0%'})`}\n            scale(${({ second }) => (second ? 0 : 1)});\n    }\n\n    > *:nth-child(2) {\n        transform: ${({ second }) => `translateX(${!second ? '25%' : '0%'})`}\n            scale(${({ second }) => (!second ? 0 : 1)});\n    }\n`;\n\nconst FakeContainer = styled.div`\n    position: absolute;\n    opacity: 0;\n    pointer-events: none;\n`;\n\ninterface Props {\n    children?: React.ReactNode;\n    className?: string;\n    second: boolean;\n    ref?: React.Ref<HTMLDivElement>;\n}\n\ninterface State {\n    height: number;\n    width: number;\n}\n\nclass SwipeSwap extends React.Component<Props, State> {\n    private firstFakeRef = React.createRef<HTMLDivElement>();\n    private secondFakeRef = React.createRef<HTMLDivElement>();\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            height: 0,\n            width: 0,\n        };\n    }\n\n    componentDidMount = () => {\n        const firstWidth = this.firstFakeRef.current?.clientWidth;\n        const secondWidth = this.secondFakeRef.current?.clientWidth;\n        if (!!firstWidth && !!secondWidth) {\n            this.setState({ width: Math.max(firstWidth, secondWidth) + 1 });\n        }\n        const firstHeight = this.firstFakeRef.current?.clientHeight;\n        const secondHeight = this.secondFakeRef.current?.clientHeight;\n        if (!!firstHeight && !!secondHeight) {\n            this.setState({ height: Math.max(firstHeight, secondHeight) + 1 });\n        }\n    };\n\n    render() {\n        const { children, className, second, ref } = this.props;\n        const { width, height } = this.state;\n        const firstChild = Array.isArray(children) ? children[0] : undefined;\n        const secondChild = Array.isArray(children) ? children[1] : undefined;\n        return (\n            <React.Fragment>\n                <SwapContainer\n                    className={className}\n                    ref={ref}\n                    second={second}\n                    width={width}\n                    height={height}\n                >\n                    {children}\n                </SwapContainer>\n                <FakeContainer ref={this.firstFakeRef}>\n                    {firstChild}\n                </FakeContainer>\n                <FakeContainer ref={this.secondFakeRef}>\n                    {secondChild}\n                </FakeContainer>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default React.forwardRef(\n    (props: Props, ref: React.Ref<HTMLDivElement>) => (\n        <SwipeSwap {...props} ref={ref as any} />\n    )\n);\n","import * as React from 'react';\nimport Icon, { IconProps } from './icon';\n\n// Icons made by Freepik\n// \"http://www.freepik.com/\"\n\nexport const Headset: React.FC<IconProps> = (props) => (\n    <Icon viewBox=\"0 0 512 512\" className=\"close\" {...props}>\n        <g>\n            <g>\n                <path\n                    d=\"M471.059,206.77c-5.551-3.577-11.446-6.495-17.578-8.741C444.032,97.38,359.078,18.348,256,18.348\n\t\t\tc-103.077,0-188.031,79.031-197.481,179.68c-6.129,2.244-12.022,5.162-17.568,8.735C15.309,223.273,0,251.321,0,281.792v28.821\n\t\t\tc0,49.181,40.012,89.194,89.194,89.194h20.112c15.626,0,28.339-12.713,28.339-28.34v-150.53c0-15.626-12.713-28.34-28.339-28.34\n\t\t\tH89.194c-0.503,0-1.004,0.019-1.507,0.026C99.423,110.241,170.423,46.687,256,46.687s156.577,63.553,168.313,145.938\n\t\t\tc-0.503-0.008-1.004-0.026-1.507-0.026h-20.112c-15.626,0-28.339,12.713-28.339,28.339v150.53\n\t\t\tc0,15.626,12.713,28.339,28.339,28.339h19.032c-11.949,37.926-47.446,65.505-89.267,65.505c-7.825,0-14.17,6.344-14.17,14.17\n\t\t\ts6.344,14.17,14.17,14.17c59.326,0,108.88-42.6,119.703-98.814C486.966,382.672,512,349.514,512,310.613v-28.821\n\t\t\tC512,251.321,496.693,223.274,471.059,206.77z M89.194,220.938h20.112l0.018,150.529c0,0-0.006,0.001-0.018,0.001H89.194\n\t\t\tc-33.555,0-60.854-27.299-60.854-60.854v-28.821c0-20.792,10.45-39.931,27.958-51.204\n\t\t\tC66.094,224.275,77.47,220.938,89.194,220.938z M483.661,310.613c0,33.555-27.298,60.854-60.854,60.854h-20.112v-150.53h20.112\n\t\t\tc11.724,0,23.101,3.338,32.907,9.657c17.5,11.267,27.947,30.406,27.947,51.197V310.613z\"\n                />\n            </g>\n        </g>\n    </Icon>\n);\n\nexport default Headset;\n","import * as React from 'react';\nimport Icon, { IconProps } from './icon';\n\n// Icons made by Freepik\n// \"http://www.freepik.com/\"\n\nexport const HeadsetMuted: React.FC<IconProps> = (props) => (\n    <Icon viewBox=\"0 0 512 512\" className=\"close\" {...props}>\n        <path d=\"m471.06 206.77c-5.551-3.577-11.446-6.495-17.578-8.741-9.449-100.65-94.403-179.68-197.48-179.68-103.08 0-188.03 79.031-197.48 179.68-6.129 2.244-12.022 5.162-17.568 8.735-25.642 16.51-40.951 44.558-40.951 75.029v28.821c0 49.181 40.012 89.194 89.194 89.194h20.112c15.626 0 28.339-12.713 28.339-28.34v-150.53c0-15.626-12.713-28.34-28.339-28.34h-20.112c-0.503 0-1.004 0.019-1.507 0.026 11.736-82.382 82.736-145.94 168.31-145.94s156.58 63.553 168.31 145.94c-0.503-8e-3 -1.004-0.026-1.507-0.026h-20.112c-15.626 0-28.339 12.713-28.339 28.339v150.53c0 15.626 12.713 28.339 28.339 28.339h19.032c-11.949 37.926-47.446 65.505-89.267 65.505-7.825 0-14.17 6.344-14.17 14.17s6.344 14.17 14.17 14.17c59.326 0 108.88-42.6 119.7-98.814 34.804-12.166 59.838-45.324 59.838-84.225v-28.821c0-30.471-15.307-58.518-40.941-75.022zm-381.86 14.168h20.112l0.018 150.53s-6e-3 1e-3 -0.018 1e-3h-20.112c-33.555 0-60.854-27.299-60.854-60.854v-28.821c0-20.792 10.45-39.931 27.958-51.204 9.796-6.314 21.172-9.651 32.896-9.651zm394.47 89.675c0 33.555-27.298 60.854-60.854 60.854h-20.112v-150.53h20.112c11.724 0 23.101 3.338 32.907 9.657 17.5 11.267 27.947 30.406 27.947 51.197v28.822z\" />\n\n        <path d=\"m466.7 29.396a15.12 15.12 0 0 0-10.348 4.6738l-149.57 152.5-275.57 280.96a15.12 15.12 0 1 0 21.588 21.172l425.14-433.46a15.12 15.12 0 0 0-11.238-25.848z\" />\n    </Icon>\n);\n\nexport default HeadsetMuted;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport Chat, { RecordingState, VoiceState } from '../../controllers/chat';\nimport { AudioInfo } from '../../types/audio';\nimport { LoadingSpinning } from '../ui/animated/spinner';\nimport { MicError } from '../../types/errors';\nimport Swipe from '../ui/animated/swipe';\nimport HeadSet from '../ui/icons/headset';\nimport HeadSetMuted from '../ui/icons/headset-muted';\n\nconst ControlsContainer = styled(Swipe)`\n    width: 100%;\n    margin: 0 auto;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 0.5rem;\n`;\n\nconst ButtonsContainer = styled.div`\n    display: flex;\n    gap: 3rem;\n`;\n\nconst MainButtonContainer = styled.div<{ isActive: boolean }>`\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0.8rem;\n\n    :active {\n        transform: translateY(2px);\n    }\n\n    ${({ isActive }) =>\n        isActive &&\n        `\n        & > div {\n            opacity: 1;\n        }\n    `}\n\n    & :hover {\n        & > div {\n            opacity: 1;\n        }\n    }\n`;\n\nconst MainButton = styled.button`\n    position: relative;\n    width: 5rem;\n    height: 5rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color: white;\n    border-radius: 50%;\n    border: none;\n    cursor: pointer;\n    outline: none;\n\n    &:focus-visible {\n        border: 2px solid black;\n    }\n`;\n\nconst Glow = styled.div<{ red?: boolean }>`\n    position: absolute;\n    width: 6.2rem;\n    height: 6.2rem;\n    opacity: 0.2;\n    background: linear-gradient(\n        to left,\n        ${({ red }) => (red ? '#FF99A1, #FF4F5E' : '#6062C1, #A7BFDD')}\n    );\n    border-radius: 50%;\n    filter: blur(6px);\n    transition: opacity 0.2s linear;\n`;\n\nconst RecordIcon = styled.div<{ active?: boolean }>`\n    border-radius: ${({ active }) => (active ? '0%' : '50%')};\n    transform: scale(${({ active }) => (active ? 0.9 : 1)});\n    transition: border-radius 0.4s cubic-bezier(0.4, 0, 0.2, 1),\n        transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n    background-color: #ff4f5e;\n    height: 35px;\n    width: 35px;\n    box-shadow: 0 0 3px 2px rgba(0, 0, 0, 0.08);\n    -moz-box-shadow: 0 0 3px 2px rgba(0, 0, 0, 0.08);\n    -webkit-box-shadow: 0 0 3px 2px rgba(0, 0, 0, 0.08);\n`;\n\nconst SubmitButtons = styled(Swipe)`\n    width: 100%;\n`;\n\nconst SubmitButtonsContainer = styled.div`\n    display: grid;\n    width: 100%;\n    grid-template-columns: 1fr 1fr;\n    gap: 3rem;\n`;\n\nconst SpinnerContainer = styled.div`\n    width: 100%;\n    display: grid;\n    justify-content: center;\n`;\n\ninterface ButtonProps {\n    green?: boolean;\n    red?: boolean;\n}\nexport const Button = styled.button<ButtonProps>`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: none;\n    background-color: ${({ green, red }) =>\n        green ? '#60C197' : red ? '#ff4f5e' : '#0099ff'};\n    color: white;\n    font-size 1.2rem;\n    font-weight: 600;\n    cursor: pointer;\n    padding: 1rem;\n\n    :active {\n        transform: translateY(2px);\n    }\n`;\n\ninterface Props {\n    chat: Chat;\n    onRemove: () => void;\n    onSubmit: () => void;\n    recording: AudioInfo;\n    recordingState: RecordingState;\n    voiceState: VoiceState;\n    chatRoomOwner: boolean;\n    createToast: (message: string) => void;\n}\n\ninterface State {\n    confirm: boolean;\n    submitted: boolean;\n}\n\nexport default class Controls extends React.Component<Props, State> {\n    private interval: number;\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            confirm: false,\n            submitted: false,\n        };\n    }\n\n    handleVoice = () => {\n        const { chat, voiceState } = this.props;\n        if (!chat) {\n            return;\n        }\n        if (voiceState === VoiceState.VOICE_CONNECTED) {\n            chat.mute();\n        } else {\n            // Toast based on the exception type\n            chat.unMute().catch((err) => {\n                if (err instanceof MicError) {\n                    this.props.createToast('Hljóðnemi fannst ekki');\n                } else {\n                    this.props.createToast(\n                        'Jafningjanet: Aðrar tengingar eru ekki opnar'\n                    );\n                }\n            });\n        }\n    };\n\n    handleRecord = () => {\n        const { chat, recordingState } = this.props;\n        if (!chat) {\n            return;\n        }\n        if (recordingState === RecordingState.RECORDING_REQUESTED) {\n            chat.cancelRecording();\n        } else if (recordingState === RecordingState.RECORDING) {\n            chat.stopRecording();\n        } else {\n            chat.requestRecording();\n        }\n    };\n\n    handleConfirm = () => {\n        this.setState({ confirm: !this.state.confirm });\n    };\n\n    handleRemove = () => {\n        this.props.onRemove();\n        this.setState({ confirm: false });\n    };\n\n    handleOnSubmit = () => {\n        this.setState({ submitted: true });\n        this.props.onSubmit();\n    };\n\n    render() {\n        const {\n            recording,\n            recordingState,\n            voiceState,\n            chatRoomOwner,\n        } = this.props;\n\n        const { confirm, submitted } = this.state;\n\n        return (\n            <ControlsContainer second={!!recording}>\n                <ButtonsContainer>\n                    <MainButtonContainer\n                        isActive={voiceState === VoiceState.VOICE_CONNECTED}\n                        onClick={this.handleVoice}\n                    >\n                        <Glow />\n                        {voiceState === VoiceState.VOICE_CONNECTED ? (\n                            <MainButton title=\"Slökktu á hljóði\">\n                                <HeadSet height={40} width={40} />\n                            </MainButton>\n                        ) : (\n                            <MainButton title=\"Kveiktu á hljóði\">\n                                <HeadSetMuted height={40} width={40} />\n                            </MainButton>\n                        )}\n                    </MainButtonContainer>\n                    {chatRoomOwner && (\n                        <MainButtonContainer\n                            isActive={\n                                recordingState === RecordingState.RECORDING\n                            }\n                            onClick={this.handleRecord}\n                        >\n                            <Glow red />\n                            <MainButton\n                                title={\n                                    recordingState !== RecordingState.RECORDING\n                                        ? 'Smelltu hér til byrja að taka upp'\n                                        : 'Smelltu hér til að stöðva upptökuna'\n                                }\n                            >\n                                <RecordIcon\n                                    active={\n                                        recordingState ===\n                                        RecordingState.RECORDING\n                                    }\n                                />\n                            </MainButton>\n                        </MainButtonContainer>\n                    )}\n                </ButtonsContainer>\n                {chatRoomOwner && (\n                    <SubmitButtons second={confirm || submitted}>\n                        <SubmitButtonsContainer>\n                            <Button onClick={this.handleConfirm}>\n                                Byrja aftur\n                            </Button>\n                            <Button onClick={this.handleOnSubmit} green>\n                                Senda inn\n                            </Button>\n                        </SubmitButtonsContainer>\n                        {submitted ? (\n                            <SpinnerContainer>\n                                <LoadingSpinning\n                                    height={'3rem'}\n                                    width={'3rem'}\n                                />\n                            </SpinnerContainer>\n                        ) : (\n                            <SubmitButtonsContainer>\n                                <Button onClick={this.handleConfirm}>\n                                    Til baka\n                                </Button>\n                                <Button red onClick={this.handleRemove}>\n                                    Eyða upptöku\n                                </Button>\n                            </SubmitButtonsContainer>\n                        )}\n                    </SubmitButtons>\n                )}\n            </ControlsContainer>\n        );\n    }\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    position: relative;\n    width: 100%;\n    margin-bottom: 2rem;\n`;\n\nconst ProgressBarContainer = styled.div`\n    width: 100%;\n    height: 2rem;\n    border-radius: 1rem;\n    border: 1px solid lightGray;\n    overflow: hidden;\n`;\n\ninterface FillerProps {\n    ratio: number;\n}\nconst Filler = styled.div.attrs(({ ratio }: FillerProps) => ({\n    style: {\n        maxWidth: `calc(${ratio} * 100%)`,\n    },\n}))<FillerProps>`\n    height: 100%;\n    background-color: #60c197;\n    width: 100%;\n    transition: max-width ${({ ratio }) => (ratio === 0 ? '0.3s' : '1s')} linear;\n`;\n\nconst Splitter = styled.div<{ pos: number }>`\n    position: absolute;\n    left: ${({ pos }) => pos}%;\n    top: 0;\n    width: 2px;\n    background-color: lightGray;\n    height: 3rem;\n`;\n\nconst Indicator = styled.div<{ pos: number }>`\n    position: absolute;\n    left: ${({ pos }) => pos}%;\n    top: 3.5rem;\n    margin-left: -2.3rem;\n    font-weight: 600;\n`;\n\ninterface Props {\n    max: number;\n    min: number;\n    val: number;\n}\n\nexport const ProgressBar: React.FunctionComponent<Props> = ({\n    max,\n    min,\n    val,\n}) => {\n    const minPosition = (min / max) * 100;\n    return (\n        <Wrapper>\n            <Splitter pos={minPosition} />\n            <Indicator pos={minPosition}>\n                {`${Math.floor(min / 60)} mínútur`}\n            </Indicator>\n            <ProgressBarContainer>\n                <Filler ratio={val / max} />\n            </ProgressBarContainer>\n        </Wrapper>\n    );\n};\n\nexport default ProgressBar;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport Chat, { RecordingState } from '../../controllers/chat';\nimport { AudioInfo } from '../../types/audio';\nimport { getTimestampString, splitSeconds } from '../../utilities/utils';\n\nimport Swipe from '../ui/animated/swipe';\nimport ProgressBar from './progress-bar';\n\nimport AudioPlayer, { RHAP_UI } from 'react-h5-audio-player';\nimport 'react-h5-audio-player/lib/styles.css';\n\nconst RecordingsContainer = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 1rem;\n`;\n\nconst StopwatchContainer = styled.div`\n    border-radius: 0.5rem;\n    padding: 0 0.5rem;\n    width: 9rem;\n    max-width: 100%;\n    font-size: 3rem;\n    display: grid;\n    grid-template-columns: repeat(1, 1fr);\n    & > * {\n        justify-self: center;\n        align-self: center;\n    }\n\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n`;\n\nconst SwipeSwap = styled(Swipe)`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 2rem;\n`;\n\ninterface Props {\n    chat: Chat;\n    recording: AudioInfo;\n    recordingState: RecordingState;\n}\n\ninterface State {\n    seconds: number;\n}\n\nexport default class Recording extends React.Component<Props, State> {\n    private interval: any;\n    private maxSeconds: number;\n    private minSeconds: number;\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            seconds: 0,\n        };\n        this.maxSeconds = 2100;\n        this.minSeconds = 600;\n    }\n\n    componentDidUpdate = (prevProps: Props) => {\n        const { recording, recordingState } = this.props;\n        const oldState = prevProps.recordingState;\n        if (oldState !== recordingState) {\n            if (recordingState === RecordingState.RECORDING) {\n                this.startStopwatch();\n            } else if (recordingState === RecordingState.NOT_RECORDING) {\n                this.stopStopwatch();\n            }\n        }\n\n        if (prevProps.recording && !recording) {\n            this.setState({ seconds: 0 });\n        }\n    };\n\n    startStopwatch = () => {\n        this.interval = setInterval(() => {\n            this.setState({ seconds: this.state.seconds + 1 });\n        }, 1000);\n    };\n\n    stopStopwatch = () => {\n        clearInterval(this.interval);\n    };\n\n    render() {\n        const { recording } = this.props;\n        const { seconds } = this.state;\n        const timestampString = getTimestampString(splitSeconds(seconds));\n\n        return (\n            <RecordingsContainer>\n                <StopwatchContainer>\n                    <span>{timestampString}</span>\n                </StopwatchContainer>\n                <SwipeSwap second={!!recording}>\n                    <ProgressBar\n                        min={this.minSeconds}\n                        max={this.maxSeconds}\n                        val={seconds}\n                    />\n                    <AudioPlayer\n                        autoPlayAfterSrcChange={false}\n                        customAdditionalControls={[]}\n                        customControlsSection={[\n                            RHAP_UI.MAIN_CONTROLS,\n                            RHAP_UI.VOLUME_CONTROLS,\n                        ]}\n                        layout={'horizontal'}\n                        showJumpControls={false}\n                        volume={0.5}\n                        src={!!recording ? recording.url : ''} // eslint-disable-line no-extra-boolean-cast\n                    />\n                </SwipeSwap>\n            </RecordingsContainer>\n        );\n    }\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\n\ninterface InputProps {\n    active: boolean;\n}\n\nconst InputContainer = styled.div<InputProps>`\n    width: 100%;\n    position: relative;\n    display: inline-block;\n    border: 2px solid ${({ active }) => (active ? 'black' : '#e2e2e2')};\n    & :active,\n    :focus {\n        outline: none;\n    }\n`;\n\nconst Padding = styled.div`\n    padding: 1rem;\n`;\n\nconst TextInputContainer = styled.input`\n    width: 100%;\n    height: 100%;\n    border: none;\n    appearance: textfield;\n    -webkit-appearance: textfield;\n    -moz-appearance: textfield;\n\n    & :active,\n    :focus {\n        outline: none;\n    }\n\n    font-size: 1.3rem;\n    ::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n    }\n`;\n\nconst Label = styled.span`\n    position: absolute;\n    color: gray;\n    font-size: 0.8rem;\n    top: -0.6rem;\n    background-color: white;\n    padding: 0 0.3rem;\n    margin-left: 0.3rem;\n`;\n\ninterface TextInputProps {\n    className?: string;\n    label: string;\n    ref?: React.Ref<HTMLDivElement>;\n}\n\ninterface State {\n    active: boolean;\n}\n\ntype Props = TextInputProps & React.InputHTMLAttributes<HTMLInputElement>;\n\nclass TextInput extends React.Component<Props, State> {\n    private ref = React.createRef<HTMLInputElement>();\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            active: false,\n        };\n    }\n\n    componentDidMount = () => {\n        this.ref.current?.addEventListener('focusout', this.onFocusOut);\n    };\n\n    componentWillUnmount = () => {\n        this.ref.current?.removeEventListener('focusout', this.onFocusOut);\n    };\n\n    onFocusOut = () => {\n        this.setState({ active: false });\n    };\n\n    onFocus = () => {\n        this.setState({ active: true });\n    };\n\n    render() {\n        const { className, label } = this.props;\n\n        const { active } = this.state;\n\n        return (\n            <InputContainer active={active} className={className}>\n                <Label>{label}</Label>\n                <Padding>\n                    <TextInputContainer\n                        ref={this.ref}\n                        onFocus={this.onFocus}\n                        {...(this.props as React.InputHTMLAttributes<\n                            HTMLInputElement\n                        >)}\n                    />\n                </Padding>\n            </InputContainer>\n        );\n    }\n}\n\nexport default React.forwardRef(\n    (props: Props, ref: React.Ref<HTMLDivElement>) => (\n        <TextInput {...props} ref={ref as any} />\n    )\n);\n","export const talkingpoints = [\n    'Hvað er málið með þetta veður?',\n    'Hvað eldaðir þú í matinn í gær?',\n    'Hvað segiru, alltaf í boltanum?',\n    'Hvað eldar þú þegar þú ert að reyna gera vel við þig og þína?',\n    'Hver er uppáhalds sundlaugin þín?',\n    'Hvert fórst þú síðast þegar þú varst að ferðast innanlands?',\n    'Hvað finnst þér best við að það búa þar sem þú býrð?',\n    'Er langt síðan þú fórst í bíó?',\n    'Myndir þú kaupa sjálfkeyrandi bíl?',\n    'Hver er uppáhalds bíómyndin þín?',\n    'Hvað er uppáhalds listaverkið þitt?',\n    'Hvert myndir þú fara ef þú gætir farið hvert sem er?',\n    'Hefur þú lesið einhverjar skemmtilegar greinar undanfarið?',\n    'Hversu oft ferð þú út að hreyfa þig?',\n    'Hver er uppáhalds árstíðin þín og af hverju?',\n    'Hvernig heldur þú að heimurinn verði eftir 100 ár?',\n    'Hvar sérð þú þig eftir 5 ár?',\n    'Trúir þú á álfa, tröll eða drauga?',\n    'Hver er uppáhalds liturinn þinn og af hverju?',\n    'Hvaða pláneta er mest þú í sólkerfinu okkar?',\n    'Hvað finnst þér gaman að gera?',\n    'Hvernig voru unglingsárin þín?',\n    'Er erfiðara að vera unglingur núna en áður?',\n    'Hvað fannst þér um Tokyo 2021 Ólympíuleikana?',\n    'Hvað finnst þér um rafhlaupahjól?',\n    'Hvað er best við jólin?',\n    'Hvað ætlar þú að gera í kvöld?',\n    'Finnst þér gaman að tefla?',\n    'Finnst þér gaman að dansa?',\n];\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport { RecordingState } from '../../controllers/chat';\nimport { AudioInfo } from '../../types/audio';\nimport TextInput from '../ui/input/text-input';\n\nimport { talkingpoints } from '../../constants/talkingpoints';\nimport { shuffleArray } from '../../utilities/utils';\n\nconst TalkingPointContainer = styled.div`\n    width: 100%;\n    margin: 8rem auto 0rem auto;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 5rem;\n`;\n\nconst TalkingPointInput = styled(TextInput)`\n    grid-column: 1 / 3;\n\n    @media (max-width: 1024px) {\n        grid-column: 1;\n    }\n`;\n\ninterface Props {\n    recording: AudioInfo;\n    recordingState: RecordingState;\n}\n\ninterface State {\n    seconds: number;\n}\n\nexport default class TalkingPoint extends React.Component<Props, State> {\n    private interval: any;\n    private maxSeconds: number;\n    private minSeconds: number;\n    private talkingPoints: Array<string>;\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            seconds: 0,\n        };\n        this.maxSeconds = 2100;\n        this.minSeconds = 600;\n        this.talkingPoints = talkingpoints;\n        shuffleArray(this.talkingPoints);\n    }\n\n    componentDidUpdate = (prevProps: Props) => {\n        const { recording, recordingState } = this.props;\n        const oldState = prevProps.recordingState;\n        if (oldState !== recordingState) {\n            if (recordingState === RecordingState.RECORDING) {\n                this.startStopwatch();\n            } else if (recordingState === RecordingState.NOT_RECORDING) {\n                this.stopStopwatch();\n            }\n        }\n\n        if (prevProps.recording && !recording) {\n            this.setState({ seconds: 0 });\n        }\n    };\n\n    startStopwatch = () => {\n        this.interval = setInterval(() => {\n            this.setState({ seconds: this.state.seconds + 1 });\n        }, 1000);\n    };\n\n    stopStopwatch = () => {\n        clearInterval(this.interval);\n    };\n\n    displayTalkingPoint = (seconds: number): Array<string> => {\n        // TODO: Add a longer list of talking points\n        // might want to put them in the database\n        // TODO: replace the share link with the talking points\n\n        const intervalLength = 120;\n        // Make sure to stick with the same talking point throughout the interval\n        // Get the NextTalkingPoint with\n        // Math.floor(seconds/intervalLength)\n        // ex:  121seconds/5intervalLength = floor(24.20) = 24\n        // Make sure to always stay within the length of the talking points\n        // by looping through them when you've reached the last talking point\n        // with NextTalkingPoint % talkingpoints.length\n        // ex: 24thtalkingpoint % 5talkingpoints = 4th talking point\n        if (seconds > 0) {\n            const talkingNumber =\n                Math.floor(seconds / intervalLength) %\n                this.talkingPoints.length;\n            return [\n                'Vantar þig eitthvað til að spjalla um?',\n                this.talkingPoints[talkingNumber],\n            ];\n        }\n        return ['', ''];\n    };\n\n    render() {\n        const { seconds } = this.state;\n        const talkingpoint = this.displayTalkingPoint(seconds);\n        const display = talkingpoint[0] ? true : false;\n\n        return (\n            <TalkingPointContainer>\n                {display && (\n                    <TalkingPointInput\n                        label={talkingpoint[0]}\n                        value={talkingpoint[1]}\n                        readOnly\n                    />\n                )}\n            </TalkingPointContainer>\n        );\n    }\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { RecordingState } from '../../controllers/chat';\n\ninterface MessageContainerProps {\n    red: boolean;\n}\n\n//TODO: add blinking red text\nconst MessagesContainer = styled.div<MessageContainerProps>`\n    font-size: 1.2rem;\n    margin-bottom: 0.5rem;\n    color: blue;\n    ${({ red }) =>\n        red &&\n        `font-weight: bold;\n        color: red;`}\n`;\n\ninterface Props {\n    hasRecording: boolean;\n    recordingState: RecordingState;\n}\n\nexport const StatusMessages: React.FunctionComponent<Props> = ({\n    hasRecording,\n    recordingState,\n}) => {\n    const getStatusMessage = (\n        hasRecording: boolean,\n        status: RecordingState\n    ): string => {\n        if (hasRecording) {\n            return 'Við bíðum eftir að vinur þinn sendi upptökuna. Vinsamlegast ekki loka glugganum.';\n        } else {\n            switch (status) {\n                case (status = RecordingState.NOT_RECORDING):\n                    return 'Við bíðum eftir að vinur þinn byrji upptökuna.';\n                case (status = RecordingState.RECORDING):\n                    return 'Upptaka í gangi, vinsamlegast ekki loka glugganum.';\n                case (status = RecordingState.RECORDING_REQUESTED):\n                    return 'Upptakan er að hefjast.';\n                default:\n                    return '';\n            }\n        }\n    };\n\n    const statusMessage = getStatusMessage(hasRecording, recordingState);\n\n    return (\n        <MessagesContainer\n            red={hasRecording || recordingState === RecordingState.RECORDING}\n        >\n            {statusMessage}\n        </MessagesContainer>\n    );\n};\n\nexport default StatusMessages;\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport ReactModal from 'react-modal';\n\nReactModal.setAppElement('body');\n\ninterface ModalProps extends ReactModal.Props {\n    className?: string;\n}\n\nconst ReactModalAdapter: React.SFC<ModalProps> = ({\n    className,\n    ...props\n}: ModalProps) => {\n    const contentClassName = `${className}__Content`;\n    const overlayClassName = `${className}__Overlay`;\n    return (\n        <ReactModal\n            closeTimeoutMS={250}\n            portalClassName={className}\n            className={contentClassName}\n            overlayClassName={overlayClassName}\n            {...props}\n        />\n    );\n};\n\nexport const Modal = styled(ReactModalAdapter)`\n    &__Overlay {\n        position: fixed;\n        top: 0px;\n        left: 0px;\n        width: 100%;\n        height: 100%;\n        transition: opacity 0.25s ease-in-out;\n        display: table;\n        overflow-y: auto;\n        background: rgba(0, 0, 0, 0.8);\n        opacity: 0;\n\n        &.ReactModal__Overlay--after-open {\n            opacity: 1;\n        }\n\n        &.ReactModal__Overlay--before-close {\n            opacity: 0;\n        }\n    }\n\n    &__Content {\n        position: static !important;\n        display: table-cell;\n        vertical-align: middle;\n        pointer-events: none;\n        border: none !important;\n        width: 100%;\n\n        & .inner {\n            position: relative;\n            margin: 0 auto;\n            box-sizing: border-box;\n            padding: 2rem;\n            max-width: 40rem;\n            min-height: auto;\n            width: 100%;\n            text-align: center;\n            background: white;\n            pointer-events: all;\n            box-shadow: 0 2px 44px 0 color-mod(#0043a0 alpha(50%));\n        }\n    }\n`;\n\nexport default Modal;\n","import * as React from 'react';\nimport Modal from './styles';\n\ninterface Props {\n    children?: React.ReactNode;\n    onRequestClose?: (event?: React.MouseEvent | React.KeyboardEvent) => any;\n    shouldReturnFocusAfterClose?: boolean;\n    isOpen: boolean;\n    clearBackground?: boolean;\n}\n\nexport default class DefaultModal extends React.Component<Props> {\n    render() {\n        const { children } = this.props;\n\n        return (\n            <Modal {...this.props}>\n                <div className=\"inner\">{children}</div>\n            </Modal>\n        );\n    }\n}\n","import * as React from 'react';\nimport Modal from '../ui/modal/modal';\nimport ReactModal from 'react-modal';\nimport styled from 'styled-components';\nimport { Button } from './controls';\n\nReactModal.setAppElement('body');\n\nconst Content = styled.div``;\n\nconst Title = styled.h2`\n    text-align: center;\n    margin-top: 0rem;\n    margin-bottom: 2rem;\n`;\n\nconst Text = styled.div`\n    width: 100%;\n    text-align: center;\n    margin-bottom: 2rem;\n`;\n\nconst RemoveLink = styled.button`\n    display: inline-block;\n    cursor: pointer;\n    text-decoration: underline;\n    font-size: 1rem;\n    margin-top: 1rem;\n    border: none;\n    background-color: white;\n\n    &: hover {\n        color: red;\n        font-weight: bold;\n    }\n`;\n\nconst ButtonsContainer = styled.div`\n    display: grid;\n    width: 100%;\n    grid-template-columns: 1fr 1fr;\n    gap: 3rem;\n`;\n\ninterface WarningModalProps {\n    onRemove: () => void;\n    isOpen: boolean;\n    onClose: () => void;\n    onSubmit: () => void;\n}\n\ntype Props = WarningModalProps;\n\nexport class RemoveWarningModal extends React.Component<Props> {\n    onRemove = () => {\n        const { onRemove, onClose } = this.props;\n        onRemove();\n        onClose();\n    };\n\n    render() {\n        const { isOpen, onClose, onSubmit } = this.props;\n        return (\n            <Modal isOpen={isOpen} onRequestClose={onClose}>\n                <Content>\n                    <Title>Það er ekki búið að senda inn upptökuna</Title>\n                    <Text>\n                        Við viljum allar upptökur, stuttar eða langar. Viltu\n                        samt eyða upptökunni?\n                    </Text>\n                    <ButtonsContainer>\n                        <Button onClick={onClose}>Til baka</Button>\n                        <Button green onClick={onSubmit}>\n                            Nei, senda inn\n                        </Button>\n                    </ButtonsContainer>\n                    <RemoveLink onClick={this.onRemove}>\n                        Já, eyða upptökunni\n                    </RemoveLink>\n                </Content>\n            </Modal>\n        );\n    }\n}\n","import axios, { AxiosResponse, AxiosError } from 'axios';\nimport { AudioChunk, AudioInfo } from '../types/audio';\nimport { UserDemographics } from '../types/user';\nimport { SessionMetadata } from '../types/sessions';\nimport { v4 as uuid } from 'uuid';\n\nexport const downloadSession = async (id: string): Promise<any> => {\n    const endpointurl = getApiUrl('api/sessions/' + id);\n    window.location.replace(endpointurl);\n};\n\nexport const getSessions = async (\n    partial?: boolean\n): Promise<SessionMetadata[]> => {\n    const url = getApiUrl(\n        'api/sessions' + (partial ? '?partial=' + partial : '')\n    );\n\n    return axios({\n        method: 'GET',\n        url: url,\n    })\n        .then((response: AxiosResponse) => {\n            return response.data;\n        })\n        .catch((error: AxiosError) => {\n            console.error(error.message);\n            return Promise.reject(error.code);\n        });\n};\n\nexport const uploadClip = async (\n    clip: AudioInfo,\n    demographics: UserDemographics\n): Promise<void> => {\n    const url = getApiUrl('api/clip');\n\n    const { blob } = clip;\n    if (!blob) {\n        return Promise.reject();\n    }\n\n    const id = clip.id || uuid(); // Generate new id as fallback\n\n    const jsonString = JSON.stringify({\n        age: demographics.age,\n        duration_seconds: clip.duration,\n        gender: demographics.gender,\n        sample_rate: clip.sampleRate,\n        session_id: id.replace(/_client_[a|b]/, ''),\n        reference: demographics.reference,\n    });\n\n    const metadata = new Blob([jsonString], {\n        type: 'text/plain',\n    });\n\n    const formData: FormData = new FormData();\n    formData.append('audio', blob as Blob);\n    formData.append('metadata', metadata);\n\n    const chunk_id: string = numberToPaddedString(clip.chunkCount);\n\n    return axios({\n        method: 'POST',\n        url: url,\n        headers: {\n            'Content-Type': 'multipart/form-data',\n            id,\n            chunk_id,\n        },\n        data: formData,\n    })\n        .then((response: AxiosResponse) => {\n            return response.data;\n        })\n        .catch((error: AxiosError) => {\n            console.error(error.message);\n            return Promise.reject(error.code);\n        });\n};\n\n/**\n * Uploads an audio chunk to the server\n * @param chunk the audio chunk to upload\n * @param demographics optional demographics parameter\n * @param isMissing set to true if the chunk is missing on the server\n */\nexport const uploadChunk = async (\n    chunk: AudioChunk,\n    demographics?: UserDemographics,\n    isMissing: boolean = false\n): Promise<void> => {\n    const url = getApiUrl('api/chunk');\n\n    const id = chunk.id || uuid(); // Generate new id as fallback\n\n    const formData: FormData = new FormData();\n    formData.append('audio', chunk.blob as Blob);\n\n    if (demographics) {\n        const jsonString = JSON.stringify({\n            age: demographics.age,\n            gender: demographics.gender,\n            session_id: id.replace(/_client_[a|b]/, ''),\n            reference: demographics.reference,\n        });\n\n        const metadata = new Blob([jsonString], {\n            type: 'text/plain',\n        });\n\n        formData.append('metadata', metadata);\n    }\n\n    const chunkId: string = numberToPaddedString(chunk.chunkNumber);\n\n    return axios({\n        method: 'POST',\n        url: url,\n        headers: {\n            'Content-Type': 'multipart/form-data',\n            id,\n            chunk_id: chunkId,\n            is_missing: isMissing,\n        },\n        data: formData,\n    })\n        .then((response: AxiosResponse) => {\n            return response.data;\n        })\n        .catch((error: AxiosError) => {\n            console.error(error.message);\n            return Promise.reject(error.code);\n        });\n};\n\n/**\n * Sends a request to the server to verify that\n * the server and clients have matching chunks\n * @param id the session id to verify\n * @param chunkCount the number of chunks on the client\n * @returns a vector containing the ids of the missing chunks on the server.\n * An empty array if all chunks exists.\n */\nexport const verifyChunks = async (\n    id: string,\n    chunkCount: number\n): Promise<number[]> => {\n    const apiUrl = getApiUrl('api/verifyChunks');\n\n    try {\n        const resp = await axios({\n            method: 'GET',\n            url: apiUrl,\n            headers: {\n                id,\n                chunk_count: chunkCount,\n            },\n        });\n        return Promise.resolve(resp.data);\n    } catch (error) {\n        console.error(error.message);\n        return Promise.reject(error.code);\n    }\n};\n\n/**\n * Posts the recording finished command to the server\n * together with the final metadata.\n * The server will then upload the recording to the s3 bucket.\n * @param recording the recording that is finished\n * @param demographics the demographics of the recording\n * @returns Success if successful an error code or message otherwise\n */\nexport const recordingFinished = async (\n    recording: AudioInfo,\n    demographics: UserDemographics\n) => {\n    const apiUrl = getApiUrl('api/recordingFinished');\n\n    const id = recording.id || uuid(); // Generate new id as fallback\n\n    const jsonString = JSON.stringify({\n        age: demographics.age,\n        duration_seconds: recording.duration,\n        gender: demographics.gender,\n        sample_rate: recording.sampleRate,\n        session_id: id.replace(/_client_[a|b]/, ''),\n        reference: demographics.reference,\n    });\n\n    const metadata = new Blob([jsonString], {\n        type: 'text/plain',\n    });\n\n    const formData: FormData = new FormData();\n    formData.append('metadata', metadata);\n\n    try {\n        const resp = await axios({\n            method: 'POST',\n            url: apiUrl,\n            headers: {\n                'Content-Type': 'multipart/form-data',\n                id,\n            },\n            data: formData,\n        });\n        return Promise.resolve(resp.data);\n    } catch (error) {\n        console.error(error.message);\n        return Promise.reject(error.code);\n    }\n};\n\nconst getApiUrl = (apiPath: string = 'api') => {\n    let pathname = window.location.origin;\n    if (pathname.includes('localhost')) {\n        pathname = pathname.replace('3000', '3030');\n    }\n\n    return `${pathname}/${apiPath}`;\n};\n\nconst numberToPaddedString = (toPad: number): string => {\n    const numberStringSize = 4;\n    return toPad.toString().padStart(numberStringSize, '0');\n};\n\n/**\n * Sends a request to the server to delete the recording\n * @param id the id of the recording to delete\n * @returns true if deleted false if not\n */\nexport const removeRecording = async (id: string) => {\n    const apiUrl = getApiUrl('api/delete');\n\n    try {\n        const resp = await axios({\n            method: 'DELETE',\n            url: apiUrl,\n            headers: {\n                id,\n            },\n        });\n        return Promise.resolve(resp.data);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n};\n\n/**\n * Uploads a chunk that the server is missing\n * @param chunk the audio chunk to upload\n */\nexport const uploadMissingChunk = async (chunk: AudioChunk): Promise<void> => {\n    return await uploadChunk(chunk, undefined, true);\n};\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport { AudioChunk, AudioInfo } from '../../types/audio';\nimport { UserClient } from '../../types/user';\n\nimport Chat, {\n    ChatState,\n    RecordingState,\n    VoiceState,\n} from '../../controllers/chat';\nimport MicIcon from '../ui/icons/mic';\nimport Controls from './controls';\nimport Recordings from './recordings';\nimport TalkingPoints from './talkingpoints';\nimport { ToastContainer, toast, Slide } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport StatusMessages from './status-messages';\n\nimport { RemoveWarningModal } from './remove-warning-modal';\n\nimport * as api from '../../services/api';\n\nconst ChatroomContainer = styled.div`\n    position: relative;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 1rem;\n`;\n\nconst CounterContainer = styled.div<{ active: boolean }>`\n    position: absolute;\n    z-index: 10;\n    left: 50%;\n    margin-left: -6rem;\n    top: -5rem;\n    opacity: 0.7;\n    background-color: black;\n    border-radius: 50%;\n    height: 12rem;\n    width: 12rem;\n    color: white;\n    font-size: 8rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transform: scale(${({ active }) => (active ? 1 : 0)});\n    transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nconst UserList = styled.div`\n    width: 100%;\n    margin: 0 auto;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid #cccccc;\n`;\n\nconst ListItem = styled.div<{ i?: number }>`\n    width: 100%;\n    display: grid;\n    grid-template-columns: auto 3rem;\n    background-color: ${({ i }) => (i % 2 === 0 ? '#EBEBEB' : 'white')};\n\n    gap: 1rem;\n\n    & > * {\n        padding: 0.5rem;\n    }\n\n    & > :not(:first-child) {\n        justify-self: center;\n    }\n`;\n\nconst ListHeader = styled(ListItem)`\n    background-color: white;\n    height: 3rem;\n    align-items: center;\n\n    & span {\n        color: gray;\n    }\n`;\n\nconst HeaderItem = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    & :nth-child(2) {\n        & span {\n            color: black;\n            font-weight: 700;\n            margin-left: 0.3rem;\n            margin-right: 1rem;\n        }\n    }\n`;\n\nconst Audio = styled.audio`\n    display: none;\n`;\n\nconst Indicator = styled.div<{ connected: boolean }>`\n    align-self: center;\n    height: 0.5rem;\n    width: 0.5rem;\n    border-radius: 50%;\n    background-color: ${({ connected }) => (connected ? '#60C197' : 'gray')};\n`;\n\nconst ShareButton = styled.button<{ soloRecord: boolean }>`\n    align-self: center;\n    background-color: ${({ soloRecord }) => (soloRecord ? 'red' : '#60C197')};\n    color: white;\n    transform: ${({ soloRecord }) => (soloRecord ? 'translateY(2px)' : '')};\n    display: flex;\n    justify-content: center;\n    user-select: none;\n    width: 100%;\n    border: none;\n\n    cursor: pointer;\n\n    & span {\n        font-weight: 600;\n        font-size: 1.2rem;\n        padding: 1rem 2rem;\n    }\n\n    :active {\n        transform: translateY(2px);\n    }\n\n    @media (max-width: 1024px) {\n        grid-column: 1;\n        max-width: 100%;\n    }\n`;\n\n// Overwrite ToastContainer to use our global styles\nconst StyledToastContainer = styled(ToastContainer).attrs({\n    className: 'toast-container',\n    toastClassName: 'toast',\n    bodyClassName: 'body',\n    progressClassName: 'progress',\n})`\n    .toast {\n        color: white;\n        text-align: center;\n    }\n\n    .Toastify__toast {\n        background-color: #60c197;\n    }\n\n    .Toastify__toast--warning {\n        background-color: #f1c40f;\n    }\n\n    .Toastify__toast--error {\n        background-color: #ff4f5e;\n    }\n`;\n\nconst ErrorContainer = styled.div`\n    background-color: #ff4f5e;\n    padding: 1rem;\n    margin-bottom: 0.5rem;\n`;\n\nconst ErrorMessage = styled.div`\n    font-size: 1.2rem;\n    color: white;\n    margin: 0 1rem;\n`;\n\ninterface ChatroomProps {\n    onUpload: (recording: AudioInfo) => void;\n    onChunkReceived: (chunk: AudioChunk) => void;\n    userClient: UserClient;\n}\n\ninterface State {\n    chatState: ChatState;\n    countdown: number;\n    recordingState: RecordingState;\n    voiceState: VoiceState;\n    clients: UserClient[];\n    recording?: AudioInfo;\n    isChatroomOwner: boolean;\n    showModal: boolean;\n    error: string;\n    soloRecord: boolean;\n}\n\ninterface RouteProp {\n    roomId: string;\n}\n\ntype Props = ChatroomProps & RouteComponentProps<RouteProp>;\n\nclass Chatroom extends React.Component<Props, State> {\n    private audioRef: React.RefObject<HTMLAudioElement>;\n    private chat: Chat;\n    private interval?: any;\n    private timeout?: any;\n    private clientsRequired = 2;\n    private shareButtonRef;\n    // fake video too keep screen on\n    private video = document.createElement('video');\n\n    constructor(props: Props) {\n        super(props);\n        const { userClient } = props;\n        this.state = {\n            chatState: ChatState.DISCONNECTED,\n            countdown: 3,\n            recordingState: RecordingState.NOT_RECORDING,\n            voiceState: VoiceState.VOICE_DISCONNECTED,\n            clients: [userClient],\n            recording: undefined,\n            isChatroomOwner: true,\n            showModal: false,\n            error: undefined,\n            soloRecord: false,\n        };\n\n        this.audioRef = React.createRef<HTMLAudioElement>();\n        this.shareButtonRef = React.createRef<HTMLElement>();\n    }\n\n    componentDidMount = async () => {\n        const url = this.constructSocketUrl();\n        const { userClient } = this.props;\n        this.chat = new Chat(url, userClient);\n        this.chat.onClientsChanged = this.handleClientsChanged;\n        this.chat.onIsOwnerChanged = this.handleOwnerChanged;\n        this.chat.onRecordingStateChanged = this.handleRecordingStateChanged;\n        this.chat.onChatStateChanged = this.handleChatStateChanged;\n        this.chat.onVoiceStateChanged = (voiceState) =>\n            this.handleVoiceStateChanged(voiceState);\n        this.chat.onError = this.handleChatError;\n\n        this.chat.onAudioTrack = (stream: MediaStream) => {\n            const { current: audio } = this.audioRef;\n            if (audio) {\n                audio.srcObject = stream;\n            }\n        };\n\n        this.chat.onRecordingStopped = (recording: AudioInfo) => {\n            this.setState({ recording });\n        };\n\n        this.chat.onChunkReceived = this.handleOnChunkReceived;\n\n        this.chat.onUpload = this.handleOnUpload;\n\n        this.setState({ isChatroomOwner: this.chat.isOwner() });\n        window.addEventListener('beforeunload', this.alertUser);\n        this.addPushState();\n        window.addEventListener('popstate', this.alertUserBack);\n\n        // Fake video setup\n        this.setupFakeVideo();\n\n        // Fake video to keep screen on\n        document.body.addEventListener('touchend', this.playFakeVideo);\n    };\n\n    componentWillUnmount = async () => {\n        //Unsubscribe from state changing functions\n        this.chat.onChatStateChanged = () => {};\n        window.removeEventListener('beforeunload', this.alertUser);\n        window.removeEventListener('popstate', this.alertUserBack);\n    };\n\n    /**\n     * This setups the fake video element and adds it to the document.\n     * This allows us to prevent mobile devices from turning their screens off.\n     */\n    setupFakeVideo = () => {\n        this.video.setAttribute('loop', '');\n        this.video.setAttribute('style', 'position:fixed;');\n\n        const base64 = (mimeType: string, base64: string) => {\n            return 'data:' + mimeType + ';base64,' + base64;\n        };\n\n        // Help function to add video and audio to the video element\n        const addSourceToVideo = (\n            element: HTMLVideoElement,\n            type: string,\n            dataURI: string\n        ) => {\n            const source = document.createElement('source');\n            source.src = dataURI;\n            source.type = 'video/' + type;\n            element.appendChild(source);\n        };\n\n        // Add fake video and audio\n        addSourceToVideo(\n            this.video,\n            'webm',\n            base64('video/webm', 'cmFuZG9tVmlkZW9VUkk=')\n        );\n        addSourceToVideo(\n            this.video,\n            'mp4',\n            base64('video/mp4', 'cmFuZG9tQXVkaW9VUkk=')\n        );\n\n        // Add the fake video to the document\n        document.body.appendChild(this.video);\n    };\n\n    playFakeVideo = () => {\n        this.video.play();\n        document.body.removeEventListener('touchend', this.playFakeVideo);\n        console.log('started playing fake video');\n    };\n\n    handleOnChunkReceived = (chunk: AudioChunk) => {\n        // Move api call here?\n        const { onChunkReceived } = this.props;\n        onChunkReceived(chunk);\n    };\n\n    // Alert user when recording is not sent in\n    // when they try to leave the site with new ur or close window/tab\n    // We are unable to customize this and most browsers\n    // will block any attempts to do so\n    alertUser = (e) => {\n        const { recording, recordingState } = this.state;\n        e.preventDefault();\n        if (recording || recordingState === RecordingState.RECORDING) {\n            e.returnValue = '';\n        }\n    };\n\n    // Alert user when recording is not sent in\n    // when they use the back button.\n    // Prevent user leaving during a recording.\n    // Ask user to stay when recording exists.\n    alertUserBack = (e) => {\n        const { recording, recordingState } = this.state;\n        const { history } = this.props;\n\n        e.preventDefault();\n\n        if (recordingState === RecordingState.RECORDING) {\n            this.addPushState();\n            alert('Þú ert enn að taka upp!');\n            e.returnValue = '';\n        } else if (recording) {\n            const confirmLeave = window.confirm(\n                'Þú ert um það bil að fara án þess að senda upptökuna þína.'\n            );\n            if (!confirmLeave) {\n                this.addPushState();\n                e.returnValue = '';\n            } else {\n                history.replace('/');\n            }\n        }\n    };\n\n    createToast(toastMessage) {\n        toast.error(toastMessage, { toastId: 'toast-mic' });\n    }\n\n    handleClientsChanged = (clients: UserClient[]) => {\n        this.setState({ clients });\n    };\n\n    handleOwnerChanged = (isChatroomOwner: boolean) => {\n        this.setState({ isChatroomOwner });\n    };\n\n    addPushState = () => {\n        // Push the this state for alert to have a chance to pop up.\n        window.history.pushState(\n            { name: 'browserBack' },\n            'on browser back click',\n            window.location.href\n        );\n    };\n\n    removeRecording = async () => {\n        const { recording } = this.state;\n        await api.removeRecording(recording.id);\n        this.setState({ recording: undefined });\n    };\n\n    isCountingDown = () => this.interval && this.timeout;\n\n    startCountdown = () => {\n        if (!this.isCountingDown()) {\n            this.interval = setInterval(() => {\n                this.setState({\n                    countdown:\n                        this.state.countdown === 1\n                            ? 1\n                            : this.state.countdown - 1,\n                });\n            }, 1000);\n\n            this.timeout = setTimeout(() => {\n                this.chat.startRecording();\n                this.removeCountdown();\n            }, 3000);\n        }\n    };\n\n    removeCountdown = () => {\n        clearInterval(this.interval);\n        clearTimeout(this.timeout);\n        this.interval = undefined;\n        this.timeout = undefined;\n        setTimeout(() => this.setState({ countdown: 3 }), 300);\n    };\n\n    handleRecordingStateChanged = (recordingState: RecordingState) => {\n        this.setState({ recordingState });\n        if (this.isRecordingAllowed(recordingState)) {\n            // TODO: check to if recording is supported\n            this.startCountdown();\n            if (this.state.recording) {\n                this.setState({ recording: undefined });\n            }\n        } else if (\n            recordingState === RecordingState.RECORDING_REQUESTED &&\n            this.state.clients.length != this.clientsRequired\n        ) {\n            recordingState = RecordingState.NOT_RECORDING;\n            this.setState({ recordingState });\n            toast.error(\n                'Það þarf tvo til að taka upp samtal. Deildu þessum hlekk með einhverum öðrum.',\n                {\n                    toastId: 'toast-two-ppl',\n                }\n            );\n            this.setState({ soloRecord: true });\n            this.shareButtonRef.current.focus();\n            this.shareButtonRef.current.scrollIntoView(true);\n        } else if (\n            recordingState === RecordingState.RECORDING_REQUESTED &&\n            !this.state.clients.every((c) => c.voice)\n        ) {\n            recordingState = RecordingState.NOT_RECORDING;\n            this.setState({ recordingState });\n            toast.error('Óvirkur hljóðnemi kom í veg fyrir upptöku', {\n                toastId: 'toast-record',\n            });\n        } else {\n            this.removeCountdown();\n        }\n    };\n\n    isRecordingAllowed = (recordingState: RecordingState) => {\n        return (\n            recordingState === RecordingState.RECORDING_REQUESTED &&\n            this.state.clients.every((c) => c.voice) &&\n            this.state.clients.length == this.clientsRequired\n        );\n    };\n\n    handleChatStateChanged = (chatState: ChatState) => {\n        this.setState({ chatState });\n        if (chatState === ChatState.CONNECTED) {\n            console.log('Chat is fully initialized');\n            toast('Spjallsvæði er tilbúið', { toastId: 'toast-chat' });\n        }\n    };\n\n    handleVoiceStateChanged = (voiceState: VoiceState) => {\n        this.setState({ voiceState });\n        console.log('Mic state is ' + voiceState.toLowerCase());\n    };\n\n    constructSocketUrl = (): string => {\n        // Get room id\n        const {\n            match: {\n                params: { roomId },\n            },\n        } = this.props;\n\n        // Build href\n        const href =\n            window.location.protocol +\n            '//' +\n            window.location.host +\n            '/' +\n            roomId;\n\n        // Destructure pathname\n        const parts = href.split('/');\n\n        // Insert /ws/\n        parts.splice(parts.length - 1, 0, 'ws');\n        let url = parts.join('/');\n\n        // For dev server\n        if (url.includes('localhost')) {\n            url = url.replace('3000', '3030');\n        }\n\n        // Socket endpoint\n        const endpoint = url.replace('http', 'ws');\n\n        // Get client id\n        const {\n            userClient: { id },\n        } = this.props;\n\n        // Concat client id\n        return endpoint.concat(`/${id}`);\n    };\n\n    onSubmit = async () => {\n        await this.chat.uploadOther();\n\n        await this.submit();\n    };\n\n    // The function that is called when the\n    // chat receives the Upload command from the web socket\n    handleOnUpload = async () => {\n        this.submit();\n    };\n\n    submit = async () => {\n        const { recording } = this.state;\n        const { onUpload } = this.props;\n\n        // Verify chunks\n        await this.verifyChunks();\n\n        // Send complete signal and upload\n        if (recording.id) {\n            await onUpload(recording);\n            this.chat.disconnect();\n        }\n    };\n\n    /**\n     * Sends the verify request to the server.\n     * Verifies that the server has all the chunks\n     * existing on the client and sends the missing chunks\n     * if not.\n     */\n    verifyChunks = async () => {\n        const { recording } = this.state;\n\n        const missingChunks = await api.verifyChunks(\n            recording.id,\n            recording.chunkCount\n        );\n\n        if (missingChunks.length !== 0) {\n            const chunks = this.chat.getMissingChunks(missingChunks);\n            for (const chunk of chunks) {\n                await api.uploadMissingChunk(chunk);\n            }\n        }\n    };\n\n    copyToClipBoard = async () => {\n        this.setState({ soloRecord: false });\n        const toastId = 'toast-copied';\n        try {\n            toast.dismiss(toastId);\n            await navigator.clipboard.writeText(window.location.href);\n            toast('Tengill afritaður', {\n                toastId, // prevent duplicates\n            });\n        } catch (err) {\n            toast.error('Villa hefur komið upp. Afritaðu tengilinn handvirkt', {\n                toastId: 'toast-error',\n            });\n        }\n    };\n\n    showWarningModal = () => {\n        this.setState({ showModal: true });\n    };\n\n    closeWarningModal = () => {\n        this.setState({ showModal: false });\n    };\n\n    handleChatError = (message: string) => {\n        this.setState({ error: message });\n    };\n\n    render() {\n        const {\n            clients,\n            countdown,\n            chatState,\n            recordingState,\n            recording,\n            voiceState,\n            showModal,\n            isChatroomOwner,\n            error,\n            soloRecord,\n        } = this.state;\n\n        const {\n            match: {\n                params: { roomId },\n            },\n        } = this.props;\n\n        if (\n            chatState === ChatState.DISCONNECTED &&\n            voiceState === VoiceState.VOICE_DISCONNECTED\n        ) {\n            toast.warn('Bið gangsetningar hljóðnema', {\n                toastId: 'toast-chat-init',\n            });\n        }\n        return (\n            <ChatroomContainer>\n                <CounterContainer\n                    active={this.isRecordingAllowed(recordingState)}\n                >\n                    {countdown}\n                </CounterContainer>\n                {recordingState !== RecordingState.RECORDING && (\n                    <ShareButton\n                        onClick={this.copyToClipBoard}\n                        ref={this.shareButtonRef}\n                        soloRecord={soloRecord}\n                    >\n                        <span>\n                            Smelltu til að afrita hlekkinn og deildu með vini\n                        </span>\n                    </ShareButton>\n                )}\n                <UserList>\n                    <ListHeader>\n                        <HeaderItem>\n                            <span>Viðmælandi</span>\n                            <span>\n                                Spjallkóði: <span>{roomId}</span>\n                            </span>\n                        </HeaderItem>\n                        <MicIcon height={30} width={30} />\n                    </ListHeader>\n                    {clients.map((client: UserClient, i: number) => (\n                        <ListItem i={i} key={i}>\n                            <span>{client.username}</span>\n                            <Indicator connected={client.voice} />\n                        </ListItem>\n                    ))}\n                </UserList>\n                <Recordings\n                    chat={this.chat}\n                    recording={recording}\n                    recordingState={recordingState}\n                />\n                {!isChatroomOwner && !error && (\n                    <StatusMessages\n                        hasRecording={!!recording}\n                        recordingState={recordingState}\n                    />\n                )}\n                {error && (\n                    <ErrorContainer>\n                        <ErrorMessage>\n                            Villa kom upp við tengingu. Vinsamlegast farðu aftur\n                            á heimasíðuna og reyndu aftur.\n                        </ErrorMessage>\n                    </ErrorContainer>\n                )}\n                <Controls\n                    chat={this.chat}\n                    onRemove={this.showWarningModal}\n                    onSubmit={this.onSubmit}\n                    recording={recording}\n                    recordingState={recordingState}\n                    voiceState={voiceState}\n                    chatRoomOwner={isChatroomOwner}\n                    createToast={this.createToast}\n                />\n                <Audio autoPlay controls ref={this.audioRef} />\n                <TalkingPoints\n                    recording={recording}\n                    recordingState={recordingState}\n                />\n                <RemoveWarningModal\n                    isOpen={showModal}\n                    onRemove={this.removeRecording}\n                    onClose={this.closeWarningModal}\n                    onSubmit={this.onSubmit}\n                />\n                <StyledToastContainer\n                    position=\"bottom-center\"\n                    hideProgressBar\n                    draggable={false}\n                    pauseOnHover={false}\n                    transition={Slide}\n                />\n            </ChatroomContainer>\n        );\n    }\n}\n\nexport default withRouter(Chatroom);\n","import { Demographic } from '../types/user';\n\nexport const ages: Array<Demographic> = [\n    { id: 'unglingur', name: '18-19' },\n    { id: 'tvitugt', name: '20-29' },\n    { id: 'thritugt', name: '30-39' },\n    { id: 'fertugt', name: '40-49' },\n    { id: 'fimmtugt', name: '50-59' },\n    { id: 'sextugt', name: '60-69' },\n    { id: 'sjotugt', name: '70-79' },\n    { id: 'attraett', name: '80-89' },\n    { id: 'niraett', name: '90+' },\n];\n\nexport const genders: Array<Demographic> = [\n    { id: 'karl', name: 'Karl' },\n    { id: 'kona', name: 'Kona' },\n    { id: 'annad', name: 'Annað' },\n];\n\nexport const references: Array<Demographic> = [\n    { id: 'david', name: 'David' },\n    { id: 'judy', name: 'Judy' },\n    { id: 'ragnar', name: 'Ragnar' },\n    { id: 'safa', name: 'Safa' },\n    { id: 'smari', name: 'Smári' },\n    { id: 'staffan', name: 'Staffan' },\n    { id: 'other', name: 'Annað' },\n];\n\nexport const members: Array<Demographic> = [\n    { id: 'jon', name: 'Jón' },\n    { id: 'gthor', name: 'Gunnar Thor' },\n    { id: 'hrafn', name: 'Hrafn' },\n    { id: 'hannes', name: 'Hannes' },\n    { id: 'solafsson', name: 'Stefán Ólafsson' },\n    { id: 'benedikt', name: 'Benedikt Geir' },\n    { id: 'vidar', name: 'Viðar Pétur' },\n    { id: 'asmundur', name: 'Ásmundur' },\n    { id: 'sgunnlaugur', name: 'Stefán Gunnlaugur' },\n    { id: 'bjarni', name: 'Bjarni' },\n    { id: 'jokull', name: 'Jökull' },\n    { id: 'gpalsson', name: 'Gunnar Pálsson' },\n    { id: 'thorsteinn', name: 'Þorsteinn' },\n    { id: 'breki', name: 'Breki' },\n    { id: 'ragnarp', name: 'Ragnar' },\n    { id: 'steinthor', name: 'Steinþór' },\n    { id: 'guolin', name: 'Guolin' },\n    { id: 'helga', name: 'Helga' },\n    { id: 'other', name: 'Annað' },\n];\nexport const students: Array<Demographic> = [\n    { id: 'davido', name: 'Davíð Örn' },\n    { id: 'freyr', name: 'Freyr Luca' },\n    { id: 'gunnarh', name: 'Gunnar Hinrik' },\n    { id: 'gunnarm', name: 'Gunnar Már' },\n    { id: 'hartmann', name: 'Hartmann ' },\n    { id: 'lara', name: 'Lára Margrét Hólm' },\n    { id: 'magnus', name: 'Magnús Karl' },\n    { id: 'malfridur', name: 'Málfríður Anna' },\n    { id: 'runar', name: 'Rúnar Örn' },\n    { id: 'rannveig', name: 'Rannveig Sól ' },\n    { id: 'reynir', name: 'Reynir' },\n    { id: 'throstur', name: 'Þröstur' },\n    { id: 'other', name: 'Annað' },\n];\n","import * as React from 'react';\nimport Icon, { IconProps } from './icon';\n\nexport const DropdownArrow: React.FC<IconProps> = (props) => (\n    <Icon viewBox=\"0 0 13 9\" className=\"dropdown-arrow\" {...props}>\n        <polygon\n            id=\"down-arrow-black\"\n            points=\"11.7578125 0.75 12.5 1.5703125 6.25 8.25 0 1.5703125 0.7421875 0.75 6.25 6.609375\"\n        ></polygon>\n    </Icon>\n);\n\nexport default DropdownArrow;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\ninterface ShowMoreProps {\n    active: boolean;\n    calculate: boolean;\n    height: number;\n}\n\nconst ShowMoreContainer = styled.div<ShowMoreProps>`\n    width: 100%;\n    height: auto;\n    max-height: ${({ active, calculate, height }) =>\n        active ? (!calculate ? '100vh' : `calc(${height}px + 2rem)`) : '0rem'};\n    transition: max-height 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    overflow: hidden;\n`;\n\nconst FakeChildren = styled.div`\n    position: absolute;\n    opacity: 0;\n    pointer-events: none;\n`;\n\ninterface Props {\n    active: boolean;\n    calculate?: boolean;\n    children: React.ReactNode;\n    className?: string;\n    ref?: React.Ref<HTMLDivElement>;\n}\n\ninterface State {\n    height: number;\n}\n\nclass ShowMore extends React.Component<Props, State> {\n    private fakeChildrenRef = React.createRef<HTMLDivElement>();\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            height: 0,\n        };\n    }\n\n    componentDidMount = () => {\n        if (this.props.calculate) {\n            const height = this.fakeChildrenRef.current?.clientHeight as number;\n            this.setState({ height });\n        }\n    };\n\n    render() {\n        const { active, calculate, className, children, ref } = this.props;\n        const { height } = this.state;\n        return (\n            <React.Fragment>\n                <ShowMoreContainer\n                    active={active}\n                    calculate={!!calculate}\n                    className={className}\n                    height={height}\n                    ref={ref}\n                >\n                    {children}\n                </ShowMoreContainer>\n                {calculate && (\n                    <FakeChildren ref={this.fakeChildrenRef}>\n                        {children}\n                    </FakeChildren>\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default React.forwardRef(\n    (props: Props, ref: React.Ref<HTMLDivElement>) => (\n        <ShowMore {...props} ref={ref as any} />\n    )\n);\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport DropdownArrowIcon from '../ui/icons/dropdown-arrow';\nimport ShowMore from '../ui/animated/show-more';\nimport { recursiveMap } from '../../utilities/utils';\n\nconst InformationContainer = styled.div`\n    width: 100%;\n    border-left: 2px solid #0099ff;\n`;\n\nconst TitleContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: baseline;\n    cursor: pointer;\n    padding-left: 1rem;\n    & > * {\n        margin: 0;\n        color: #0099ff;\n    }\n`;\n\ninterface ReadMoreProps {\n    active: boolean;\n}\n\nconst ReadMoreContainer = styled(ShowMore)<ReadMoreProps>`\n    & > * {\n        padding-left: 1rem;\n        margin: 0;\n        margin-top: 0.5rem;\n    }\n`;\n\nconst Arrow = styled(DropdownArrowIcon)<ReadMoreProps>`\n    margin-left: 1rem;\n    transform-origin: bottom-right;\n    transform: rotate(${({ active }) => (active ? '180deg' : '0deg')});\n    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\ninterface Props {\n    children?: React.ReactNode;\n    className?: string;\n    ref?: React.Ref<HTMLDivElement>;\n    title: string;\n}\n\nexport const Information: React.FC<Props> = ({\n    children,\n    className,\n    ref,\n    title,\n}) => {\n    const [readMore, setReadMore] = React.useState(false);\n\n    const handleClick = () => {\n        setReadMore(!readMore);\n    };\n\n    const hideFromTabbing = (child: any) => {\n        return React.cloneElement(child, { tabIndex: -1 });\n    };\n\n    return (\n        <InformationContainer className={className} ref={ref}>\n            <TitleContainer onClick={handleClick}>\n                <h5>{title}</h5>\n                <Arrow\n                    height={15}\n                    width={15}\n                    active={readMore}\n                    fill={'#0099ff'}\n                />\n            </TitleContainer>\n            <ReadMoreContainer active={readMore}>\n                {readMore ? children : recursiveMap(children, hideFromTabbing)}\n            </ReadMoreContainer>\n        </InformationContainer>\n    );\n};\n\nexport default React.forwardRef(\n    (props: Props, ref: React.Ref<HTMLDivElement>) => (\n        <Information {...props} ref={ref as any} />\n    )\n);\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport DropdownArrowIcon from '../icons/dropdown-arrow';\n\ninterface DropdownProps {\n    visible: boolean;\n}\n\nconst DropdownButtonContainer = styled.div<DropdownProps>`\n    width: 100%;\n    position: relative;\n    display: inline-block;\n    border: 2px solid ${({ visible }) => (visible ? 'black' : '#e2e2e2')};\n    & :active,\n    :focus {\n        outline: none;\n    }\n`;\n\nconst DropdownSelect = styled.select`\n    width: 100%;\n    height: 100%;\n    border: none;\n    appearance: none;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    & :active,\n    :focus {\n        outline: none;\n    }\n    padding: 1rem;\n    cursor: pointer;\n`;\n\nconst DropdownItem = styled.option`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.2rem;\n    padding: 1rem;\n    cursor: pointer;\n`;\n\nconst Label = styled.span`\n    position: absolute;\n    color: gray;\n    font-size: 0.8rem;\n    top: -0.6rem;\n    background-color: white;\n    padding: 0 0.3rem;\n    margin-left: 0.3rem;\n`;\n\nconst Arrow = styled(DropdownArrowIcon)`\n    position: absolute;\n    right: 1rem;\n    top: 0.5rem;\n    margin-top: 15px;\n    pointer-events: none;\n`;\n\ninterface Props {\n    content: string[];\n    onSelect: (value: string) => void;\n    label: string;\n    selected: string;\n}\n\ninterface State {\n    maxWidth: number;\n    visible: boolean;\n}\n\nexport default class DropdownButton extends React.Component<Props, State> {\n    private selectRef = React.createRef<HTMLSelectElement>();\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            maxWidth: 0,\n            visible: false,\n        };\n    }\n\n    componentDidMount = () => {\n        this.selectRef.current?.addEventListener('focusout', this.onFocusOut);\n        this.selectRef.current?.addEventListener('focusin', this.onFocusIn);\n    };\n\n    componentWillUnmount = () => {\n        this.selectRef.current?.removeEventListener(\n            'focusout',\n            this.onFocusOut\n        );\n    };\n\n    onFocusOut = () => {\n        this.setState({ visible: false });\n    };\n\n    onFocusIn = () => {\n        this.setState({ visible: true });\n    };\n\n    onSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        this.props.onSelect(e.currentTarget.value);\n        this.setState({ visible: false });\n    };\n\n    select = () => {\n        this.setState({ visible: true });\n    };\n\n    render() {\n        const { content, label, selected } = this.props;\n        const { visible } = this.state;\n\n        return (\n            <DropdownButtonContainer visible={visible} onClick={this.select}>\n                <Label>{label}</Label>\n                <Arrow height={15} width={15} />\n                <DropdownSelect\n                    ref={this.selectRef}\n                    onChange={this.onSelect}\n                    value={selected}\n                >\n                    <DropdownItem value={''} />\n                    {content.map((val: string, i: number) => (\n                        <DropdownItem key={i} value={val}>\n                            {val}\n                        </DropdownItem>\n                    ))}\n                </DropdownSelect>\n            </DropdownButtonContainer>\n        );\n    }\n}\n","import * as React from 'react';\nimport Icon, { IconProps } from './icon';\n\nexport const CheckMark: React.FC<IconProps> = (props) => (\n    <Icon viewBox=\"0 0 492 492\" className=\"check-mark\" {...props}>\n        <path\n            d=\"M484.128,104.478l-16.116-16.116c-5.064-5.068-11.816-7.856-19.024-7.856c-7.208,0-13.964,2.788-19.028,7.856\n\t\t\tL203.508,314.81L62.024,173.322c-5.064-5.06-11.82-7.852-19.028-7.852c-7.204,0-13.956,2.792-19.024,7.852l-16.12,16.112\n\t\t\tC2.784,194.51,0,201.27,0,208.47c0,7.204,2.784,13.96,7.852,19.028l159.744,159.736c0.212,0.3,0.436,0.58,0.696,0.836\n\t\t\tl16.12,15.852c5.064,5.048,11.82,7.572,19.084,7.572h0.084c7.212,0,13.968-2.524,19.024-7.572l16.124-15.992\n\t\t\tc0.26-0.256,0.48-0.468,0.612-0.684l244.784-244.76C494.624,132.01,494.624,114.966,484.128,104.478z\"\n        />\n    </Icon>\n);\n\nexport default CheckMark;\n","import * as React from 'react';\nimport { useLayoutEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport CheckMarkIcon from '../icons/check-mark';\n\ninterface CheckProps {\n    active: boolean;\n}\n\nconst CheckboxContainer = styled.div<CheckProps>`\n    height: 2rem;\n    width: 2rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 0.2rem;\n    border: 2px solid ${({ active }) => (active ? 'black' : '#e2e2e2')};\n\n    &:hover {\n        border: 2px solid black;\n    }\n\n    &:focus {\n        outline: none;\n        border: 2px solid black;\n    }\n`;\n\nconst CheckboxInput = styled.input.attrs({ type: 'checkbox' })`\n    appearance: none;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n\n    & :active,\n    :focus {\n        outline: none;\n    }\n`;\n\nconst CheckMark = styled(CheckMarkIcon)<CheckProps>`\n    display: ${({ active }) => (active ? 'initial' : 'none')};\n`;\n\ninterface Props {\n    checked: boolean;\n    onChange: () => void;\n}\n\nexport const Checkbox: React.FunctionComponent<Props> = ({\n    checked,\n    onChange,\n}) => {\n    const [focus, setFocus] = useState(false);\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    useLayoutEffect(() => {\n        const { current } = inputRef;\n\n        if (current !== null) {\n            current.addEventListener('focusin', onFocusIn);\n            current.addEventListener('focusout', onFocusOut);\n\n            return () => {\n                current.removeEventListener('focusin', onFocusIn);\n                current.removeEventListener('focusout', onFocusOut);\n            };\n        }\n    }, []);\n\n    const onFocusIn = () => {\n        setFocus(true);\n    };\n\n    const onFocusOut = () => {\n        setFocus(false);\n    };\n\n    return (\n        <CheckboxContainer active={focus} onClick={onChange}>\n            <CheckboxInput ref={inputRef} />\n            <CheckMark active={checked} />\n        </CheckboxContainer>\n    );\n};\n\nexport default Checkbox;\n","import * as React from 'react';\n\ntype Props = React.AnchorHTMLAttributes<HTMLAnchorElement>;\n\nconst NewTabLink: React.FC<Props> = (props: Props) => {\n    return (\n        <a\n            {...props}\n            href={props.href}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n        >\n            {props.children}\n        </a>\n    );\n};\n\nexport default NewTabLink;\n","export const unsupportedText = {\n    unsupportedBrowserHeading: 'Ó, nei!',\n    unsupportedBrowserContent:\n        'Þú þarft að nota Chrome, Edge eða Firefox til að taka upp samtal.',\n};\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { unsupportedText } from '../../constants/is-is';\n\nconst UnsupportedBrowserContainer = styled.div`\n    width: 100%;\n    margin: 0 auto;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 0.5rem;\n`;\n\nexport default class UnsupportedBrowser extends React.Component {\n    render() {\n        return (\n            <UnsupportedBrowserContainer>\n                <h1>{unsupportedText.unsupportedBrowserHeading}</h1>\n                <p>{unsupportedText.unsupportedBrowserContent}</p>\n            </UnsupportedBrowserContainer>\n        );\n    }\n}\n","import { ages, genders } from '../constants/demographics';\nimport { Demographic, StoredDemographics } from '../types/user';\n\nconst defaultDemographics: StoredDemographics = {\n    agreed: false,\n    age: {\n        id: '',\n        name: '',\n    },\n    gender: {\n        id: '',\n        name: '',\n    },\n    username: '',\n};\n\n/**\n * Loads the demographics from the localstorage if existing or an empty\n * demographic if none found\n * @returns the demographics stored in localstorage\n */\nexport const loadDemographics = (): StoredDemographics => {\n    const demoString = localStorage.getItem('demographics');\n\n    if (!demoString) {\n        return defaultDemographics;\n    }\n\n    const parsedDemographics = JSON.parse(demoString) as StoredDemographics;\n\n    return combineWithDefault(parsedDemographics);\n};\n\n/**\n * Checks if there is a demographics in the localStorage\n * @returns true if there is else false\n */\nexport const demographicsInStorage = (): boolean => {\n    const demo = localStorage.getItem('demographics');\n\n    if (demo) {\n        return true;\n    }\n\n    return false;\n};\n\n/**\n * Saves the demographics into the localstorage\n * @param demo the StoredDemographics object to save\n */\nexport const saveDemographics = (demo: StoredDemographics) => {\n    localStorage.setItem('demographics', JSON.stringify(demo));\n};\n\n/**\n * Takes a demographics object and makes sure that the values are valid\n * Any non-valid values get set to the default values\n * @param demo the demographics object to combine with default\n * @returns a valid demographics object\n */\nconst combineWithDefault = (demo: any): StoredDemographics => {\n    const { age, agreed, gender, username } = demo;\n    const combinedDemographics = defaultDemographics;\n\n    if (demographicFound(ages, age)) {\n        combinedDemographics.age = age;\n    }\n\n    if (agreed !== undefined) {\n        combinedDemographics.agreed = agreed;\n    }\n\n    if (demographicFound(genders, gender)) {\n        combinedDemographics.gender = gender;\n    }\n\n    if (username) {\n        combinedDemographics.username = username;\n    }\n\n    return combinedDemographics;\n};\n\nconst demographicFound = (\n    demographicArray: Demographic[],\n    demographic: Demographic\n): boolean => {\n    if (demographicArray && demographic) {\n        return demographicArray.some(({ id }) => id === demographic.id);\n    }\n    return false;\n};\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport { Demographic, StoredDemographics } from '../../types/user';\nimport { ages, genders, members } from '../../constants/demographics';\n\nimport Info from './information';\nimport DropdownButton from '../ui/input/dropdown';\nimport Checkbox from '../ui/input/checkbox';\nimport TextInput from '../ui/input/text-input';\nimport NewTabLink from './new-tab-link';\nimport UnsupportedBrowser from '../ui/unsupported-browser';\nimport { isRecordingSupported } from '../../utilities/utils';\nimport {\n    loadDemographics,\n    saveDemographics,\n    demographicsInStorage,\n} from '../../utilities/local-storage';\n\nconst DemographicContainer = styled.form`\n    display: grid;\n    gap: 1rem;\n    width: 40rem;\n    grid-template-columns: 1fr 1fr;\n\n    @media (max-width: 1024px) {\n        width: 100%;\n        grid-template-columns: 1fr;\n    }\n`;\n\nconst UsernameInput = styled(TextInput)`\n    grid-column: 1 / 3;\n\n    @media (max-width: 1024px) {\n        grid-column: 1;\n    }\n`;\n\nconst Information = styled(Info)`\n    grid-column: 1 / 3;\n\n    @media (max-width: 1024px) {\n        grid-column: 1;\n    }\n`;\n\ninterface SubmitButtonProps {\n    disabled: boolean;\n}\n\nconst SubmitButton = styled.button<SubmitButtonProps>`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid ${({ disabled }) => (disabled ? 'gray' : '#60C197')};\n\n    border-radius: 0.1rem;\n\n    background-color: ${({ disabled }) => (disabled ? 'gray' : '#60C197')};\n    color: white;\n\n    cursor: ${({ disabled }) => (disabled ? 'initial' : 'pointer')};\n    &:active {\n        transform: ${({ disabled }) => `translateY(${disabled ? 0 : 2}px)`};\n        outline: none;\n    }\n\n    & span {\n        font-weight: 600;\n        font-size: 1.1rem;\n        padding: 1rem 2rem;\n    }\n\n    grid-column: 1 / 3;\n    width: 100%;\n    margin: 0 auto;\n\n    @media (max-width: 1024px) {\n        grid-column: 1;\n        max-width: 100%;\n    }\n`;\n\nconst AgreeContainer = styled.div`\n    display: grid;\n    grid-template-columns: 10% auto;\n    justify-items: center;\n    align-items: center;\n    cursor: pointer;\n    & span {\n        margin-left: 1rem;\n    }\n\n    grid-column: 1 / 3;\n\n    @media (max-width: 1024px) {\n        grid-column: 1;\n        max-width: 100%;\n    }\n`;\n\ninterface Props {\n    onSubmit: (\n        age: string,\n        gender: string,\n        username: string,\n        reference: string\n    ) => void;\n}\n\ninterface State {\n    agreed: boolean;\n    age: Demographic;\n    gender: Demographic;\n    username: string;\n    reference: Demographic;\n}\n\nexport default class DemographicForm extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            agreed: false,\n            age: {\n                id: '',\n                name: '',\n            },\n            gender: {\n                id: '',\n                name: '',\n            },\n            username: '',\n            reference: {\n                id: '',\n                name: '',\n            },\n        };\n    }\n\n    componentDidMount() {\n        if (demographicsInStorage()) {\n            const user: StoredDemographics = loadDemographics();\n            const { username, age, gender, agreed } = user;\n\n            this.setState({\n                username,\n                age,\n                gender,\n                agreed,\n            });\n        }\n    }\n\n    handleAgree = () => {\n        this.setState({ agreed: !this.state.agreed });\n    };\n\n    onUsernameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const username = e.currentTarget.value;\n        this.setState({ username });\n    };\n\n    onAgeSelect = (value: string) => {\n        const age = ages.find(\n            (val: Demographic) => val.name === value\n        ) as Demographic;\n\n        // Only update if a value was found\n        if (age) {\n            this.setState({ age });\n        }\n    };\n\n    onGenderSelect = (value: string) => {\n        const gender = genders.find(\n            (val: Demographic) => val.name === value\n        ) as Demographic;\n\n        // Only update if a value was found\n        if (gender) {\n            this.setState({ gender });\n        }\n    };\n\n    /**\n     * Updates the state reference to value if found in the list of references\n     * @param value the new reference value\n     */\n    onReferenceSelect = (value: string) => {\n        const reference = members.find(\n            (val: Demographic) => val.name === value\n        ) as Demographic;\n\n        // Only update if a value was found\n        if (reference) {\n            this.setState({ reference });\n        }\n    };\n\n    onSubmit = (event) => {\n        event.preventDefault();\n        const { age, agreed, gender, username, reference } = this.state;\n        if (\n            !agreed ||\n            !age.name ||\n            !gender.name ||\n            !username ||\n            !reference.name\n        ) {\n            return;\n        }\n        this.props.onSubmit(age.id, gender.id, username, reference.id);\n\n        saveDemographics({ age, agreed, gender, username });\n    };\n\n    render() {\n        if (isRecordingSupported()) {\n            const { age, agreed, gender, username, reference } = this.state;\n            const terms = '/skilmalar';\n            const privacypolicy = '/personuvernd';\n            return (\n                <DemographicContainer onSubmit={this.onSubmit}>\n                    <UsernameInput\n                        label={'Notendanafn'}\n                        onChange={this.onUsernameChange}\n                        value={username}\n                    />\n                    <DropdownButton\n                        content={ages.map((age: Demographic) => age.name)}\n                        label={'Aldur'}\n                        onSelect={this.onAgeSelect}\n                        selected={age.name}\n                    />\n                    <DropdownButton\n                        content={genders.map(\n                            (gender: Demographic) => gender.name\n                        )}\n                        label={'Kyn'}\n                        onSelect={this.onGenderSelect}\n                        selected={gender.name}\n                    />\n                    <DropdownButton\n                        content={members.map(\n                            (reference: Demographic) => reference.name\n                        )}\n                        label={'Tilvísun'}\n                        onSelect={this.onReferenceSelect}\n                        selected={reference.name}\n                    />\n                    <Information title={'Hvers vegna skiptir þetta máli?'}>\n                        <p>\n                            Ofantaldar upplýsingar eru notaðar til að meta\n                            hversu lýðfræðilega dreift gagnasafnið er. Því\n                            dreifðara og fjölbreyttara sem það er, því betra.\n                            Sjá <NewTabLink href={terms}>skilmála</NewTabLink>{' '}\n                            og{' '}\n                            <NewTabLink href={privacypolicy}>\n                                persónuverndaryfirlýsingu\n                            </NewTabLink>{' '}\n                            verkefnisins.\n                        </p>\n                    </Information>\n                    <AgreeContainer onClick={this.handleAgree}>\n                        <Checkbox\n                            checked={agreed}\n                            onChange={this.handleAgree}\n                        />\n                        <span>\n                            Ég staðfesti að hafa kynnt mér{' '}\n                            <NewTabLink href={terms}>skilmála</NewTabLink> og{' '}\n                            <NewTabLink href={privacypolicy}>\n                                persónuverndaryfirlýsingu\n                            </NewTabLink>{' '}\n                            verkefnisins.\n                        </span>\n                    </AgreeContainer>\n                    <SubmitButton\n                        disabled={\n                            !agreed || !age.name || !gender.name || !username\n                        }\n                    >\n                        <span>Áfram</span>\n                    </SubmitButton>\n                </DemographicContainer>\n            );\n        } else {\n            return <UnsupportedBrowser />;\n        }\n    }\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { v4 as uuid } from 'uuid';\n\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport Layout from '../ui/layout';\nimport Chatroom from '../chat/room';\nimport DemographicForm from './demographics';\nimport { UserClient, UserDemographics } from '../../types/user';\nimport { AudioChunk, AudioInfo } from '../../types/audio';\nimport * as api from '../../services/api';\n\nconst SetupContainer = styled.div`\n    width: 100%;\n    max-width: 40rem;\n    display: flex;\n    flex-direction: column;\n\n    & > * {\n        margin: 0 auto;\n    }\n`;\n\ninterface State {\n    demographics?: UserDemographics;\n    recording?: AudioInfo;\n    uploading: boolean;\n    uploaded: boolean;\n    uploadError: boolean;\n    userClient?: UserClient;\n}\n\ntype Props = RouteComponentProps;\n\nclass Setup extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            demographics: undefined,\n            recording: undefined,\n            uploading: false,\n            uploaded: false,\n            uploadError: false,\n            userClient: undefined,\n        };\n    }\n\n    onSubmitDemographics = (\n        age: string,\n        gender: string,\n        username: string,\n        reference: string\n    ) => {\n        this.setState({ demographics: { age, gender, reference } });\n        const id = uuid();\n        const userClient: UserClient = {\n            agreed: false,\n            id,\n            username,\n            voice: false,\n        };\n        this.setState({ userClient });\n    };\n\n    onUpload = async (recording: AudioInfo) => {\n        const { demographics } = this.state;\n        try {\n            await api.recordingFinished(recording, demographics);\n            // Push to thanks page\n            const { history } = this.props;\n            history.push('/takk');\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    onChunkReceived = async (chunk: AudioChunk) => {\n        const { demographics } = this.state;\n        chunk.chunkNumber === 1\n            ? await api.uploadChunk(chunk, demographics) // include demo in first chunk\n            : await api.uploadChunk(chunk);\n    };\n\n    render() {\n        const { demographics, userClient } = this.state;\n        const isReady = !(!demographics || !userClient);\n        return (\n            <Layout>\n                <SetupContainer>\n                    {!isReady ? (\n                        <DemographicForm onSubmit={this.onSubmitDemographics} />\n                    ) : (\n                        <Chatroom\n                            onUpload={this.onUpload}\n                            userClient={userClient}\n                            onChunkReceived={this.onChunkReceived}\n                        />\n                    )}\n                </SetupContainer>\n            </Layout>\n        );\n    }\n}\n\nexport default withRouter(Setup);\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport Layout from '../ui/layout';\n\nconst ThanksContainer = styled.div`\n    width: 100%;\n    max-width: 40rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nconst Button = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 1rem 2rem;\n    cursor: pointer;\n    font-size: 1.8rem;\n    font-weight: 600;\n    background-color: #60c197;\n    border: none;\n    color: white;\n\n    :active {\n        transform: translateY(2px);\n    }\n`;\n\ninterface State {}\n\ntype Props = RouteComponentProps;\n\nclass Thanks extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    handleClick = () => {\n        const { history } = this.props;\n        history.push('/');\n    };\n\n    render() {\n        return (\n            <Layout>\n                <ThanksContainer>\n                    <h2>Takk fyrir að taka þátt</h2>\n                    <Button onClick={this.handleClick}>Aftur á forsíðu</Button>\n                </ThanksContainer>\n            </Layout>\n        );\n    }\n}\n\nexport default withRouter(Thanks);\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport TextInput from '../ui/input/text-input';\nimport Layout from '../ui/layout';\nimport UnsupportedBrowser from '../ui/unsupported-browser';\nimport { isRecordingSupported } from '../../utilities/utils';\n\nimport NewTabLink from '../setup/new-tab-link';\n\nconst FrontPageContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 40rem;\n    max-width: 100%;\n    gap: 1.5rem;\n`;\n\nconst SubmitButton = styled.button`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    background-color: #60c197;\n    border: none;\n    color: white;\n    cursor: pointer;\n    font-size: 2rem;\n    height: 3.5rem;\n    margin: 1rem 0rem;\n\n    :active {\n        transform: translateY(2px);\n    }\n\n    & > * {\n        padding: 0.5rem 1rem;\n    }\n`;\n\nconst JoinContainer = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst UrlInput = styled(TextInput)``;\n\nconst RobotAndJoinContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 50rem;\n    max-width: 100%;\n\n    @media (min-width: 30em) {\n        flex-direction: row;\n\n        > * {\n            flex-basis: 100%;\n        }\n\n        > * + * {\n            margin: 0 2rem;\n        }\n    }\n`;\n\nconst MarsContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Mars = styled.div`\n    content: url(/images/mars.svg);\n    display: block;\n    max-width: 5rem;\n    margin-bottom: 1rem;\n\n    @media (min-width: 30em) {\n        max-width: 8rem;\n    }\n`;\n\nconst WelcomeTextContainer = styled.div``;\n\ntype Props = RouteComponentProps;\n\ninterface State {\n    userUrl: string;\n}\n\nclass FrontPage extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        // autogenerate a chatroom name from the timestamp\n        this.state = {\n            userUrl: (+new Date()).toString(30),\n        };\n    }\n\n    onUrlChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const userUrl = e.currentTarget.value;\n        this.setState({ userUrl });\n    };\n\n    handleJoin = (event) => {\n        event.preventDefault();\n        const { history } = this.props;\n        const { userUrl } = this.state;\n        history.push(`/${userUrl}`);\n    };\n\n    render() {\n        if (isRecordingSupported()) {\n            return (\n                <Layout>\n                    <FrontPageContainer>\n                        <RobotAndJoinContainer>\n                            <MarsContainer>\n                                <Mars />\n                            </MarsContainer>\n                            <JoinContainer onSubmit={this.handleJoin}>\n                                <UrlInput\n                                    label={'Opna spjall'}\n                                    value={this.state.userUrl}\n                                    placeholder={'Spjallkóði'}\n                                    onChange={this.onUrlChange}\n                                />\n                                <SubmitButton>Opna</SubmitButton>\n                            </JoinContainer>\n                        </RobotAndJoinContainer>\n                        <WelcomeTextContainer>\n                            <h3>Kæri þátttakandi,</h3>\n                            <p>\n                                Þátttaka þín í þessu verkefni felst í því að\n                                eiga samtal við annan þátttakenda í 15 til 30\n                                mínútur. Samtölin munu í kjölfarið vera rituð\n                                niður. Afurð þessa verkefnis er opið og\n                                aðgengilegt gagnasafn af samræðum á íslensku.\n                                Þetta gagnasafn er partur Samróms gagnasafninum,\n                                hérna má{' '}\n                                <NewTabLink href={'https://samromur.is/um'}>\n                                    lesa meira\n                                </NewTabLink>{' '}\n                                um það. Slík gögn koma til nota við þróun\n                                máltæknilausna og eru mikilvægur þáttur í að\n                                vernda íslenskuna á stafrænum tímum.\n                                Þátttakendur verða ekki nafngreindir en kyn og\n                                aldur þátttakenda mun fylgja með í gagnasafninu.\n                            </p>\n                            <h4>Um hvað má spjalla?</h4>\n                            <p>\n                                Umræðuefnið má vera allt milli himins og jarðar\n                                en hafa ber í huga að samtalið og skrifleg\n                                útgáfa þess verður opin öllum. Vegna þess biðjum\n                                við um að engar persónugreinanlegar upplýsingar\n                                verði hluti af samtalinu. Dæmi um slíkar\n                                upplýsingar er nafn, kennitala eða heimilisfang\n                                þitt og annara. Ef slíkar upplýsingar slæðast\n                                með má hafa samband við okkur á netfangið\n                                samromur@ru.is og við fjarlægjum þær áður en\n                                gögnin verða birt. Stöku slettur úr öðrum\n                                tungumálum eru í lagi og það sama á við um\n                                lengri þagnir, hikorð og önnur hljóð svo sem\n                                ræskingar eða hósta. Það sem skiptir mestu er að\n                                talað sé með eðlilegum hætti en þetta er jú allt\n                                hluti af eðlilegu talmáli.\n                            </p>\n                            <h4>Hvernig fer spjallið fram?</h4>\n                            <p>\n                                Á vefsíðunni spjall.samromur.is geta\n                                þátttakendur búið til spjallsvæði sem þeir geta\n                                deilt með öðrum þátttakendum. Við þátttöku má\n                                notast við síma, tölvu eða spjaldtölvu frá öðrum\n                                framleiðendum en Apple einnig þarf að nota\n                                Chrome, Edge eða Firefox vafrann. Til þess að\n                                tryggja góð hljóðgæði er mælt er með því að\n                                þátttakendur noti heyrnartól með hljóðnema. Ef\n                                þátttakendur taka þátt í sama herberginu er\n                                mikilvægt að tryggja að nægileg fjarlægð sé á\n                                milli þátttakenda svo framlag hvers þátttakenda\n                                haldist hreint af öðru tali.\n                            </p>\n                            <NewTabLink href=\"https://www.youtube.com/watch?v=pwi1fD0A6L4&feature=youtu.be\">\n                                Stutt demo\n                            </NewTabLink>\n                        </WelcomeTextContainer>\n                    </FrontPageContainer>\n                </Layout>\n            );\n        } else {\n            return (\n                <Layout>\n                    <UnsupportedBrowser />\n                </Layout>\n            );\n        }\n    }\n}\n\nexport default withRouter(FrontPage);\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport { SessionMetadata } from '../../types/sessions';\nimport { getHumanReadableTime, splitSeconds } from '../../utilities/utils';\n\nconst LeaderBoardContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    gap: 0.5rem;\n    align-items: left;\n`;\n\nconst LeaderBoardItem = styled.div`\n    width: 100%;\n`;\n\ninterface BarProps {\n    percents: number;\n}\n\nconst LeaderBoardBar = styled.div<BarProps>`\n    width: ${({ percents }) => percents}%;\n    height: 3rem;\n    background-color: #60c197;\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\ninterface Reference {\n    id: string;\n    name: string;\n    collected: number;\n}\n\ninterface Props {\n    sessions: SessionMetadata[];\n    participants: any;\n    partial: boolean;\n}\n\nexport default class Board extends React.Component<Props> {\n    constructor(props: Props) {\n        super(props);\n    }\n\n    getInitialLeaderBoard = (): Reference[] => {\n        const l: Reference[] = [];\n        for (const reference of this.props.participants) {\n            l.push({\n                name: reference.name,\n                id: reference.id,\n                collected: 0,\n            });\n        }\n        return l;\n    };\n\n    calculateLeaderBoard = (): Reference[] => {\n        const showPartial = this.props.partial;\n        const leaderBoard = this.getInitialLeaderBoard();\n        for (const session of this.props.sessions) {\n            const { client_a, client_b } = session;\n\n            for (const ref of leaderBoard) {\n                if (\n                    client_a &&\n                    ref.id === client_a.reference &&\n                    client_a.duration_seconds &&\n                    (showPartial ? true : client_b && client_b.duration_seconds)\n                ) {\n                    ref.collected += client_a.duration_seconds;\n                    break;\n                } else if (\n                    client_b &&\n                    ref.id === client_b.reference &&\n                    showPartial\n                ) {\n                    ref.collected += client_b.duration_seconds;\n                    break;\n                }\n            }\n        }\n\n        // Order by total duration seconds\n        const sortedLeaderBoard = leaderBoard.sort((a, b) => {\n            if (a.collected > b.collected) {\n                return -1;\n            }\n            if (a.collected < b.collected) {\n                return 1;\n            }\n            return 0;\n        });\n\n        console.log(sortedLeaderBoard);\n        return sortedLeaderBoard;\n    };\n\n    render() {\n        const leaderBoard = this.calculateLeaderBoard();\n        return (\n            <LeaderBoardContainer>\n                {leaderBoard.map((ref: Reference) => {\n                    const percent =\n                        (ref.collected * 100) / leaderBoard[0].collected;\n                    return (\n                        <LeaderBoardItem key={ref.id}>\n                            {`${ref.name}`}\n                            <LeaderBoardBar percents={percent}>\n                                {percent > 15 &&\n                                    getHumanReadableTime(\n                                        splitSeconds(ref.collected)\n                                    )}\n                            </LeaderBoardBar>\n                        </LeaderBoardItem>\n                    );\n                })}\n            </LeaderBoardContainer>\n        );\n    }\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport * as api from '../../services/api';\nimport {\n    ages,\n    genders,\n    members,\n    references,\n    students,\n} from '../../constants/demographics';\nimport { SessionMetadata } from '../../types/sessions';\nimport { getHumanReadableTime, splitSeconds } from '../../utilities/utils';\n\nconst SessionContainer = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst TitleContainer = styled.div`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: 600;\n    border-bottom: 1px solid gray;\n    margin-bottom: 0.5rem;\n`;\n\nconst Subtitle = styled.span`\n    font-weight: 600;\n`;\n\nconst ReferenceText = styled.span`\n    font-weight: 600;\n    text-align: left;\n`;\n\nconst Clients = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n`;\n\nconst ClientContainer = styled.div`\n    width: 50%;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst Button = styled.button`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0.5rem 2rem;\n    cursor: pointer;\n    font-size: 1.2rem;\n    font-weight: 600;\n    background-color: gray;\n    color: white;\n    margin-top: 0.5rem;\n    border: none\n\n    :active {\n        transform: translateY(2px);\n    }\n`;\n\ninterface Props {\n    session: SessionMetadata;\n    showPartial: boolean;\n}\n\nexport const Session: React.FunctionComponent<Props> = ({\n    session,\n    session: { client_a, client_b },\n    showPartial,\n}) => {\n    const participantA = 'Viðmælandi a';\n    const participantB = 'Viðmælandi b';\n    const yearsOld = 'ára';\n    const sampleRateMeasurement = 'hz';\n    const reference = 'Tilvísun: ';\n\n    const getAge = (value: string): string => {\n        const age = ages.find((val) => val.id === value);\n        return age ? age.name : value;\n    };\n\n    const getGender = (value: string): string => {\n        const gender = genders.find((val) => val.id === value);\n        return gender ? gender.name : value;\n    };\n\n    const handleClick = () => {\n        const id = session.session_id;\n        api.downloadSession(id).catch((error) => console.error(error));\n    };\n\n    const a_time = client_a\n        ? getHumanReadableTime(splitSeconds(client_a.duration_seconds))\n        : '0 mín.';\n    const b_time = client_b\n        ? getHumanReadableTime(splitSeconds(client_b.duration_seconds))\n        : '0 mín.';\n    /**\n     * Fetches the reference person of the session\n     * @returns the reference of client A, or null if not found in the list of references\n     */\n    const getReference = (): string => {\n        const allReferences = [...references, ...students, ...members];\n        const reference = allReferences.find(\n            (val) =>\n                val.id === client_a?.reference || val.id === client_b?.reference\n        );\n        return reference ? reference.name : '';\n    };\n\n    if (\n        showPartial ||\n        (client_a?.duration_seconds && client_b?.duration_seconds)\n    ) {\n        return (\n            <SessionContainer>\n                <TitleContainer>{session.session_id}</TitleContainer>\n                <Clients>\n                    {client_a && (\n                        <ClientContainer>\n                            <Subtitle>{participantA}</Subtitle>\n                            <span>{getGender(client_a.gender)}</span>\n                            <span>\n                                {getAge(client_a.age)} {yearsOld}\n                            </span>\n                            <span>\n                                {client_a.sample_rate} {sampleRateMeasurement}\n                            </span>\n                            <span>{a_time}</span>\n                        </ClientContainer>\n                    )}\n                    {client_b && (\n                        <ClientContainer>\n                            <Subtitle>{participantB}</Subtitle>\n                            <span>{getGender(client_b.gender)}</span>\n                            <span>\n                                {getAge(client_b.age)} {yearsOld}\n                            </span>\n                            <span>\n                                {client_b.sample_rate} {sampleRateMeasurement}\n                            </span>\n                            <span>{b_time}</span>\n                        </ClientContainer>\n                    )}\n                    {getReference() && (\n                        <ClientContainer>\n                            <ReferenceText>\n                                {reference} {getReference()}\n                            </ReferenceText>\n                        </ClientContainer>\n                    )}\n                </Clients>\n                <Button onClick={handleClick}>Sækja</Button>\n            </SessionContainer>\n        );\n    } else {\n        return <></>;\n    }\n};\n\nexport default Session;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n    name: string;\n    value: string | number;\n}\n\nconst Title = styled.div`\n    font-size: 1rem;\n    color: gray;\n`;\n\nconst Value = styled.div`\n    font-size: 1.5rem;\n`;\n\nexport const Stat: React.FunctionComponent<Props> = (props) => {\n    return (\n        <div>\n            <Title>{props.name}</Title>\n            <Value>{props.value}</Value>\n        </div>\n    );\n};\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { SessionMetadata } from '../../types/sessions';\nimport { getHumanReadableTime, splitSeconds } from '../../utilities/utils';\nimport { Stat } from './stat';\n\ninterface Props {\n    sessions: SessionMetadata[];\n    partial: boolean;\n}\n\nconst StatsContainer = styled.div`\n    margin-bottom: 1rem;\n`;\n\nexport const Stats: React.FunctionComponent<Props> = (props) => {\n    let numberOfRecordings = 0.0;\n    let numberOfHalfRecordings = 0.0;\n    let totalTime = 0.0;\n\n    const { sessions, partial } = props;\n\n    for (const session of sessions) {\n        const { client_a, client_b } = session;\n\n        if (partial) {\n            if (client_a && client_b) {\n                // Count larger value from client_a or b\n                client_a.duration_seconds > client_b.duration_seconds\n                    ? (totalTime += client_a.duration_seconds)\n                    : (totalTime += client_b.duration_seconds);\n\n                // If client a or b is missing their sound, add as half recording\n                client_a.duration_seconds && client_b.duration_seconds\n                    ? numberOfRecordings++\n                    : numberOfHalfRecordings++;\n            } else {\n                client_a\n                    ? (totalTime += client_a.duration_seconds)\n                    : (totalTime += client_b.duration_seconds);\n                numberOfHalfRecordings++;\n            }\n        } else {\n            // Hide partial.\n            // Demand both that client a and b should exist and that their duration is greater than zero.\n            if (\n                client_a &&\n                client_b &&\n                client_a.duration_seconds &&\n                client_b.duration_seconds\n            ) {\n                // Count larger value from client_a or b\n                client_a.duration_seconds > client_b.duration_seconds\n                    ? (totalTime += client_a.duration_seconds)\n                    : (totalTime += client_b.duration_seconds);\n\n                numberOfRecordings++;\n            }\n        }\n    }\n\n    return (\n        <StatsContainer>\n            <Stat name={'Fullkomin samtöl'} value={numberOfRecordings} />\n            {partial && (\n                <Stat\n                    name={'Ófullkomin samtöl'}\n                    value={numberOfHalfRecordings}\n                />\n            )}\n            <Stat\n                name={'Heildarlengd samtala'}\n                value={getHumanReadableTime(splitSeconds(totalTime))}\n            />\n        </StatsContainer>\n    );\n};\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport Switch from 'react-switch';\n\nimport Layout from '../ui/layout';\nimport Board from '../leaderboard/barlist';\nimport Session from './session';\n\nimport * as api from '../../services/api';\nimport { SessionMetadata } from '../../types/sessions';\nimport { members } from '../../constants/demographics';\nimport { Stats } from './stats';\n\nconst AdminPageContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 30rem;\n    max-width: 100%;\n    gap: 1.5rem;\n`;\n\nconst SwitchContainer = styled.label`\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n`;\n\nconst SessionsContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    gap: 1.5rem;\n`;\n\ntype Props = RouteComponentProps;\ninterface State {\n    sessions: SessionMetadata[];\n    showPartial: boolean;\n}\n\nclass AdminPage extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            sessions: [],\n            showPartial: true,\n        };\n        this.handlePartialToggleChange = this.handlePartialToggleChange.bind(\n            this\n        );\n    }\n\n    componentDidMount = async () => {\n        // Show partial recordings if partial=true is in the url\n        const URLPartial = new URLSearchParams(window.location.search).get(\n            'partial'\n        );\n        const showPartial =\n            URLPartial !== null && URLPartial === 'true' ? true : false;\n        // Always fetch the partial recordings because it's one less network\n        // call and easier to show them once we have them\n        const sessions = await api.getSessions(this.state.showPartial);\n        this.handlePartialToggleChange(showPartial);\n        this.setState({ sessions });\n    };\n\n    /**\n     * Indicate whether partial recordings are shown\n     */\n    handlePartialToggleChange = (showPartial: boolean) => {\n        const updatedURL =\n            '//' +\n            window.location.host +\n            window.location.pathname +\n            '?partial=' +\n            showPartial;\n        this.setState({ showPartial });\n        window.history.pushState(null, 'Spjall - mamma', updatedURL);\n    };\n\n    render() {\n        const { sessions, showPartial } = this.state;\n        return (\n            <Layout>\n                <AdminPageContainer>\n                    <SwitchContainer>\n                        <span>Ófullkomin samtöl </span>\n                        <Switch\n                            onChange={this.handlePartialToggleChange}\n                            checked={showPartial}\n                        />\n                    </SwitchContainer>\n                    <Stats sessions={sessions} partial={showPartial} />\n                    <Board\n                        sessions={sessions}\n                        participants={members}\n                        partial={showPartial}\n                    />\n                    <SessionsContainer>\n                        {sessions.map((session: SessionMetadata, i: number) => {\n                            return (\n                                <Session\n                                    key={i}\n                                    session={session}\n                                    showPartial={showPartial}\n                                />\n                            );\n                        })}\n                    </SessionsContainer>\n                </AdminPageContainer>\n            </Layout>\n        );\n    }\n}\n\nexport default withRouter(AdminPage);\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport Layout from '../ui/layout';\n\nconst TextContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 30rem;\n    max-width: 100%;\n    gap: 1.5rem;\n`;\n\ntype Props = RouteComponentProps & LegalDocProps;\n\ninterface ParagraphProps {\n    text: Array<any>;\n}\n\ninterface LegalDocProps {\n    contents: Array<any>;\n}\n\ninterface PhraseLinkProps {\n    item: { link: string; text: string };\n}\n\nclass PhraseLink extends React.Component<PhraseLinkProps> {\n    render() {\n        return <a href={this.props.item.link}>{this.props.item.text}</a>;\n    }\n}\n\nclass ParagraphsWithLinks extends React.Component<ParagraphProps> {\n    ParseParagraph() {\n        return this.props.text.map((phrase) => {\n            if (Array.isArray(phrase)) {\n                return phrase.map((phrase) => (\n                    <PhraseLink key={phrase.text} item={phrase} />\n                ));\n            } else {\n                return phrase;\n            }\n        });\n    }\n    render() {\n        return <p> {this.ParseParagraph()}</p>;\n    }\n}\n\nclass Paragraphs extends React.Component<ParagraphProps> {\n    ParseParagraphs() {\n        return this.props.text.map((paragraph) => {\n            if (Array.isArray(paragraph)) {\n                return <ParagraphsWithLinks text={paragraph} />;\n            } else {\n                return <p>{paragraph}</p>;\n            }\n        });\n    }\n    render() {\n        return <div> {this.ParseParagraphs()}</div>;\n    }\n}\n\nclass LegalDoc extends React.Component<Props> {\n    DisplayArticles(articles: Array<any>) {\n        return articles.map((article) => {\n            return (\n                <div key={article.heading}>\n                    <h3> {article.heading} </h3>\n                    <Paragraphs text={article.paragraphs} />\n                </div>\n            );\n        });\n    }\n\n    DisplayDocument() {\n        return this.props.contents.map((data) => {\n            return (\n                <div key={data.title}>\n                    <h2> {data.title} </h2>\n                    <p> {data.date} </p>\n                    <Paragraphs text={data.description} />\n                    {this.DisplayArticles(data.articles)}\n                </div>\n            );\n        });\n    }\n\n    render() {\n        return (\n            <Layout>\n                <TextContainer>{this.DisplayDocument()}</TextContainer>\n            </Layout>\n        );\n    }\n}\n\nexport default withRouter(LegalDoc);\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport Layout from '../ui/layout';\nimport Board from './barlist';\nimport * as api from '../../services/api';\nimport { SessionMetadata } from '../../types/sessions';\nimport { students } from '../../constants/demographics';\n\nconst LeaderBoardPageContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 30rem;\n    max-width: 100%;\n    gap: 1.5rem;\n`;\n\ntype Props = RouteComponentProps;\ninterface State {\n    sessions: SessionMetadata[];\n    partial: boolean;\n}\n\nclass LeaderBoard extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            sessions: [],\n            partial: true,\n        };\n    }\n\n    componentDidMount = async () => {\n        const sessions = await api.getSessions(this.state.partial);\n        this.setState({ sessions });\n    };\n\n    render() {\n        return (\n            <Layout>\n                <LeaderBoardPageContainer>\n                    <Board\n                        sessions={this.state.sessions}\n                        participants={students}\n                        partial={this.state.partial}\n                    />\n                </LeaderBoardPageContainer>\n            </Layout>\n        );\n    }\n}\n\nexport default withRouter(LeaderBoard);\n","export const terms = [\n    {\n        title:\n            'Skilmálar vegna þátttöku í upptökum á samræðum og fyrirspurnum.',\n        date: 'Skilmálar voru uppfærðir 21.september 2020.',\n        description: [\n            [\n                'Á vefsvæðinu ',\n                [\n                    {\n                        link: 'https://spjall.samromur.is',\n                        text: 'spjall.samromur.is',\n                    },\n                ],\n                ' getur þú tekið þátt í gerð Samræðu og fyrirspurna gagnasafnsins. Í þátttöku þinni felst að þú tekur upp samtalið þitt við annan þátttakenda og leggur eftir atvikum, til lýðfræðilegar upplýsingar. Með gerð gagnasafnsins verður hægt að styðja við og efla þróun máltæknilausna fyrir íslensku.',\n            ],\n        ],\n        articles: [\n            {\n                heading: 'Þátttaka í gerð gagnasafnsins',\n                paragraphs: [\n                    [\n                        'Þú tekur þátt með því að taka upp spjall í gegnum vefsíðuna ',\n                        [\n                            {\n                                link: 'https://spjall.samromur.is/',\n                                text: 'spjall.samromur.is',\n                            },\n                        ],\n                        '. Gott er að lengd spjallsins sé á bilinu 15 til 30 mínútur. Spjallið verður ritað niður að samtali loknu. Markmið gagnasöfnunarinnar er að fá gögn um eðlilegt íslenskt talmál og því er mikilvægt að þátttakendur tali með eðlilegum hætti og reyna að forðast að notkun enskra orða.',\n                    ],\n                    [\n                        'Sem þátttakandi samþykkir þú að öll þín framlög (raddupptaka, og eftir atvikum lýðfræðilegar upplýsingar) falli undir ',\n                        [\n                            {\n                                link:\n                                    'https://creativecommons.org/licenses/by/4.0/',\n                                text: 'Creative Commons by attribution leyfi',\n                            },\n                        ],\n                        '.',\n                    ],\n                    'Valkvætt er að skrá inn lýðfræðilegar upplýsingar, þ.e. aldursbil, kyn og notendanafn. Með því að skrá inn lýðfræðilega upplýsingar um þig staðfestir þú að þær séu skráðar af heilindum og séu sannar. Ósannar og rangar upplýsingar geta haft neikvæð áhrif á gagnasöfnunina.',\n                    'Þátttakendur þurfa að hafa náð 18 ára aldri og geta gefið upplýst samþykki fyrir þátttöku.',\n                ],\n            },\n            {\n                heading: 'Aðgengi að gagnasafni',\n                paragraphs: [\n                    [\n                        'Gagnasafnið verður aðgengilegt í heild sinni með ',\n                        [\n                            {\n                                link:\n                                    'https://creativecommons.org/licenses/by/4.0/',\n                                text: 'Creative Commons by attribution leyfi',\n                            },\n                        ],\n                        ' á CLARIN.',\n                    ],\n                ],\n            },\n            {\n                heading: 'Persónuvernd',\n                paragraphs: [\n                    [\n                        'Ef þú lætur í té framlag í formi samtals og eftir atvikum lýðfræðilegar upplýsingar kunna upplýsingarnar í einhverjum tilvikum að vera persónugreinanlegar. Í persónuverndaryfirlýsingu Háskólans í Reykjavík, ',\n                        [\n                            {\n                                link: 'https://spjall.samromur.is/personuvernd',\n                                text: 'HR',\n                            },\n                        ],\n                        ' kemur fram hvernig HR nýtir persónugreinanlegar upplýsingar.',\n                    ],\n                ],\n            },\n            {\n                heading: 'Fyrirvari',\n                paragraphs: [\n                    [\n                        'Háskólinn í Reykjavík er undanþeginn hvers kyns bótaábyrgð vegna notkunar gagnasafnsins sem er aðgengilegt öllum með ',\n                        [\n                            {\n                                link:\n                                    'https://creativecommons.org/licenses/by/4.0/',\n                                text: 'Creative Commons by attribution leyfi.',\n                            },\n                        ],\n                    ],\n                ],\n            },\n            {\n                heading: 'Brot á skilmálum',\n                paragraphs: [\n                    'Ef upp kemst um brot þátttakenda á þessum skilmálum áskilur Háskólinn í Reykjavík sér rétt til að fjarlægja framlög viðkomandi þátttakanda úr gagnasafninu.',\n                ],\n            },\n            {\n                heading: 'Annað',\n                paragraphs: [\n                    'Hægt er að hafa samband við okkur í gegnum netfangið samromur@hr.is. Skilmálar Háskólans í Reykjavík eru endurskoðaðir reglulega og kunna því að taka breytingum. ',\n                ],\n            },\n        ],\n    },\n];\n","export const privacypol = [\n    {\n        title: 'Persónuverndaryfirlýsing Háskólans í Reykjavík',\n        description: [\n            'Með persónuverndaryfirlýsingu þessari er greint frá því hvernig Háskólinn í Reykjavík ehf., kt. 510105-4190, Menntavegur 1, 102 Reykjavík (hér eftir „HR\", „stofnunin\" eða „við\" ), stendur að vinnslu, s.s. söfnun, skráningu, vistun og miðlun persónugreinanlegra upplýsinga um einstaklinga (hér eftir einnig „ þú\").',\n            'Yfirlýsingin fjallar einkum um vinnslu persónuupplýsinga þegar einstaklingar: ',\n            [\n                '• heimsækja vefinn, ',\n                [\n                    {\n                        link: 'https://spjall.samromur.is/',\n                        text: 'spjall.samromur.is',\n                    },\n                ],\n                '. ',\n            ],\n            '• taka þátt í gerð Samræðu og fyrirspurna gagnasafnsins.',\n            'HR vinnur persónuupplýsingar í samræmi við gildandi persónuverndarlöggjöf á Íslandi á hverjum tíma. Persónuverndaryfirlýsing þessi er byggð á lögum nr. 90/2018 um persónuvernd og vinnslu persónuupplýsinga („persónuverndarlög\").',\n        ],\n        articles: [\n            {\n                heading: 'Persónuvernd er HR mikilvæg',\n                paragraphs: [\n                    'Öflug persónuvernd er HR kappsmál og leggjum við mikla áherslu á að virða réttindi einstaklinga og að öll meðferð persónuupplýsinga sé ávallt í samræmi við gildandi regluverk á hverjum tíma, sem og í samræmi við bestu venjur á sviði máltækni.',\n                ],\n            },\n            {\n                heading:\n                    'Hvaða persónuupplýsingum safnar HR um þig og hver er tilgangurinn með söfnuninni?',\n                paragraphs: [\n                    'HR leggur áherslu á að vinna einungis þær persónuupplýsingar sem nauðsynlegar eru í samræmi við þann tilgang sem liggur að baki söfnun upplýsinganna. HR vinnur persónuupplýsingar ekki frekar í óskyldum tilgangi nema einstaklingi sé tilkynnt um slíkt og þá heimild sem vinnslan byggir á. HR safnar, eins og við á hverju sinni, einkum eftirfarandi persónuupplýsingum: ',\n                    '• raddupptökum',\n                    '• lýðfræðilegum upplýsingum s.s. aldur, kyn, og notendanafni.',\n                    '• samskiptaupplýsingum, s.s. tölvupósti ',\n                    '• stafrænum fótsporum, s.s. nethegðun ',\n                    'HR vinnur persónuupplýsingar einkum í þeim tilgangi að: ',\n                    '• búa til opið íslenskt samræðu og fyrirspurnar gagnasafns til að styðja við og efla rannsóknir og þróun máltæknilausna fyrir íslensku.',\n                    [\n                        'Þegar þú notar vefinn ',\n                        [\n                            {\n                                link: 'https://spjall.samromur.is/',\n                                text: 'spjall.samrómur.is',\n                            },\n                        ],\n                        ' söfnum við upplýsingum um notkun þína, þ.e. IP tölu, tegund eða útgáfu vafra sem þú notar, tímasetningu og tímalengd heimsóknar og hvaða undirsíður þú heimsækir innan vef Samróms. Hér má finna nánari upplýsingar um notkun okkar á vafrakökum (e. cookies), ',\n                        [\n                            {\n                                link: 'https://samrómur.is/vafrakökustefna',\n                                text: 'https://www.samromur.is/vafrakokustefna',\n                            },\n                        ],\n                        '.',\n                    ],\n                ],\n            },\n            {\n                heading: 'Lagalegur grundvöllur fyrir vinnslu',\n                paragraphs: [\n                    'HR safnar og vinnur persónuupplýsingar byggt á heimild í 6. tl. 1. mgr. 9. gr. persónuverndarlaga, þ.e. vegna lögmætra hagsmuna stofnunarinnar. Eftir atvikum kann HR einnig að vinna persónuupplýsingar byggt á samþykki þínu, sbr. 1. tl.1. mgr. 9. gr. persónuverndarlaga, s.s. ef þú skráir þig á póstlista okkar.',\n                    'Máltækni miðar að því að þróa búnað sem getur unnið með og skilið tungumál og stuðlar að notkun þeirra í samskiptum manns og tölvu. HR stuðlar að aðgengi almennings að íslensku raddgagnasafni til að styðja við og efla aðila sem vinna að þróun íslenskra máltæknilausna.',\n                    'Gagnasafnið er mikilvægt skref til að tryggja framtíð íslenskunnar og þar með menningu okkar. Nauðsynlegt er að tryggja að íslenskan standi jafnfætis öðrum tungumálum í síbreytilegum og hröðum tækniheimi og nýttir séu sem flestir möguleikar á hagnýtingu máltækni í nútíma samfélagi.',\n                    'Til að greiða fyrir gerð fullkomins raddgagnasafns eru þátttakendur beðnir um að gefa upp upplýsingar um aldur, kyn og notendanafn. Þessar upplýsingar bæta gæði samræðu og fyrirspurnar gagnasafnsins og eru liður í því að tryggja að gagnasafnið endurspegli sem flesta hópa samfélagsins.',\n                    'HR leggur sitt af mörkum til að tryggja að íslenskan glatist ekki með því að gera íslenskt samræðu og fyrirspurnar gagnasafn sem er í stöðugri þróun aðgengilegt öllum í ótakmarkaðan tíma. Samtalið og upplýsingarnar verða einungis notaðar til þess að skapa þekkingu á þessu mikilvæga sviði. Verkefnið er unnið í almannaþágu svo að framtíðin hljómi vel á íslensku.',\n                ],\n            },\n            {\n                heading: 'Hversu lengi geymum við persónuupplýsingar um þig?',\n                paragraphs: [\n                    'HR geymir persónuupplýsingar í þann tíma sem nauðsynlegur er til að uppfylla tilgang vinnslunnar eins og greint er frá honum hér að ofan.',\n                ],\n            },\n            {\n                heading: 'Frá hverjum safnar HR þínum persónuupplýsingum?',\n                paragraphs: ['Við söfnum persónuupplýsingum aðeins frá þér.'],\n            },\n            {\n                heading:\n                    'Hvenær miðlar HR persónuupplýsingum þínum til þriðju aðila og af hverju?',\n                paragraphs: [\n                    'HR selur ekki undir neinum kringumstæðum persónuupplýsingar um þig. Samrómur er opið gagnasafn og hver sem er getur sótt upptökur og lýðfræðilegar upplýsingar. Mögulegt er því að miðlun persónuupplýsinga geti átt sér stað enda er tilgangurinn með söfnun upplýsinganna að stuðla að aðgengi almennings að gagnasafni með íslenskum röddum til að hægt sé að styðja við og efla aðila sem vinna að þróun íslenskra máltæknilausna.',\n                    'HR miðlar einungis persónuupplýsingum til þriðju aðila sem sækja sérstaklega raddgagnasafnið á vef [https://samromur.is/gagnasafn]Samróms. Mögulegt er að þriðju aðilar sem sækja gagnasafnið vinni gögnin í öðrum tilgangi. Persónuverndaryfirlýsing HR nær ekki til upplýsinga eða vinnslu þriðju aðila en við höfum enga stjórn né berum ábyrgð á notkun, birtingu eða öðrum verkum þeirra.',\n                ],\n            },\n            {\n                heading:\n                    'Öryggi persónuupplýsinga og tilkynning um öryggisbrot',\n                paragraphs: [\n                    'Öryggi í vinnslu persónuupplýsinga er HR mikilvægt og höfum við gripið til viðeigandi tæknilegra og skipulagslegra öryggisráðstafana til að tryggja vernd persónuupplýsinga þinna. Þessum ráðstöfunum er ætlað að vernda persónuupplýsingar gegn því að þær glatist eða breytist fyrir slysni og gegn óleyfilegum aðgangi, afritun, notkun eða miðlun þeirra. Komi upp öryggisbrot er varðar þínar persónuupplýsingar munum við bregðast við í samræmi við persónuverndarlög.',\n                ],\n            },\n            {\n                heading: 'Réttindi þín',\n                paragraphs: [\n                    'Með fyrirvara um þau skilyrði sem nánar er fjallað um í gildandi löggjöf um persónuvernd, þá átt þú rétt á að: ',\n                    '• fá upplýsingar um hvaða persónuupplýsingar stofnunin hefur skráð um þig og uppruna þeirra, sem og upplýsingar um hvernig unnið er með persónuupplýsingar um þig, ',\n                    '• fá aðgang að þeim persónuupplýsingum sem eru unnar um þig, eða óska eftir að þær séu sendar til þriðja aðila, ',\n                    '• persónuupplýsingar þínar séu uppfærðar og leiðréttar ef tilefni er til, ',\n                    '• HR eyði persónuupplýsingum þínum ef ekki er málefnaleg eða lagaleg heimild til að varðveita þær, ',\n                    '• afturkalla samþykki þitt til vinnslu persónuupplýsinga, ef vinnsla byggir á slíku samþykki,',\n                    '• koma á framfæri andmælum ef þú vilt takmarka eða koma í veg fyrir að persónuupplýsingar þínar séu unnar, ',\n                    '• fá upplýsingar um það hvort fram fari sjálfvirk ákvarðanataka, á hvaða rökum slík ákvarðanataka er byggð og endurskoðun á sjálfvirkri ákvarðanatöku.',\n                    'Viljir þú nýta rétt þinn getur þú sent skriflega fyrirspurn á samromur@ru.is. Við munum staðfesta móttöku á beiðninni og að jafnaði bregðast við beiðnum innan mánaðar frá móttöku. Verði ekki unnt að bregðast við innan mánaðar munum við tilkynna þér um töf á afgreiðslu innan mánaðar. Ekki er innheimt gjald þegar einstaklingar nýta rétt sinn í samræmi við ofangreint.',\n                    [\n                        'Þú hefur einnig rétt til að leggja fram kvörtun hjá Persónuvernd sjáir þú ástæðu til þess. Upplýsingar um persónuvernd má finna á heimasíðu þeirra, ',\n                        [\n                            {\n                                link: 'https://www.personuvernd.is/',\n                                text: 'www.personuvernd.is',\n                            },\n                        ],\n                        '.',\n                    ],\n                ],\n            },\n            {\n                heading: 'Frekari upplýsingar',\n                paragraphs: [\n                    [\n                        'Ef þú vilt fá frekari upplýsingar um málefni sem snúa að þínum persónuupplýsingum þá bendum við þér á að hafa samband við ',\n                        [\n                            {\n                                link: 'https://lvl.ru.is/',\n                                text:\n                                    'Mál- og raddtæknistofu Gervigreindarseturs HR',\n                            },\n                        ],\n                        '.',\n                    ],\n                    [\n                        'Háskólinn í Reykjavík ehf. Menntavegur 1, 102 Reykjavík, sími: ',\n                        [{ link: 'tel:599-6200', text: '599 6200' }],\n                        ', ',\n                        [\n                            {\n                                link: 'mailto:samromur@ru.is.',\n                                text: 'samromur@ru.is',\n                            },\n                        ],\n                        '.',\n                    ],\n                ],\n            },\n            {\n                heading:\n                    'Yfirferð og endurskoðun persónuverndaryfirlýsingar HR',\n                paragraphs: [\n                    'Persónuverndaryfirlýsing HR er endurskoðuð reglulega og uppfærð ef tilefni er til. Allar breytingar sem kunna að verða gerðar taka gildi eftir að uppfærð útgáfa hefur verið birt á heimasíðu Samróms.',\n                ],\n            },\n        ],\n        date: 'Þessi persónuverndaryfirlýsing var sett þann 12.10.2020.',\n    },\n];\n","import * as React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Setup from './components/setup/setup';\nimport Thanks from './components/setup/thanks';\nimport FrontPage from './components/frontpage';\nimport AdminPage from './components/admin';\nimport LegalDoc from './components/legal/legaldocument';\nimport LeaderBoard from './components/leaderboard';\nimport { terms } from './constants/terms';\nimport { privacypol } from './constants/privacypolicy';\n\nexport const App: React.FunctionComponent = () => {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/takk\">\n                    <Thanks />\n                </Route>\n                <Route path=\"/mamma-er-best\">\n                    <AdminPage />\n                </Route>\n                <Route path=\"/leaderboard\">\n                    <LeaderBoard />\n                </Route>\n                <Route path=\"/personuvernd\">\n                    <LegalDoc contents={privacypol} />\n                </Route>\n                <Route path=\"/skilmalar\">\n                    <LegalDoc contents={terms} />\n                </Route>\n                <Route path=\"/:roomId\">\n                    <Setup />\n                </Route>\n                <Route path=\"/\">\n                    <FrontPage />\n                </Route>\n            </Switch>\n        </Router>\n    );\n};\n\nexport default App;\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}